

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu May 23 19:36:11 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataBANK0
    41  0059AC                     __pidataBANK0:
    42                           	opt stack 0
    43                           
    44                           ;initializer for SENO_2@F7359
    45  0059AC  0032               	dw	50
    46  0059AE  0043               	dw	67
    47  0059B0  0052               	dw	82
    48  0059B2  005D               	dw	93
    49  0059B4  0063               	dw	99
    50  0059B6  0063               	dw	99
    51  0059B8  005D               	dw	93
    52  0059BA  0052               	dw	82
    53  0059BC  0043               	dw	67
    54  0059BE  0032               	dw	50
    55  0059C0  0021               	dw	33
    56  0059C2  0012               	dw	18
    57  0059C4  0007               	dw	7
    58  0059C6  0001               	dw	1
    59  0059C8  0001               	dw	1
    60  0059CA  0007               	dw	7
    61  0059CC  0012               	dw	18
    62  0059CE  0021               	dw	33
    63                           
    64                           ;initializer for SENO_3@F7364
    65  0059D0  0032               	dw	50
    66  0059D2  0046               	dw	70
    67  0059D4  0057               	dw	87
    68  0059D6  0062               	dw	98
    69  0059D8  0064               	dw	100
    70  0059DA  005D               	dw	93
    71  0059DC  004F               	dw	79
    72  0059DE  003C               	dw	60
    73  0059E0  0028               	dw	40
    74  0059E2  0015               	dw	21
    75  0059E4  0007               	dw	7
    76  0059E6  0000               	dw	0
    77  0059E8  0002               	dw	2
    78  0059EA  000D               	dw	13
    79  0059EC  001E               	dw	30
    80                           
    81                           	psect	idataBANK1
    82  005CCE                     __pidataBANK1:
    83                           	opt stack 0
    84                           
    85                           ;initializer for SENO_1@F7354
    86  005CCE  0032               	dw	50
    87  005CD0  0023               	dw	35
    88  005CD2  0015               	dw	21
    89  005CD4  000A               	dw	10
    90  005CD6  0002               	dw	2
    91  005CD8  0000               	dw	0
    92  005CDA  0002               	dw	2
    93  005CDC  000A               	dw	10
    94  005CDE  0015               	dw	21
    95  005CE0  0023               	dw	35
    96  005CE2  0032               	dw	50
    97  005CE4  0041               	dw	65
    98  005CE6  004F               	dw	79
    99  005CE8  005A               	dw	90
   100  005CEA  0062               	dw	98
   101  005CEC  0064               	dw	100
   102  005CEE  0062               	dw	98
   103  005CF0  005A               	dw	90
   104  005CF2  004F               	dw	79
   105  005CF4  0041               	dw	65
   106                           
   107                           ;initializer for TRI_1@F7354
   108  005CF6  000A               	dw	10
   109  005CF8  0014               	dw	20
   110  005CFA  001E               	dw	30
   111  005CFC  0028               	dw	40
   112  005CFE  0032               	dw	50
   113  005D00  003C               	dw	60
   114  005D02  0046               	dw	70
   115  005D04  0050               	dw	80
   116  005D06  005A               	dw	90
   117  005D08  0064               	dw	100
   118  005D0A  005A               	dw	90
   119  005D0C  0050               	dw	80
   120  005D0E  0046               	dw	70
   121  005D10  003C               	dw	60
   122  005D12  0032               	dw	50
   123  005D14  0028               	dw	40
   124  005D16  001E               	dw	30
   125  005D18  0014               	dw	20
   126  005D1A  000A               	dw	10
   127  005D1C  0000               	dw	0
   128                           
   129                           ;initializer for TRI_2@F7359
   130  005D1E  000A               	dw	10
   131  005D20  0014               	dw	20
   132  005D22  001E               	dw	30
   133  005D24  0028               	dw	40
   134  005D26  0032               	dw	50
   135  005D28  003C               	dw	60
   136  005D2A  0046               	dw	70
   137  005D2C  0050               	dw	80
   138  005D2E  005A               	dw	90
   139  005D30  0064               	dw	100
   140  005D32  005A               	dw	90
   141  005D34  0050               	dw	80
   142  005D36  0046               	dw	70
   143  005D38  003C               	dw	60
   144  005D3A  0032               	dw	50
   145  005D3C  0028               	dw	40
   146  005D3E  001E               	dw	30
   147  005D40  0014               	dw	20
   148  005D42  000A               	dw	10
   149  005D44  0000               	dw	0
   150                           
   151                           ;initializer for TRI_3@F7364
   152  005D46  000A               	dw	10
   153  005D48  0014               	dw	20
   154  005D4A  001E               	dw	30
   155  005D4C  0028               	dw	40
   156  005D4E  0032               	dw	50
   157  005D50  003C               	dw	60
   158  005D52  0046               	dw	70
   159  005D54  0050               	dw	80
   160  005D56  005A               	dw	90
   161  005D58  0064               	dw	100
   162  005D5A  005A               	dw	90
   163  005D5C  0050               	dw	80
   164  005D5E  0046               	dw	70
   165  005D60  003C               	dw	60
   166  005D62  0032               	dw	50
   167  005D64  0028               	dw	40
   168  005D66  001E               	dw	30
   169  005D68  0014               	dw	20
   170  005D6A  000A               	dw	10
   171  005D6C  0000               	dw	0
   172  0000                     _ANSELA	set	3931
   173  0000                     _ANSELD	set	3934
   174  0000                     _CCP2CON	set	3991
   175  0000                     _CCPR2L	set	3984
   176  0000                     _OSCCON	set	4051
   177  0000                     _PORTAbits	set	3968
   178  0000                     _PORTCbits	set	3970
   179  0000                     _PORTDbits	set	3971
   180  0000                     _PR2	set	4027
   181  0000                     _T2CON	set	4026
   182  0000                     _T2CONbits	set	4026
   183  0000                     _TMR2	set	4028
   184  0000                     _TRISAbits	set	3986
   185  0000                     _TRISCbits	set	3988
   186  0000                     _TRISDbits	set	3989
   187                           
   188                           	psect	mediumconst
   189  007E72                     __pmediumconst:
   190                           	opt stack 0
   191  007E72  00                 	db	0
   192  007E73                     __stringdata:
   193                           	opt stack 0
   194  007E73                     STR_2:
   195  007E73  50                 	db	80	;'P'
   196  007E74  72                 	db	114	;'r'
   197  007E75  6F                 	db	111	;'o'
   198  007E76  79                 	db	121	;'y'
   199  007E77  65                 	db	101	;'e'
   200  007E78  63                 	db	99	;'c'
   201  007E79  74                 	db	116	;'t'
   202  007E7A  6F                 	db	111	;'o'
   203  007E7B  20                 	db	32
   204  007E7C  46                 	db	70	;'F'
   205  007E7D  69                 	db	105	;'i'
   206  007E7E  6E                 	db	110	;'n'
   207  007E7F  61                 	db	97	;'a'
   208  007E80  6C                 	db	108	;'l'
   209  007E81  20                 	db	32
   210  007E82  00                 	db	0
   211  007E83                     STR_9:
   212  007E83  20                 	db	32
   213  007E84  20                 	db	32
   214  007E85  20                 	db	32
   215  007E86  46                 	db	70	;'F'
   216  007E87  72                 	db	114	;'r'
   217  007E88  65                 	db	101	;'e'
   218  007E89  63                 	db	99	;'c'
   219  007E8A  75                 	db	117	;'u'
   220  007E8B  65                 	db	101	;'e'
   221  007E8C  6E                 	db	110	;'n'
   222  007E8D  63                 	db	99	;'c'
   223  007E8E  69                 	db	105	;'i'
   224  007E8F  61                 	db	97	;'a'
   225  007E90  00                 	db	0
   226  007E91                     STR_11:
   227  007E91  3D                 	db	61	;'='
   228  007E92  3E                 	db	62	;'>'
   229  007E93  20                 	db	32
   230  007E94  46                 	db	70	;'F'
   231  007E95  72                 	db	114	;'r'
   232  007E96  65                 	db	101	;'e'
   233  007E97  63                 	db	99	;'c'
   234  007E98  75                 	db	117	;'u'
   235  007E99  65                 	db	101	;'e'
   236  007E9A  6E                 	db	110	;'n'
   237  007E9B  63                 	db	99	;'c'
   238  007E9C  69                 	db	105	;'i'
   239  007E9D  61                 	db	97	;'a'
   240  007E9E  00                 	db	0
   241  007E9F                     STR_83:
   242  007E9F  3D                 	db	61	;'='
   243  007EA0  3E                 	db	62	;'>'
   244  007EA1  20                 	db	32
   245  007EA2  54                 	db	84	;'T'
   246  007EA3  72                 	db	114	;'r'
   247  007EA4  69                 	db	105	;'i'
   248  007EA5  61                 	db	97	;'a'
   249  007EA6  6E                 	db	110	;'n'
   250  007EA7  67                 	db	103	;'g'
   251  007EA8  75                 	db	117	;'u'
   252  007EA9  6C                 	db	108	;'l'
   253  007EAA  61                 	db	97	;'a'
   254  007EAB  72                 	db	114	;'r'
   255  007EAC  00                 	db	0
   256  007EAD                     STR_4:
   257  007EAD  20                 	db	32
   258  007EAE  20                 	db	32
   259  007EAF  20                 	db	32
   260  007EB0  53                 	db	83	;'S'
   261  007EB1  65                 	db	101	;'e'
   262  007EB2  6E                 	db	110	;'n'
   263  007EB3  6F                 	db	111	;'o'
   264  007EB4  69                 	db	105	;'i'
   265  007EB5  64                 	db	100	;'d'
   266  007EB6  61                 	db	97	;'a'
   267  007EB7  6C                 	db	108	;'l'
   268  007EB8  00                 	db	0
   269  007EB9                     STR_74:
   270  007EB9  3D                 	db	61	;'='
   271  007EBA  3E                 	db	62	;'>'
   272  007EBB  20                 	db	32
   273  007EBC  53                 	db	83	;'S'
   274  007EBD  65                 	db	101	;'e'
   275  007EBE  6E                 	db	110	;'n'
   276  007EBF  6F                 	db	111	;'o'
   277  007EC0  69                 	db	105	;'i'
   278  007EC1  64                 	db	100	;'d'
   279  007EC2  61                 	db	97	;'a'
   280  007EC3  6C                 	db	108	;'l'
   281  007EC4  00                 	db	0
   282  007EC5                     STR_5:
   283  007EC5  20                 	db	32
   284  007EC6  20                 	db	32
   285  007EC7  20                 	db	32
   286  007EC8  49                 	db	73	;'I'
   287  007EC9  6E                 	db	110	;'n'
   288  007ECA  67                 	db	103	;'g'
   289  007ECB  72                 	db	114	;'r'
   290  007ECC  65                 	db	101	;'e'
   291  007ECD  73                 	db	115	;'s'
   292  007ECE  61                 	db	97	;'a'
   293  007ECF  72                 	db	114	;'r'
   294  007ED0  00                 	db	0
   295  007ED1                     STR_7:
   296  007ED1  3D                 	db	61	;'='
   297  007ED2  3E                 	db	62	;'>'
   298  007ED3  20                 	db	32
   299  007ED4  49                 	db	73	;'I'
   300  007ED5  6E                 	db	110	;'n'
   301  007ED6  67                 	db	103	;'g'
   302  007ED7  72                 	db	114	;'r'
   303  007ED8  65                 	db	101	;'e'
   304  007ED9  73                 	db	115	;'s'
   305  007EDA  61                 	db	97	;'a'
   306  007EDB  72                 	db	114	;'r'
   307  007EDC  00                 	db	0
   308  007EDD                     STR_6:
   309  007EDD  20                 	db	32
   310  007EDE  20                 	db	32
   311  007EDF  20                 	db	32
   312  007EE0  43                 	db	67	;'C'
   313  007EE1  6F                 	db	111	;'o'
   314  007EE2  6D                 	db	109	;'m'
   315  007EE3  65                 	db	101	;'e'
   316  007EE4  6E                 	db	110	;'n'
   317  007EE5  7A                 	db	122	;'z'
   318  007EE6  61                 	db	97	;'a'
   319  007EE7  72                 	db	114	;'r'
   320  007EE8  00                 	db	0
   321  007EE9                     STR_69:
   322  007EE9  3D                 	db	61	;'='
   323  007EEA  3E                 	db	62	;'>'
   324  007EEB  20                 	db	32
   325  007EEC  43                 	db	67	;'C'
   326  007EED  6F                 	db	111	;'o'
   327  007EEE  6D                 	db	109	;'m'
   328  007EEF  65                 	db	101	;'e'
   329  007EF0  6E                 	db	110	;'n'
   330  007EF1  7A                 	db	122	;'z'
   331  007EF2  61                 	db	97	;'a'
   332  007EF3  72                 	db	114	;'r'
   333  007EF4  00                 	db	0
   334  007EF5                     STR_1:
   335  007EF5  20                 	db	32
   336  007EF6  20                 	db	32
   337  007EF7  20                 	db	32
   338  007EF8  20                 	db	32
   339  007EF9  20                 	db	32
   340  007EFA  44                 	db	68	;'D'
   341  007EFB  49                 	db	73	;'I'
   342  007EFC  43                 	db	67	;'C'
   343  007EFD  49                 	db	73	;'I'
   344  007EFE  53                 	db	83	;'S'
   345  007EFF  00                 	db	0
   346  007F00                     STR_70:
   347  007F00  46                 	db	70	;'F'
   348  007F01  3A                 	db	58	;':'
   349  007F02  20                 	db	32
   350  007F03  20                 	db	32
   351  007F04  30                 	db	48	;'0'
   352  007F05  30                 	db	48	;'0'
   353  007F06  30                 	db	48	;'0'
   354  007F07  20                 	db	32
   355  007F08  68                 	db	104	;'h'
   356  007F09  7A                 	db	122	;'z'
   357  007F0A  00                 	db	0
   358  007F0B                     STR_87:
   359  007F0B  20                 	db	32
   360  007F0C  20                 	db	32
   361  007F0D  20                 	db	32
   362  007F0E  54                 	db	84	;'T'
   363  007F0F  72                 	db	114	;'r'
   364  007F10  69                 	db	105	;'i'
   365  007F11  6E                 	db	110	;'n'
   366  007F12  20                 	db	32
   367  007F13  31                 	db	49	;'1'
   368  007F14  00                 	db	0
   369  007F15                     STR_84:
   370  007F15  3D                 	db	61	;'='
   371  007F16  3E                 	db	62	;'>'
   372  007F17  20                 	db	32
   373  007F18  54                 	db	84	;'T'
   374  007F19  72                 	db	114	;'r'
   375  007F1A  69                 	db	105	;'i'
   376  007F1B  6E                 	db	110	;'n'
   377  007F1C  20                 	db	32
   378  007F1D  31                 	db	49	;'1'
   379  007F1E  00                 	db	0
   380  007F1F                     STR_85:
   381  007F1F  20                 	db	32
   382  007F20  20                 	db	32
   383  007F21  20                 	db	32
   384  007F22  54                 	db	84	;'T'
   385  007F23  72                 	db	114	;'r'
   386  007F24  69                 	db	105	;'i'
   387  007F25  6E                 	db	110	;'n'
   388  007F26  20                 	db	32
   389  007F27  32                 	db	50	;'2'
   390  007F28  00                 	db	0
   391  007F29                     STR_88:
   392  007F29  3D                 	db	61	;'='
   393  007F2A  3E                 	db	62	;'>'
   394  007F2B  20                 	db	32
   395  007F2C  54                 	db	84	;'T'
   396  007F2D  72                 	db	114	;'r'
   397  007F2E  69                 	db	105	;'i'
   398  007F2F  6E                 	db	110	;'n'
   399  007F30  20                 	db	32
   400  007F31  32                 	db	50	;'2'
   401  007F32  00                 	db	0
   402  007F33                     STR_90:
   403  007F33  3D                 	db	61	;'='
   404  007F34  3E                 	db	62	;'>'
   405  007F35  20                 	db	32
   406  007F36  54                 	db	84	;'T'
   407  007F37  72                 	db	114	;'r'
   408  007F38  69                 	db	105	;'i'
   409  007F39  6E                 	db	110	;'n'
   410  007F3A  20                 	db	32
   411  007F3B  33                 	db	51	;'3'
   412  007F3C  00                 	db	0
   413  007F3D                     STR_78:
   414  007F3D  20                 	db	32
   415  007F3E  20                 	db	32
   416  007F3F  20                 	db	32
   417  007F40  53                 	db	83	;'S'
   418  007F41  69                 	db	105	;'i'
   419  007F42  6E                 	db	110	;'n'
   420  007F43  20                 	db	32
   421  007F44  31                 	db	49	;'1'
   422  007F45  00                 	db	0
   423  007F46                     STR_75:
   424  007F46  3D                 	db	61	;'='
   425  007F47  3E                 	db	62	;'>'
   426  007F48  20                 	db	32
   427  007F49  53                 	db	83	;'S'
   428  007F4A  69                 	db	105	;'i'
   429  007F4B  6E                 	db	110	;'n'
   430  007F4C  20                 	db	32
   431  007F4D  31                 	db	49	;'1'
   432  007F4E  00                 	db	0
   433  007F4F                     STR_76:
   434  007F4F  20                 	db	32
   435  007F50  20                 	db	32
   436  007F51  20                 	db	32
   437  007F52  53                 	db	83	;'S'
   438  007F53  69                 	db	105	;'i'
   439  007F54  6E                 	db	110	;'n'
   440  007F55  20                 	db	32
   441  007F56  32                 	db	50	;'2'
   442  007F57  00                 	db	0
   443  007F58                     STR_79:
   444  007F58  3D                 	db	61	;'='
   445  007F59  3E                 	db	62	;'>'
   446  007F5A  20                 	db	32
   447  007F5B  53                 	db	83	;'S'
   448  007F5C  69                 	db	105	;'i'
   449  007F5D  6E                 	db	110	;'n'
   450  007F5E  20                 	db	32
   451  007F5F  32                 	db	50	;'2'
   452  007F60  00                 	db	0
   453  007F61                     STR_81:
   454  007F61  3D                 	db	61	;'='
   455  007F62  3E                 	db	62	;'>'
   456  007F63  20                 	db	32
   457  007F64  53                 	db	83	;'S'
   458  007F65  69                 	db	105	;'i'
   459  007F66  6E                 	db	110	;'n'
   460  007F67  20                 	db	32
   461  007F68  33                 	db	51	;'3'
   462  007F69  00                 	db	0
   463  007F6A                     STR_10:
   464  007F6A  20                 	db	32
   465  007F6B  20                 	db	32
   466  007F6C  20                 	db	32
   467  007F6D  43                 	db	67	;'C'
   468  007F6E  69                 	db	105	;'i'
   469  007F6F  63                 	db	99	;'c'
   470  007F70  6C                 	db	108	;'l'
   471  007F71  6F                 	db	111	;'o'
   472  007F72  00                 	db	0
   473  007F73                     STR_15:
   474  007F73  3D                 	db	61	;'='
   475  007F74  3E                 	db	62	;'>'
   476  007F75  20                 	db	32
   477  007F76  43                 	db	67	;'C'
   478  007F77  69                 	db	105	;'i'
   479  007F78  63                 	db	99	;'c'
   480  007F79  6C                 	db	108	;'l'
   481  007F7A  6F                 	db	111	;'o'
   482  007F7B  00                 	db	0
   483  007F7C                     STR_13:
   484  007F7C  20                 	db	32
   485  007F7D  20                 	db	32
   486  007F7E  30                 	db	48	;'0'
   487  007F7F  30                 	db	48	;'0'
   488  007F80  30                 	db	48	;'0'
   489  007F81  20                 	db	32
   490  007F82  48                 	db	72	;'H'
   491  007F83  7A                 	db	122	;'z'
   492  007F84  00                 	db	0
   493  007F85                     STR_73:
   494  007F85  20                 	db	32
   495  007F86  20                 	db	32
   496  007F87  20                 	db	32
   497  007F88  50                 	db	80	;'P'
   498  007F89  57                 	db	87	;'W'
   499  007F8A  4D                 	db	77	;'M'
   500  007F8B  00                 	db	0
   501  007F8C                     STR_3:
   502  007F8C  3D                 	db	61	;'='
   503  007F8D  3E                 	db	62	;'>'
   504  007F8E  20                 	db	32
   505  007F8F  50                 	db	80	;'P'
   506  007F90  57                 	db	87	;'W'
   507  007F91  4D                 	db	77	;'M'
   508  007F92  00                 	db	0
   509  007F93                     STR_55:
   510  007F93  20                 	db	32
   511  007F94  31                 	db	49	;'1'
   512  007F95  30                 	db	48	;'0'
   513  007F96  30                 	db	48	;'0'
   514  007F97  25                 	db	37
   515  007F98  00                 	db	0
   516  007F99                     STR_67:
   517  007F99  2A                 	db	42
   518  007F9A  31                 	db	49	;'1'
   519  007F9B  30                 	db	48	;'0'
   520  007F9C  30                 	db	48	;'0'
   521  007F9D  25                 	db	37
   522  007F9E  00                 	db	0
   523  007F9F                     STR_52:
   524  007F9F  20                 	db	32
   525  007FA0  2A                 	db	42
   526  007FA1  37                 	db	55	;'7'
   527  007FA2  30                 	db	48	;'0'
   528  007FA3  25                 	db	37
   529  007FA4  00                 	db	0
   530  007FA5                     STR_22:
   531  007FA5  20                 	db	32
   532  007FA6  31                 	db	49	;'1'
   533  007FA7  30                 	db	48	;'0'
   534  007FA8  25                 	db	37
   535  007FA9  00                 	db	0
   536  007FAA                     STR_16:
   537  007FAA  2A                 	db	42
   538  007FAB  31                 	db	49	;'1'
   539  007FAC  30                 	db	48	;'0'
   540  007FAD  25                 	db	37
   541  007FAE  00                 	db	0
   542  007FAF                     STR_17:
   543  007FAF  20                 	db	32
   544  007FB0  32                 	db	50	;'2'
   545  007FB1  30                 	db	48	;'0'
   546  007FB2  25                 	db	37
   547  007FB3  00                 	db	0
   548  007FB4                     STR_23:
   549  007FB4  2A                 	db	42
   550  007FB5  32                 	db	50	;'2'
   551  007FB6  30                 	db	48	;'0'
   552  007FB7  25                 	db	37
   553  007FB8  00                 	db	0
   554  007FB9                     STR_18:
   555  007FB9  20                 	db	32
   556  007FBA  33                 	db	51	;'3'
   557  007FBB  30                 	db	48	;'0'
   558  007FBC  25                 	db	37
   559  007FBD  00                 	db	0
   560  007FBE                     STR_30:
   561  007FBE  2A                 	db	42
   562  007FBF  33                 	db	51	;'3'
   563  007FC0  30                 	db	48	;'0'
   564  007FC1  25                 	db	37
   565  007FC2  00                 	db	0
   566  007FC3                     STR_19:
   567  007FC3  20                 	db	32
   568  007FC4  34                 	db	52	;'4'
   569  007FC5  30                 	db	48	;'0'
   570  007FC6  25                 	db	37
   571  007FC7  00                 	db	0
   572  007FC8                     STR_37:
   573  007FC8  2A                 	db	42
   574  007FC9  34                 	db	52	;'4'
   575  007FCA  30                 	db	48	;'0'
   576  007FCB  25                 	db	37
   577  007FCC  00                 	db	0
   578  007FCD                     STR_20:
   579  007FCD  20                 	db	32
   580  007FCE  35                 	db	53	;'5'
   581  007FCF  30                 	db	48	;'0'
   582  007FD0  25                 	db	37
   583  007FD1  00                 	db	0
   584  007FD2                     STR_44:
   585  007FD2  2A                 	db	42
   586  007FD3  35                 	db	53	;'5'
   587  007FD4  30                 	db	48	;'0'
   588  007FD5  25                 	db	37
   589  007FD6  00                 	db	0
   590  007FD7                     STR_21:
   591  007FD7  20                 	db	32
   592  007FD8  36                 	db	54	;'6'
   593  007FD9  30                 	db	48	;'0'
   594  007FDA  25                 	db	37
   595  007FDB  00                 	db	0
   596  007FDC                     STR_51:
   597  007FDC  2A                 	db	42
   598  007FDD  36                 	db	54	;'6'
   599  007FDE  30                 	db	48	;'0'
   600  007FDF  25                 	db	37
   601  007FE0  00                 	db	0
   602  007FE1                     STR_56:
   603  007FE1  20                 	db	32
   604  007FE2  37                 	db	55	;'7'
   605  007FE3  30                 	db	48	;'0'
   606  007FE4  25                 	db	37
   607  007FE5  00                 	db	0
   608  007FE6                     STR_53:
   609  007FE6  20                 	db	32
   610  007FE7  38                 	db	56	;'8'
   611  007FE8  30                 	db	48	;'0'
   612  007FE9  25                 	db	37
   613  007FEA  00                 	db	0
   614  007FEB                     STR_57:
   615  007FEB  2A                 	db	42
   616  007FEC  38                 	db	56	;'8'
   617  007FED  30                 	db	48	;'0'
   618  007FEE  25                 	db	37
   619  007FEF  00                 	db	0
   620  007FF0                     STR_54:
   621  007FF0  20                 	db	32
   622  007FF1  39                 	db	57	;'9'
   623  007FF2  30                 	db	48	;'0'
   624  007FF3  25                 	db	37
   625  007FF4  00                 	db	0
   626  007FF5                     STR_62:
   627  007FF5  2A                 	db	42
   628  007FF6  39                 	db	57	;'9'
   629  007FF7  30                 	db	48	;'0'
   630  007FF8  25                 	db	37
   631  007FF9  00                 	db	0
   632  007FFA                     STR_71:
   633  007FFA  43                 	db	67	;'C'
   634  007FFB  3A                 	db	58	;':'
   635  007FFC  20                 	db	32
   636  007FFD  00                 	db	0
   637  007FFE                     __end_of__stringdata:
   638                           	opt stack 0
   639                           
   640                           ; #config settings
   641  007FFE  00                 	db	0	; dummy byte at the end
   642  0000                     
   643                           	psect	cinit
   644  005AF4                     __pcinit:
   645                           	opt stack 0
   646  005AF4                     start_initialization:
   647                           	opt stack 0
   648  005AF4                     __initialization:
   649                           	opt stack 0
   650                           
   651                           ; Clear objects allocated to BANK0 (16 bytes)
   652  005AF4  EE00  F0D4         	lfsr	0,__pbssBANK0
   653  005AF8  0E10               	movlw	16
   654  005AFA                     clear_0:
   655  005AFA  6AEE               	clrf	postinc0,c
   656  005AFC  06E8               	decf	wreg,f,c
   657  005AFE  E1FD               	bnz	clear_0
   658                           
   659                           ; Clear objects allocated to COMRAM (6 bytes)
   660  005B00  6A42               	clrf	(__pbssCOMRAM+5)& (0+255),c
   661  005B02  6A41               	clrf	(__pbssCOMRAM+4)& (0+255),c
   662  005B04  6A40               	clrf	(__pbssCOMRAM+3)& (0+255),c
   663  005B06  6A3F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   664  005B08  6A3E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   665  005B0A  6A3D               	clrf	__pbssCOMRAM& (0+255),c
   666                           
   667                           ; Initialize objects allocated to BANK1 (160 bytes)
   668                           ; load TBLPTR registers with __pidataBANK1
   669  005B0C  0ECE               	movlw	low __pidataBANK1
   670  005B0E  6EF6               	movwf	tblptrl,c
   671  005B10  0E5C               	movlw	high __pidataBANK1
   672  005B12  6EF7               	movwf	tblptrh,c
   673  005B14  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   674  005B16  6EF8               	movwf	tblptru,c
   675  005B18  EE01  F000         	lfsr	0,__pdataBANK1
   676  005B1C  EE10 F0A0          	lfsr	1,160
   677  005B20                     copy_data0:
   678  005B20  0009               	tblrd		*+
   679  005B22  CFF5 FFEE          	movff	tablat,postinc0
   680  005B26  50E5               	movf	postdec1,w,c
   681  005B28  50E1               	movf	fsr1l,w,c
   682  005B2A  E1FA               	bnz	copy_data0
   683                           
   684                           ; Initialize objects allocated to BANK0 (66 bytes)
   685                           ; load TBLPTR registers with __pidataBANK0
   686  005B2C  0EAC               	movlw	low __pidataBANK0
   687  005B2E  6EF6               	movwf	tblptrl,c
   688  005B30  0E59               	movlw	high __pidataBANK0
   689  005B32  6EF7               	movwf	tblptrh,c
   690  005B34  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   691  005B36  6EF8               	movwf	tblptru,c
   692  005B38  EE00  F060         	lfsr	0,__pdataBANK0
   693  005B3C  EE10 F042          	lfsr	1,66
   694  005B40                     copy_data1:
   695  005B40  0009               	tblrd		*+
   696  005B42  CFF5 FFEE          	movff	tablat,postinc0
   697  005B46  50E5               	movf	postdec1,w,c
   698  005B48  50E1               	movf	fsr1l,w,c
   699  005B4A  E1FA               	bnz	copy_data1
   700  005B4C                     end_of_initialization:
   701                           	opt stack 0
   702  005B4C                     __end_of__initialization:
   703                           	opt stack 0
   704  005B4C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   705  005B4E  6EF8               	movwf	tblptru,c
   706  005B50  0100               	movlb	0
   707  005B52  EFF1  F036         	goto	_main	;jump to C main() function
   708                           tblptru	equ	0xFF8
   709                           tblptrh	equ	0xFF7
   710                           tblptrl	equ	0xFF6
   711                           tablat	equ	0xFF5
   712                           postinc0	equ	0xFEE
   713                           wreg	equ	0xFE8
   714                           postdec1	equ	0xFE5
   715                           fsr1l	equ	0xFE1
   716                           
   717                           	psect	bssCOMRAM
   718  00003D                     __pbssCOMRAM:
   719                           	opt stack 0
   720  00003D                     _C:
   721                           	opt stack 0
   722  00003D                     	ds	2
   723  00003F                     _D:
   724                           	opt stack 0
   725  00003F                     	ds	2
   726  000041                     _frecuencia:
   727                           	opt stack 0
   728  000041                     	ds	2
   729                           tblptru	equ	0xFF8
   730                           tblptrh	equ	0xFF7
   731                           tblptrl	equ	0xFF6
   732                           tablat	equ	0xFF5
   733                           postinc0	equ	0xFEE
   734                           wreg	equ	0xFE8
   735                           postdec1	equ	0xFE5
   736                           fsr1l	equ	0xFE1
   737                           
   738                           	psect	bssBANK0
   739  0000D4                     __pbssBANK0:
   740                           	opt stack 0
   741  0000D4                     _B:
   742                           	opt stack 0
   743  0000D4                     	ds	2
   744  0000D6                     _M:
   745                           	opt stack 0
   746  0000D6                     	ds	2
   747  0000D8                     _e:
   748                           	opt stack 0
   749  0000D8                     	ds	2
   750  0000DA                     _p:
   751                           	opt stack 0
   752  0000DA                     	ds	2
   753  0000DC                     _q:
   754                           	opt stack 0
   755  0000DC                     	ds	2
   756  0000DE                     _r:
   757                           	opt stack 0
   758  0000DE                     	ds	2
   759  0000E0                     _t:
   760                           	opt stack 0
   761  0000E0                     	ds	2
   762  0000E2                     _w:
   763                           	opt stack 0
   764  0000E2                     	ds	2
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           postinc0	equ	0xFEE
   770                           wreg	equ	0xFE8
   771                           postdec1	equ	0xFE5
   772                           fsr1l	equ	0xFE1
   773                           
   774                           	psect	dataBANK0
   775  000060                     __pdataBANK0:
   776                           	opt stack 0
   777  000060                     SENO_2@F7359:
   778                           	opt stack 0
   779  000060                     	ds	36
   780  000084                     SENO_3@F7364:
   781                           	opt stack 0
   782  000084                     	ds	30
   783                           tblptru	equ	0xFF8
   784                           tblptrh	equ	0xFF7
   785                           tblptrl	equ	0xFF6
   786                           tablat	equ	0xFF5
   787                           postinc0	equ	0xFEE
   788                           wreg	equ	0xFE8
   789                           postdec1	equ	0xFE5
   790                           fsr1l	equ	0xFE1
   791                           
   792                           	psect	dataBANK1
   793  000100                     __pdataBANK1:
   794                           	opt stack 0
   795  000100                     SENO_1@F7354:
   796                           	opt stack 0
   797  000100                     	ds	40
   798  000128                     TRI_1@F7354:
   799                           	opt stack 0
   800  000128                     	ds	40
   801  000150                     TRI_2@F7359:
   802                           	opt stack 0
   803  000150                     	ds	40
   804  000178                     TRI_3@F7364:
   805                           	opt stack 0
   806  000178                     	ds	40
   807                           tblptru	equ	0xFF8
   808                           tblptrh	equ	0xFF7
   809                           tblptrl	equ	0xFF6
   810                           tablat	equ	0xFF5
   811                           postinc0	equ	0xFEE
   812                           wreg	equ	0xFE8
   813                           postdec1	equ	0xFE5
   814                           fsr1l	equ	0xFE1
   815                           
   816                           	psect	cstackBANK0
   817  0000A2                     __pcstackBANK0:
   818                           	opt stack 0
   819  0000A2                     main@cad:
   820                           	opt stack 0
   821                           
   822                           ; 20 bytes @ 0x0
   823  0000A2                     	ds	20
   824  0000B6                     main@cadena:
   825                           	opt stack 0
   826                           
   827                           ; 20 bytes @ 0x14
   828  0000B6                     	ds	20
   829  0000CA                     main@V:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x28
   833  0000CA                     	ds	2
   834  0000CC                     main@fre:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x2A
   838  0000CC                     	ds	1
   839  0000CD                     main@cantidad:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x2B
   843  0000CD                     	ds	1
   844  0000CE                     main@cant:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x2C
   848  0000CE                     	ds	1
   849  0000CF                     main@X:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x2D
   853  0000CF                     	ds	2
   854  0000D1                     main@Z:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x2F
   858  0000D1                     	ds	2
   859  0000D3                     main@A:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x31
   863  0000D3                     	ds	1
   864                           tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           postdec1	equ	0xFE5
   871                           fsr1l	equ	0xFE1
   872                           
   873                           	psect	cstackCOMRAM
   874  000001                     __pcstackCOMRAM:
   875                           	opt stack 0
   876  000001                     ??_Lcd_Cmd:
   877  000001                     ??_Lcd_Chr_CP:
   878  000001                     ??_SENO_1:
   879  000001                     ??_SENO_2:
   880  000001                     ??_SENO_3:
   881  000001                     ??_TRI_1:
   882  000001                     ??_tm_1s:
   883  000001                     ?___wmul:
   884                           	opt stack 0
   885  000001                     ?___awdiv:
   886                           	opt stack 0
   887  000001                     ?___lmul:
   888                           	opt stack 0
   889  000001                     ?___aldiv:
   890                           	opt stack 0
   891  000001                     ?___almod:
   892                           	opt stack 0
   893  000001                     ?___lldiv:
   894                           	opt stack 0
   895  000001                     ___wmul@multiplier:
   896                           	opt stack 0
   897  000001                     ___awdiv@dividend:
   898                           	opt stack 0
   899  000001                     ___lmul@multiplier:
   900                           	opt stack 0
   901  000001                     ___aldiv@dividend:
   902                           	opt stack 0
   903  000001                     ___almod@dividend:
   904                           	opt stack 0
   905  000001                     ___lldiv@dividend:
   906                           	opt stack 0
   907                           
   908                           ; 4 bytes @ 0x0
   909  000001                     	ds	2
   910  000003                     Lcd_Chr_CP@data:
   911                           	opt stack 0
   912  000003                     Lcd_Cmd@data:
   913                           	opt stack 0
   914  000003                     ___wmul@multiplicand:
   915                           	opt stack 0
   916  000003                     ___awdiv@divisor:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x2
   920  000003                     	ds	1
   921  000004                     ??_Lcd_Init:
   922  000004                     Lcd_Out@x:
   923                           	opt stack 0
   924  000004                     Lcd_Out2@x:
   925                           	opt stack 0
   926  000004                     lcd_goto@x:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x3
   930  000004                     	ds	1
   931  000005                     Lcd_Init@data:
   932                           	opt stack 0
   933  000005                     ___awdiv@counter:
   934                           	opt stack 0
   935  000005                     Lcd_Out@buffer:
   936                           	opt stack 0
   937  000005                     Lcd_Out2@buffer:
   938                           	opt stack 0
   939  000005                     ___wmul@product:
   940                           	opt stack 0
   941  000005                     ___lmul@multiplicand:
   942                           	opt stack 0
   943  000005                     ___aldiv@divisor:
   944                           	opt stack 0
   945  000005                     ___almod@divisor:
   946                           	opt stack 0
   947  000005                     ___lldiv@divisor:
   948                           	opt stack 0
   949                           
   950                           ; 4 bytes @ 0x4
   951  000005                     	ds	1
   952  000006                     ___awdiv@sign:
   953                           	opt stack 0
   954  000006                     lcd_goto@y:
   955                           	opt stack 0
   956  000006                     SENO_3@valoresSeno:
   957                           	opt stack 0
   958  000006                     SENO_2@valoresSeno:
   959                           	opt stack 0
   960  000006                     SENO_1@valoresSeno:
   961                           	opt stack 0
   962  000006                     TRI_1@valoresSeno:
   963                           	opt stack 0
   964                           
   965                           ; 40 bytes @ 0x5
   966  000006                     	ds	1
   967  000007                     Lcd_Out@y:
   968                           	opt stack 0
   969  000007                     Lcd_Out2@y:
   970                           	opt stack 0
   971  000007                     ___awdiv@quotient:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x6
   975  000007                     	ds	1
   976  000008                     ??_lcd_goto:
   977  000008                     Lcd_Out@data:
   978                           	opt stack 0
   979  000008                     Lcd_Out2@data:
   980                           	opt stack 0
   981                           
   982                           ; 1 bytes @ 0x7
   983  000008                     	ds	1
   984  000009                     ??_TRI_2:
   985  000009                     ??_TRI_3:
   986  000009                     ___aldiv@counter:
   987                           	opt stack 0
   988  000009                     ___almod@counter:
   989                           	opt stack 0
   990  000009                     ___lmul@product:
   991                           	opt stack 0
   992  000009                     ___lldiv@quotient:
   993                           	opt stack 0
   994                           
   995                           ; 4 bytes @ 0x8
   996  000009                     	ds	1
   997  00000A                     lcd_goto@data:
   998                           	opt stack 0
   999  00000A                     ___aldiv@sign:
  1000                           	opt stack 0
  1001  00000A                     ___almod@sign:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x9
  1005  00000A                     	ds	1
  1006  00000B                     ___aldiv@quotient:
  1007                           	opt stack 0
  1008                           
  1009                           ; 4 bytes @ 0xA
  1010  00000B                     	ds	2
  1011  00000D                     ___lldiv@counter:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0xC
  1015  00000D                     	ds	1
  1016  00000E                     PWM_generar@ciclo:
  1017                           	opt stack 0
  1018  00000E                     TRI_2@valoresSeno:
  1019                           	opt stack 0
  1020  00000E                     TRI_3@valoresSeno:
  1021                           	opt stack 0
  1022                           
  1023                           ; 40 bytes @ 0xD
  1024  00000E                     	ds	1
  1025  00000F                     ?_Conv_Entero:
  1026                           	opt stack 0
  1027  00000F                     Conv_Entero@numero:
  1028                           	opt stack 0
  1029                           
  1030                           ; 4 bytes @ 0xE
  1031  00000F                     	ds	1
  1032  000010                     PWM_generar@frecuencia:
  1033                           	opt stack 0
  1034                           
  1035                           ; 2 bytes @ 0xF
  1036  000010                     	ds	2
  1037  000012                     ??_PWM_generar:
  1038                           
  1039                           ; 0 bytes @ 0x11
  1040  000012                     	ds	1
  1041  000013                     Conv_Entero@conv:
  1042                           	opt stack 0
  1043                           
  1044                           ; 2 bytes @ 0x12
  1045  000013                     	ds	2
  1046  000015                     ??_Conv_Entero:
  1047                           
  1048                           ; 0 bytes @ 0x14
  1049  000015                     	ds	1
  1050  000016                     PWM_generar@prescalador:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x15
  1054  000016                     	ds	2
  1055  000018                     PWM_generar@AuxCCP2CON:
  1056                           	opt stack 0
  1057                           
  1058                           ; 2 bytes @ 0x17
  1059  000018                     	ds	2
  1060  00001A                     PWM_generar@PR2cal:
  1061                           	opt stack 0
  1062  00001A                     Conv_Entero@convTemp:
  1063                           	opt stack 0
  1064                           
  1065                           ; 21 bytes @ 0x19
  1066  00001A                     	ds	4
  1067  00001E                     PWM_generar@AuxCCPR2L:
  1068                           	opt stack 0
  1069                           
  1070                           ; 4 bytes @ 0x1D
  1071  00001E                     	ds	6
  1072  000024                     SENO_3@k:
  1073                           	opt stack 0
  1074                           
  1075                           ; 2 bytes @ 0x23
  1076  000024                     	ds	2
  1077  000026                     SENO_3@j:
  1078                           	opt stack 0
  1079                           
  1080                           ; 2 bytes @ 0x25
  1081  000026                     	ds	2
  1082  000028                     SENO_3@i:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x27
  1086  000028                     	ds	2
  1087  00002A                     SENO_2@k:
  1088                           	opt stack 0
  1089                           
  1090                           ; 2 bytes @ 0x29
  1091  00002A                     	ds	2
  1092  00002C                     SENO_2@j:
  1093                           	opt stack 0
  1094                           
  1095                           ; 2 bytes @ 0x2B
  1096  00002C                     	ds	2
  1097  00002E                     SENO_1@k:
  1098                           	opt stack 0
  1099  00002E                     SENO_2@i:
  1100                           	opt stack 0
  1101  00002E                     TRI_1@k:
  1102                           	opt stack 0
  1103                           
  1104                           ; 2 bytes @ 0x2D
  1105  00002E                     	ds	1
  1106  00002F                     Conv_Entero@num:
  1107                           	opt stack 0
  1108                           
  1109                           ; 2 bytes @ 0x2E
  1110  00002F                     	ds	1
  1111  000030                     SENO_1@j:
  1112                           	opt stack 0
  1113  000030                     TRI_1@j:
  1114                           	opt stack 0
  1115                           
  1116                           ; 2 bytes @ 0x2F
  1117  000030                     	ds	1
  1118  000031                     Conv_Entero@i:
  1119                           	opt stack 0
  1120                           
  1121                           ; 1 bytes @ 0x30
  1122  000031                     	ds	1
  1123  000032                     Conv_Entero@punteroActual:
  1124                           	opt stack 0
  1125  000032                     SENO_1@i:
  1126                           	opt stack 0
  1127  000032                     TRI_1@i:
  1128                           	opt stack 0
  1129                           
  1130                           ; 2 bytes @ 0x31
  1131  000032                     	ds	2
  1132  000034                     Conv_Entero@numeroReg:
  1133                           	opt stack 0
  1134                           
  1135                           ; 4 bytes @ 0x33
  1136  000034                     	ds	2
  1137  000036                     TRI_2@k:
  1138                           	opt stack 0
  1139  000036                     TRI_3@k:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x35
  1143  000036                     	ds	2
  1144  000038                     TRI_2@j:
  1145                           	opt stack 0
  1146  000038                     TRI_3@j:
  1147                           	opt stack 0
  1148                           
  1149                           ; 2 bytes @ 0x37
  1150  000038                     	ds	2
  1151  00003A                     TRI_2@i:
  1152                           	opt stack 0
  1153  00003A                     TRI_3@i:
  1154                           	opt stack 0
  1155                           
  1156                           ; 2 bytes @ 0x39
  1157  00003A                     	ds	2
  1158  00003C                     ??_main:
  1159                           
  1160                           ; 0 bytes @ 0x3B
  1161  00003C                     	ds	1
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           postdec1	equ	0xFE5
  1169                           fsr1l	equ	0xFE1
  1170                           
  1171 ;;
  1172 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1173 ;;
  1174 ;; *************** function _main *****************
  1175 ;; Defined at:
  1176 ;;		line 22 in file "Main.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  fre             1   42[BANK0 ] unsigned char 
  1181 ;;  cadena         20   20[BANK0 ] unsigned char [20]
  1182 ;;  cad            20    0[BANK0 ] unsigned char [20]
  1183 ;;  Z               2   47[BANK0 ] unsigned int 
  1184 ;;  X               2   45[BANK0 ] unsigned int 
  1185 ;;  V               2   40[BANK0 ] unsigned int 
  1186 ;;  A               1   49[BANK0 ] unsigned char 
  1187 ;;  cant            1   44[BANK0 ] unsigned char 
  1188 ;;  cantidad        1   43[BANK0 ] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;		None               void
  1191 ;; Registers used:
  1192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1198 ;;      Params:         0       0       0       0       0       0       0       0       0
  1199 ;;      Locals:         0      50       0       0       0       0       0       0       0
  1200 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1201 ;;      Totals:         1      50       0       0       0       0       0       0       0
  1202 ;;Total ram usage:       51 bytes
  1203 ;; Hardware stack levels required when called:    2
  1204 ;; This function calls:
  1205 ;;		_Conv_Entero
  1206 ;;		_Lcd_Chr_CP
  1207 ;;		_Lcd_Cmd
  1208 ;;		_Lcd_Init
  1209 ;;		_Lcd_Out
  1210 ;;		_Lcd_Out2
  1211 ;;		_PWM_generar
  1212 ;;		_SENO_1
  1213 ;;		_SENO_2
  1214 ;;		_SENO_3
  1215 ;;		_TRI_1
  1216 ;;		_TRI_2
  1217 ;;		_TRI_3
  1218 ;;		___wmul
  1219 ;;		_lcd_goto
  1220 ;;		_tm_1s
  1221 ;; This function is called by:
  1222 ;;		Startup code after reset
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text0
  1227  006DE2                     __ptext0:
  1228                           	opt stack 0
  1229  006DE2                     _main:
  1230                           	opt stack 29
  1231                           
  1232                           ;Main.c: 24: unsigned char A=47,cantidad=0,cant=0;
  1233                           
  1234                           ;incstack = 0
  1235  006DE2  0E2F               	movlw	47
  1236  006DE4  0100               	movlb	0	; () banked
  1237  006DE6  6FD3               	movwf	main@A& (0+255),b
  1238  006DE8  0E00               	movlw	0
  1239  006DEA  0100               	movlb	0	; () banked
  1240  006DEC  6FCD               	movwf	main@cantidad& (0+255),b
  1241  006DEE  0E00               	movlw	0
  1242  006DF0  0100               	movlb	0	; () banked
  1243  006DF2  6FCE               	movwf	main@cant& (0+255),b
  1244                           
  1245                           ;Main.c: 25: char cadena[20],cad[20];
  1246                           ;Main.c: 26: unsigned int Z=0,X=0,V=0;
  1247  006DF4  0E00               	movlw	0
  1248  006DF6  0100               	movlb	0	; () banked
  1249  006DF8  6FD2               	movwf	(main@Z+1)& (0+255),b
  1250  006DFA  0E00               	movlw	0
  1251  006DFC  0100               	movlb	0	; () banked
  1252  006DFE  6FD1               	movwf	main@Z& (0+255),b
  1253  006E00  0E00               	movlw	0
  1254  006E02  0100               	movlb	0	; () banked
  1255  006E04  6FD0               	movwf	(main@X+1)& (0+255),b
  1256  006E06  0E00               	movlw	0
  1257  006E08  0100               	movlb	0	; () banked
  1258  006E0A  6FCF               	movwf	main@X& (0+255),b
  1259  006E0C  0E00               	movlw	0
  1260  006E0E  0100               	movlb	0	; () banked
  1261  006E10  6FCB               	movwf	(main@V+1)& (0+255),b
  1262  006E12  0E00               	movlw	0
  1263  006E14  0100               	movlb	0	; () banked
  1264  006E16  6FCA               	movwf	main@V& (0+255),b
  1265                           
  1266                           ;Main.c: 27: OSCCON=0b01010111;
  1267  006E18  0E57               	movlw	87
  1268  006E1A  6ED3               	movwf	4051,c	;volatile
  1269                           
  1270                           ;Main.c: 28: ANSELD=0;
  1271  006E1C  0E00               	movlw	0
  1272  006E1E  010F               	movlb	15	; () banked
  1273  006E20  6F5E               	movwf	94,b	;volatile
  1274                           
  1275                           ; BSR set to: 15
  1276                           ;Main.c: 29: Lcd_Init();
  1277  006E22  EC7A  F032         	call	_Lcd_Init	;wreg free
  1278                           
  1279                           ;Main.c: 31: TRISAbits.RA0=1;
  1280  006E26  8092               	bsf	3986,0,c	;volatile
  1281                           
  1282                           ;Main.c: 32: TRISAbits.RA1=1;
  1283  006E28  8292               	bsf	3986,1,c	;volatile
  1284                           
  1285                           ;Main.c: 33: TRISAbits.RA2=1;
  1286  006E2A  8492               	bsf	3986,2,c	;volatile
  1287                           
  1288                           ;Main.c: 34: TRISAbits.RA3=1;
  1289  006E2C  8692               	bsf	3986,3,c	;volatile
  1290                           
  1291                           ;Main.c: 35: ANSELA=0;
  1292  006E2E  0E00               	movlw	0
  1293  006E30  010F               	movlb	15	; () banked
  1294  006E32  6F5B               	movwf	91,b	;volatile
  1295  006E34                     l3048:
  1296                           
  1297                           ;Main.c: 38: if(PORTAbits.RA0==1)
  1298  006E34  A080               	btfss	3968,0,c	;volatile
  1299  006E36  D00A               	goto	l3054
  1300                           
  1301                           ;Main.c: 39: {
  1302                           ;Main.c: 40: B++;
  1303  006E38  0100               	movlb	0	; () banked
  1304  006E3A  4BD4               	infsnz	_B& (0+255),f,b
  1305  006E3C  2BD5               	incf	(_B+1)& (0+255),f,b
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;Main.c: 41: _delay((unsigned long)((10)*(4000000/4000.0)));
  1309  006E3E  0E0D               	movlw	13
  1310  006E40  6E3C               	movwf	??_main& (0+255),c
  1311  006E42  0EFC               	movlw	252
  1312  006E44                     u3537:
  1313  006E44  2EE8               	decfsz	wreg,f,c
  1314  006E46  D7FE               	goto	u3537
  1315  006E48  2E3C               	decfsz	??_main& (0+255),f,c
  1316  006E4A  D7FC               	goto	u3537
  1317  006E4C                     l3054:
  1318                           
  1319                           ;Main.c: 42: }
  1320                           ;Main.c: 44: if(PORTAbits.RA1==1)
  1321  006E4C  A280               	btfss	3968,1,c	;volatile
  1322  006E4E  D00B               	goto	l121
  1323                           
  1324                           ;Main.c: 45: {
  1325                           ;Main.c: 46: B--;
  1326  006E50  0100               	movlb	0	; () banked
  1327  006E52  07D4               	decf	_B& (0+255),f,b
  1328  006E54  A0D8               	btfss	status,0,c
  1329  006E56  07D5               	decf	(_B+1)& (0+255),f,b
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;Main.c: 47: _delay((unsigned long)((10)*(4000000/4000.0)));
  1333  006E58  0E0D               	movlw	13
  1334  006E5A  6E3C               	movwf	??_main& (0+255),c
  1335  006E5C  0EFC               	movlw	252
  1336  006E5E                     u3547:
  1337  006E5E  2EE8               	decfsz	wreg,f,c
  1338  006E60  D7FE               	goto	u3547
  1339  006E62  2E3C               	decfsz	??_main& (0+255),f,c
  1340  006E64  D7FC               	goto	u3547
  1341  006E66                     l121:
  1342                           
  1343                           ;Main.c: 48: }
  1344                           ;Main.c: 50: if(B==0){
  1345  006E66  0100               	movlb	0	; () banked
  1346  006E68  51D5               	movf	(_B+1)& (0+255),w,b
  1347  006E6A  11D4               	iorwf	_B& (0+255),w,b
  1348  006E6C  A4D8               	btfss	status,2,c
  1349  006E6E  D01C               	goto	l3068
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;Main.c: 51: Lcd_Init();
  1353  006E70  EC7A  F032         	call	_Lcd_Init	;wreg free
  1354                           
  1355                           ;Main.c: 52: Lcd_Cmd(1);
  1356  006E74  0E01               	movlw	1
  1357  006E76  ECE7  F031         	call	_Lcd_Cmd
  1358                           
  1359                           ;Main.c: 53: Lcd_Cmd(12);
  1360  006E7A  0E0C               	movlw	12
  1361  006E7C  ECE7  F031         	call	_Lcd_Cmd
  1362                           
  1363                           ;Main.c: 54: Lcd_Out2(1,1,"     DICIS");
  1364  006E80  0E01               	movlw	1
  1365  006E82  6E04               	movwf	Lcd_Out2@x,c
  1366  006E84  0E7E               	movlw	high STR_1
  1367  006E86  6E06               	movwf	Lcd_Out2@buffer+1,c
  1368  006E88  0EF5               	movlw	low STR_1
  1369  006E8A  6E05               	movwf	Lcd_Out2@buffer,c
  1370  006E8C  0E01               	movlw	1
  1371  006E8E  ECAB  F02D         	call	_Lcd_Out2
  1372                           
  1373                           ;Main.c: 55: Lcd_Out2(2,1,"Proyecto Final ");
  1374  006E92  0E01               	movlw	1
  1375  006E94  6E04               	movwf	Lcd_Out2@x,c
  1376  006E96  0E7E               	movlw	high STR_2
  1377  006E98  6E06               	movwf	Lcd_Out2@buffer+1,c
  1378  006E9A  0E73               	movlw	low STR_2
  1379  006E9C  6E05               	movwf	Lcd_Out2@buffer,c
  1380  006E9E  0E02               	movlw	2
  1381  006EA0  ECAB  F02D         	call	_Lcd_Out2
  1382                           
  1383                           ;Main.c: 56: tm_1s();
  1384  006EA4  EC20  F02E         	call	_tm_1s	;wreg free
  1385  006EA8                     l3068:
  1386                           
  1387                           ;Main.c: 59: }
  1388                           ;Main.c: 61: if(B==1){
  1389  006EA8  0100               	movlb	0	; () banked
  1390  006EAA  05D4               	decf	_B& (0+255),w,b
  1391  006EAC  11D5               	iorwf	(_B+1)& (0+255),w,b
  1392  006EAE  A4D8               	btfss	status,2,c
  1393  006EB0  EFCD  F03C         	goto	l3500
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;Main.c: 62: Lcd_Init();
  1397  006EB4  EC7A  F032         	call	_Lcd_Init	;wreg free
  1398                           
  1399                           ;Main.c: 63: Lcd_Cmd(1);
  1400  006EB8  0E01               	movlw	1
  1401  006EBA  ECE7  F031         	call	_Lcd_Cmd
  1402                           
  1403                           ;Main.c: 64: Lcd_Cmd(12);
  1404  006EBE  0E0C               	movlw	12
  1405  006EC0  ECE7  F031         	call	_Lcd_Cmd
  1406                           
  1407                           ;Main.c: 65: Lcd_Out2(1,1,"=> PWM");
  1408  006EC4  0E01               	movlw	1
  1409  006EC6  6E04               	movwf	Lcd_Out2@x,c
  1410  006EC8  0E7F               	movlw	high STR_3
  1411  006ECA  6E06               	movwf	Lcd_Out2@buffer+1,c
  1412  006ECC  0E8C               	movlw	low STR_3
  1413  006ECE  6E05               	movwf	Lcd_Out2@buffer,c
  1414  006ED0  0E01               	movlw	1
  1415  006ED2  ECAB  F02D         	call	_Lcd_Out2
  1416                           
  1417                           ;Main.c: 66: Lcd_Out2(2,1,"   Senoidal");
  1418  006ED6  0E01               	movlw	1
  1419  006ED8  6E04               	movwf	Lcd_Out2@x,c
  1420  006EDA  0E7E               	movlw	high STR_4
  1421  006EDC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1422  006EDE  0EAD               	movlw	low STR_4
  1423  006EE0  6E05               	movwf	Lcd_Out2@buffer,c
  1424  006EE2  0E02               	movlw	2
  1425  006EE4  ECAB  F02D         	call	_Lcd_Out2
  1426                           
  1427                           ;Main.c: 67: tm_1s();
  1428  006EE8  EC20  F02E         	call	_tm_1s	;wreg free
  1429                           
  1430                           ;Main.c: 70: if(PORTAbits.RA2==1){
  1431  006EEC  A480               	btfss	3968,2,c	;volatile
  1432  006EEE  EFCD  F03C         	goto	l3500
  1433  006EF2                     l3080:
  1434                           
  1435                           ;Main.c: 72: w=0;
  1436  006EF2  0E00               	movlw	0
  1437  006EF4  0100               	movlb	0	; () banked
  1438  006EF6  6FE3               	movwf	(_w+1)& (0+255),b
  1439  006EF8  0E00               	movlw	0
  1440  006EFA  0100               	movlb	0	; () banked
  1441  006EFC  6FE2               	movwf	_w& (0+255),b
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;Main.c: 73: if(B==0){
  1445  006EFE  0100               	movlb	0	; () banked
  1446  006F00  51D5               	movf	(_B+1)& (0+255),w,b
  1447  006F02  11D4               	iorwf	_B& (0+255),w,b
  1448  006F04  A4D8               	btfss	status,2,c
  1449  006F06  D01C               	goto	l3092
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;Main.c: 74: Lcd_Init();
  1453  006F08  EC7A  F032         	call	_Lcd_Init	;wreg free
  1454                           
  1455                           ;Main.c: 75: Lcd_Cmd(1);
  1456  006F0C  0E01               	movlw	1
  1457  006F0E  ECE7  F031         	call	_Lcd_Cmd
  1458                           
  1459                           ;Main.c: 76: Lcd_Cmd(12);
  1460  006F12  0E0C               	movlw	12
  1461  006F14  ECE7  F031         	call	_Lcd_Cmd
  1462                           
  1463                           ;Main.c: 77: Lcd_Out2(1,1,"   Ingresar");
  1464  006F18  0E01               	movlw	1
  1465  006F1A  6E04               	movwf	Lcd_Out2@x,c
  1466  006F1C  0E7E               	movlw	high STR_5
  1467  006F1E  6E06               	movwf	Lcd_Out2@buffer+1,c
  1468  006F20  0EC5               	movlw	low STR_5
  1469  006F22  6E05               	movwf	Lcd_Out2@buffer,c
  1470  006F24  0E01               	movlw	1
  1471  006F26  ECAB  F02D         	call	_Lcd_Out2
  1472                           
  1473                           ;Main.c: 78: Lcd_Out2(2,1,"   Comenzar");
  1474  006F2A  0E01               	movlw	1
  1475  006F2C  6E04               	movwf	Lcd_Out2@x,c
  1476  006F2E  0E7E               	movlw	high STR_6
  1477  006F30  6E06               	movwf	Lcd_Out2@buffer+1,c
  1478  006F32  0EDD               	movlw	low STR_6
  1479  006F34  6E05               	movwf	Lcd_Out2@buffer,c
  1480  006F36  0E02               	movlw	2
  1481  006F38  ECAB  F02D         	call	_Lcd_Out2
  1482                           
  1483                           ;Main.c: 79: tm_1s();
  1484  006F3C  EC20  F02E         	call	_tm_1s	;wreg free
  1485  006F40                     l3092:
  1486                           
  1487                           ;Main.c: 80: }
  1488                           ;Main.c: 81: if(B==1){
  1489  006F40  0100               	movlb	0	; () banked
  1490  006F42  05D4               	decf	_B& (0+255),w,b
  1491  006F44  11D5               	iorwf	(_B+1)& (0+255),w,b
  1492  006F46  A4D8               	btfss	status,2,c
  1493  006F48  EFE2  F03B         	goto	l3428
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;Main.c: 82: Lcd_Init();
  1497  006F4C  EC7A  F032         	call	_Lcd_Init	;wreg free
  1498                           
  1499                           ;Main.c: 83: Lcd_Cmd(1);
  1500  006F50  0E01               	movlw	1
  1501  006F52  ECE7  F031         	call	_Lcd_Cmd
  1502                           
  1503                           ;Main.c: 84: Lcd_Cmd(12);
  1504  006F56  0E0C               	movlw	12
  1505  006F58  ECE7  F031         	call	_Lcd_Cmd
  1506                           
  1507                           ;Main.c: 85: Lcd_Out2(1,1,"=> Ingresar");
  1508  006F5C  0E01               	movlw	1
  1509  006F5E  6E04               	movwf	Lcd_Out2@x,c
  1510  006F60  0E7E               	movlw	high STR_7
  1511  006F62  6E06               	movwf	Lcd_Out2@buffer+1,c
  1512  006F64  0ED1               	movlw	low STR_7
  1513  006F66  6E05               	movwf	Lcd_Out2@buffer,c
  1514  006F68  0E01               	movlw	1
  1515  006F6A  ECAB  F02D         	call	_Lcd_Out2
  1516                           
  1517                           ;Main.c: 86: Lcd_Out2(2,1,"   Comenzar");
  1518  006F6E  0E01               	movlw	1
  1519  006F70  6E04               	movwf	Lcd_Out2@x,c
  1520  006F72  0E7E               	movlw	high STR_6
  1521  006F74  6E06               	movwf	Lcd_Out2@buffer+1,c
  1522  006F76  0EDD               	movlw	low STR_6
  1523  006F78  6E05               	movwf	Lcd_Out2@buffer,c
  1524  006F7A  0E02               	movlw	2
  1525  006F7C  ECAB  F02D         	call	_Lcd_Out2
  1526                           
  1527                           ;Main.c: 87: tm_1s();
  1528  006F80  EC20  F02E         	call	_tm_1s	;wreg free
  1529                           
  1530                           ;Main.c: 90: if(PORTAbits.RA2==1){
  1531  006F84  A480               	btfss	3968,2,c	;volatile
  1532  006F86  EFE2  F03B         	goto	l3428
  1533  006F8A                     l3104:
  1534                           
  1535                           ;Main.c: 92: e=0;
  1536  006F8A  0E00               	movlw	0
  1537  006F8C  0100               	movlb	0	; () banked
  1538  006F8E  6FD9               	movwf	(_e+1)& (0+255),b
  1539  006F90  0E00               	movlw	0
  1540  006F92  0100               	movlb	0	; () banked
  1541  006F94  6FD8               	movwf	_e& (0+255),b
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;Main.c: 93: if(B==0){
  1545  006F96  0100               	movlb	0	; () banked
  1546  006F98  51D5               	movf	(_B+1)& (0+255),w,b
  1547  006F9A  11D4               	iorwf	_B& (0+255),w,b
  1548  006F9C  A4D8               	btfss	status,2,c
  1549  006F9E  D01C               	goto	l3116
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;Main.c: 94: Lcd_Init();
  1553  006FA0  EC7A  F032         	call	_Lcd_Init	;wreg free
  1554                           
  1555                           ;Main.c: 95: Lcd_Cmd(1);
  1556  006FA4  0E01               	movlw	1
  1557  006FA6  ECE7  F031         	call	_Lcd_Cmd
  1558                           
  1559                           ;Main.c: 96: Lcd_Cmd(12);
  1560  006FAA  0E0C               	movlw	12
  1561  006FAC  ECE7  F031         	call	_Lcd_Cmd
  1562                           
  1563                           ;Main.c: 97: Lcd_Out2(1,1,"   Frecuencia");
  1564  006FB0  0E01               	movlw	1
  1565  006FB2  6E04               	movwf	Lcd_Out2@x,c
  1566  006FB4  0E7E               	movlw	high STR_9
  1567  006FB6  6E06               	movwf	Lcd_Out2@buffer+1,c
  1568  006FB8  0E83               	movlw	low STR_9
  1569  006FBA  6E05               	movwf	Lcd_Out2@buffer,c
  1570  006FBC  0E01               	movlw	1
  1571  006FBE  ECAB  F02D         	call	_Lcd_Out2
  1572                           
  1573                           ;Main.c: 98: Lcd_Out2(2,1,"   Ciclo");
  1574  006FC2  0E01               	movlw	1
  1575  006FC4  6E04               	movwf	Lcd_Out2@x,c
  1576  006FC6  0E7F               	movlw	high STR_10
  1577  006FC8  6E06               	movwf	Lcd_Out2@buffer+1,c
  1578  006FCA  0E6A               	movlw	low STR_10
  1579  006FCC  6E05               	movwf	Lcd_Out2@buffer,c
  1580  006FCE  0E02               	movlw	2
  1581  006FD0  ECAB  F02D         	call	_Lcd_Out2
  1582                           
  1583                           ;Main.c: 99: tm_1s();
  1584  006FD4  EC20  F02E         	call	_tm_1s	;wreg free
  1585  006FD8                     l3116:
  1586                           
  1587                           ;Main.c: 101: }
  1588                           ;Main.c: 102: if(B==1){
  1589  006FD8  0100               	movlb	0	; () banked
  1590  006FDA  05D4               	decf	_B& (0+255),w,b
  1591  006FDC  11D5               	iorwf	(_B+1)& (0+255),w,b
  1592  006FDE  A4D8               	btfss	status,2,c
  1593  006FE0  D0AD               	goto	l3184
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;Main.c: 104: Lcd_Init();
  1597  006FE2  EC7A  F032         	call	_Lcd_Init	;wreg free
  1598                           
  1599                           ;Main.c: 105: Lcd_Cmd(1);
  1600  006FE6  0E01               	movlw	1
  1601  006FE8  ECE7  F031         	call	_Lcd_Cmd
  1602                           
  1603                           ;Main.c: 106: Lcd_Cmd(12);
  1604  006FEC  0E0C               	movlw	12
  1605  006FEE  ECE7  F031         	call	_Lcd_Cmd
  1606                           
  1607                           ;Main.c: 107: Lcd_Out2(1,1,"=> Frecuencia");
  1608  006FF2  0E01               	movlw	1
  1609  006FF4  6E04               	movwf	Lcd_Out2@x,c
  1610  006FF6  0E7E               	movlw	high STR_11
  1611  006FF8  6E06               	movwf	Lcd_Out2@buffer+1,c
  1612  006FFA  0E91               	movlw	low STR_11
  1613  006FFC  6E05               	movwf	Lcd_Out2@buffer,c
  1614  006FFE  0E01               	movlw	1
  1615  007000  ECAB  F02D         	call	_Lcd_Out2
  1616                           
  1617                           ;Main.c: 108: Lcd_Out2(2,1,"   Ciclo");
  1618  007004  0E01               	movlw	1
  1619  007006  6E04               	movwf	Lcd_Out2@x,c
  1620  007008  0E7F               	movlw	high STR_10
  1621  00700A  6E06               	movwf	Lcd_Out2@buffer+1,c
  1622  00700C  0E6A               	movlw	low STR_10
  1623  00700E  6E05               	movwf	Lcd_Out2@buffer,c
  1624  007010  0E02               	movlw	2
  1625  007012  ECAB  F02D         	call	_Lcd_Out2
  1626                           
  1627                           ;Main.c: 109: tm_1s();
  1628  007016  EC20  F02E         	call	_tm_1s	;wreg free
  1629                           
  1630                           ;Main.c: 112: if(PORTAbits.RA2==1){
  1631  00701A  A480               	btfss	3968,2,c	;volatile
  1632  00701C  D08F               	goto	l3184
  1633                           
  1634                           ;Main.c: 113: r=0;
  1635  00701E  0E00               	movlw	0
  1636  007020  0100               	movlb	0	; () banked
  1637  007022  6FDF               	movwf	(_r+1)& (0+255),b
  1638  007024  0E00               	movlw	0
  1639  007026  0100               	movlb	0	; () banked
  1640  007028  6FDE               	movwf	_r& (0+255),b
  1641  00702A                     l3130:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;Main.c: 115: Lcd_Init();
  1645  00702A  EC7A  F032         	call	_Lcd_Init	;wreg free
  1646                           
  1647                           ;Main.c: 116: Lcd_Cmd(1);
  1648  00702E  0E01               	movlw	1
  1649  007030  ECE7  F031         	call	_Lcd_Cmd
  1650                           
  1651                           ;Main.c: 117: Lcd_Cmd(12);
  1652  007034  0E0C               	movlw	12
  1653  007036  ECE7  F031         	call	_Lcd_Cmd
  1654                           
  1655                           ;Main.c: 118: Lcd_Out2(1,1,"  000 Hz");
  1656  00703A  0E01               	movlw	1
  1657  00703C  6E04               	movwf	Lcd_Out2@x,c
  1658  00703E  0E7F               	movlw	high STR_13
  1659  007040  6E06               	movwf	Lcd_Out2@buffer+1,c
  1660  007042  0E7C               	movlw	low STR_13
  1661  007044  6E05               	movwf	Lcd_Out2@buffer,c
  1662  007046  0E01               	movlw	1
  1663  007048  ECAB  F02D         	call	_Lcd_Out2
  1664                           
  1665                           ;Main.c: 119: tm_1s();
  1666  00704C  EC20  F02E         	call	_tm_1s	;wreg free
  1667                           
  1668                           ;Main.c: 121: if(PORTAbits.RA3==1){
  1669  007050  A680               	btfss	3968,3,c	;volatile
  1670  007052  D05F               	goto	l3172
  1671                           
  1672                           ;Main.c: 122: A++;
  1673  007054  0100               	movlb	0	; () banked
  1674  007056  2BD3               	incf	main@A& (0+255),f,b
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;Main.c: 123: lcd_goto(2,1);
  1678  007058  0E00               	movlw	0
  1679  00705A  6E05               	movwf	lcd_goto@x+1,c
  1680  00705C  0E02               	movlw	2
  1681  00705E  6E04               	movwf	lcd_goto@x,c
  1682  007060  0E00               	movlw	0
  1683  007062  6E07               	movwf	lcd_goto@y+1,c
  1684  007064  0E01               	movlw	1
  1685  007066  6E06               	movwf	lcd_goto@y,c
  1686  007068  ECF7  F02C         	call	_lcd_goto	;wreg free
  1687                           
  1688                           ;Main.c: 124: Lcd_Chr_CP(A);
  1689  00706C  0100               	movlb	0	; () banked
  1690  00706E  51D3               	movf	main@A& (0+255),w,b
  1691  007070  EC0E  F033         	call	_Lcd_Chr_CP
  1692                           
  1693                           ;Main.c: 125: tm_1s();
  1694  007074  EC20  F02E         	call	_tm_1s	;wreg free
  1695                           
  1696                           ;Main.c: 126: switch(A){
  1697  007078  D02F               	goto	l3170
  1698  00707A                     l3150:
  1699  00707A  0E03               	movlw	3
  1700  00707C  0100               	movlb	0	; () banked
  1701  00707E  6FD7               	movwf	(_M+1)& (0+255),b
  1702  007080  0EE8               	movlw	232
  1703  007082  D027               	goto	L8
  1704  007084                     l3152:
  1705                           
  1706                           ; BSR set to: 0
  1707  007084  0E07               	movlw	7
  1708  007086  0100               	movlb	0	; () banked
  1709  007088  6FD7               	movwf	(_M+1)& (0+255),b
  1710  00708A  0ED0               	movlw	208
  1711  00708C  D022               	goto	L8
  1712  00708E                     l3154:
  1713                           
  1714                           ; BSR set to: 0
  1715  00708E  0E0B               	movlw	11
  1716  007090  0100               	movlb	0	; () banked
  1717  007092  6FD7               	movwf	(_M+1)& (0+255),b
  1718  007094  0EB8               	movlw	184
  1719  007096  D01D               	goto	L8
  1720  007098                     l3156:
  1721                           
  1722                           ; BSR set to: 0
  1723  007098  0E0F               	movlw	15
  1724  00709A  0100               	movlb	0	; () banked
  1725  00709C  6FD7               	movwf	(_M+1)& (0+255),b
  1726  00709E  0EA0               	movlw	160
  1727  0070A0  D018               	goto	L8
  1728  0070A2                     l3158:
  1729                           
  1730                           ; BSR set to: 0
  1731  0070A2  0E13               	movlw	19
  1732  0070A4  0100               	movlb	0	; () banked
  1733  0070A6  6FD7               	movwf	(_M+1)& (0+255),b
  1734  0070A8  0E88               	movlw	136
  1735  0070AA  D013               	goto	L8
  1736  0070AC                     l3160:
  1737                           
  1738                           ; BSR set to: 0
  1739  0070AC  0E17               	movlw	23
  1740  0070AE  0100               	movlb	0	; () banked
  1741  0070B0  6FD7               	movwf	(_M+1)& (0+255),b
  1742  0070B2  0E70               	movlw	112
  1743  0070B4  D00E               	goto	L8
  1744  0070B6                     l3162:
  1745                           
  1746                           ; BSR set to: 0
  1747  0070B6  0E1B               	movlw	27
  1748  0070B8  0100               	movlb	0	; () banked
  1749  0070BA  6FD7               	movwf	(_M+1)& (0+255),b
  1750  0070BC  0E58               	movlw	88
  1751  0070BE  D009               	goto	L8
  1752  0070C0                     l3164:
  1753                           
  1754                           ; BSR set to: 0
  1755  0070C0  0E1F               	movlw	31
  1756  0070C2  0100               	movlb	0	; () banked
  1757  0070C4  6FD7               	movwf	(_M+1)& (0+255),b
  1758  0070C6  0E40               	movlw	64
  1759  0070C8  D004               	goto	L8
  1760  0070CA                     l3166:
  1761                           
  1762                           ; BSR set to: 0
  1763  0070CA  0E23               	movlw	35
  1764  0070CC  0100               	movlb	0	; () banked
  1765  0070CE  6FD7               	movwf	(_M+1)& (0+255),b
  1766  0070D0  0E28               	movlw	40
  1767  0070D2                     L8:
  1768  0070D2  0100               	movlb	0	; () banked
  1769  0070D4  6FD6               	movwf	_M& (0+255),b
  1770                           
  1771                           ;Main.c: 144: break;
  1772  0070D6  D01D               	goto	l3172
  1773  0070D8                     l3170:
  1774  0070D8  0100               	movlb	0	; () banked
  1775  0070DA  51D3               	movf	main@A& (0+255),w,b
  1776                           
  1777                           ; Switch size 1, requested type "space"
  1778                           ; Number of cases is 9, Range of values is 49 to 57
  1779                           ; switch strategies available:
  1780                           ; Name         Instructions Cycles
  1781                           ; simple_byte           28    15 (average)
  1782                           ;	Chosen strategy is simple_byte
  1783  0070DC  0A31               	xorlw	49	; case 49
  1784  0070DE  B4D8               	btfsc	status,2,c
  1785  0070E0  D7CC               	goto	l3150
  1786  0070E2  0A03               	xorlw	3	; case 50
  1787  0070E4  B4D8               	btfsc	status,2,c
  1788  0070E6  D7CE               	goto	l3152
  1789  0070E8  0A01               	xorlw	1	; case 51
  1790  0070EA  B4D8               	btfsc	status,2,c
  1791  0070EC  D7D0               	goto	l3154
  1792  0070EE  0A07               	xorlw	7	; case 52
  1793  0070F0  B4D8               	btfsc	status,2,c
  1794  0070F2  D7D2               	goto	l3156
  1795  0070F4  0A01               	xorlw	1	; case 53
  1796  0070F6  B4D8               	btfsc	status,2,c
  1797  0070F8  D7D4               	goto	l3158
  1798  0070FA  0A03               	xorlw	3	; case 54
  1799  0070FC  B4D8               	btfsc	status,2,c
  1800  0070FE  D7D6               	goto	l3160
  1801  007100  0A01               	xorlw	1	; case 55
  1802  007102  B4D8               	btfsc	status,2,c
  1803  007104  D7D8               	goto	l3162
  1804  007106  0A0F               	xorlw	15	; case 56
  1805  007108  B4D8               	btfsc	status,2,c
  1806  00710A  D7DA               	goto	l3164
  1807  00710C  0A01               	xorlw	1	; case 57
  1808  00710E  B4D8               	btfsc	status,2,c
  1809  007110  D7DC               	goto	l3166
  1810  007112                     l3172:
  1811                           
  1812                           ;Main.c: 146: }
  1813                           ;Main.c: 147: if(A>57){
  1814  007112  0E39               	movlw	57
  1815  007114  0100               	movlb	0	; () banked
  1816  007116  65D3               	cpfsgt	main@A& (0+255),b
  1817  007118  D003               	goto	l3176
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;Main.c: 148: A=47;
  1821  00711A  0E2F               	movlw	47
  1822  00711C  0100               	movlb	0	; () banked
  1823  00711E  6FD3               	movwf	main@A& (0+255),b
  1824  007120                     l3176:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;Main.c: 149: }
  1828                           ;Main.c: 150: if(PORTAbits.RA0==1 && PORTAbits.RA1==1){
  1829  007120  B080               	btfsc	3968,0,c	;volatile
  1830                           
  1831                           ; BSR set to: 0
  1832  007122  A280               	btfss	3968,1,c	;volatile
  1833  007124  D006               	goto	l3182
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;Main.c: 151: r=1;
  1837  007126  0E00               	movlw	0
  1838  007128  0100               	movlb	0	; () banked
  1839  00712A  6FDF               	movwf	(_r+1)& (0+255),b
  1840  00712C  0E01               	movlw	1
  1841  00712E  0100               	movlb	0	; () banked
  1842  007130  6FDE               	movwf	_r& (0+255),b
  1843  007132                     l3182:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;Main.c: 152: }
  1847                           ;Main.c: 154: }while(r==0);
  1848  007132  0100               	movlb	0	; () banked
  1849  007134  51DF               	movf	(_r+1)& (0+255),w,b
  1850  007136  11DE               	iorwf	_r& (0+255),w,b
  1851  007138  B4D8               	btfsc	status,2,c
  1852  00713A  D777               	goto	l3130
  1853  00713C                     l3184:
  1854                           
  1855                           ;Main.c: 156: }
  1856                           ;Main.c: 157: }
  1857                           ;Main.c: 159: if(B==2){
  1858  00713C  0100               	movlb	0	; () banked
  1859  00713E  51D4               	movf	_B& (0+255),w,b
  1860  007140  0A02               	xorlw	2
  1861  007142  11D5               	iorwf	(_B+1)& (0+255),w,b
  1862  007144  A4D8               	btfss	status,2,c
  1863  007146  D308               	goto	l149
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;Main.c: 160: Lcd_Init();
  1867  007148  EC7A  F032         	call	_Lcd_Init	;wreg free
  1868                           
  1869                           ;Main.c: 161: Lcd_Cmd(1);
  1870  00714C  0E01               	movlw	1
  1871  00714E  ECE7  F031         	call	_Lcd_Cmd
  1872                           
  1873                           ;Main.c: 162: Lcd_Cmd(12);
  1874  007152  0E0C               	movlw	12
  1875  007154  ECE7  F031         	call	_Lcd_Cmd
  1876                           
  1877                           ;Main.c: 163: Lcd_Out2(1,1,"   Frecuencia");
  1878  007158  0E01               	movlw	1
  1879  00715A  6E04               	movwf	Lcd_Out2@x,c
  1880  00715C  0E7E               	movlw	high STR_9
  1881  00715E  6E06               	movwf	Lcd_Out2@buffer+1,c
  1882  007160  0E83               	movlw	low STR_9
  1883  007162  6E05               	movwf	Lcd_Out2@buffer,c
  1884  007164  0E01               	movlw	1
  1885  007166  ECAB  F02D         	call	_Lcd_Out2
  1886                           
  1887                           ;Main.c: 164: Lcd_Out2(2,1,"=> Ciclo");
  1888  00716A  0E01               	movlw	1
  1889  00716C  6E04               	movwf	Lcd_Out2@x,c
  1890  00716E  0E7F               	movlw	high STR_15
  1891  007170  6E06               	movwf	Lcd_Out2@buffer+1,c
  1892  007172  0E73               	movlw	low STR_15
  1893  007174  6E05               	movwf	Lcd_Out2@buffer,c
  1894  007176  0E02               	movlw	2
  1895  007178  ECAB  F02D         	call	_Lcd_Out2
  1896                           
  1897                           ;Main.c: 165: tm_1s();
  1898  00717C  EC20  F02E         	call	_tm_1s	;wreg free
  1899                           
  1900                           ;Main.c: 167: if(PORTAbits.RA2==1){
  1901  007180  A480               	btfss	3968,2,c	;volatile
  1902  007182  D2EA               	goto	l149
  1903  007184                     l3196:
  1904                           
  1905                           ;Main.c: 170: t=0;
  1906  007184  0E00               	movlw	0
  1907  007186  0100               	movlb	0	; () banked
  1908  007188  6FE1               	movwf	(_t+1)& (0+255),b
  1909  00718A  0E00               	movlw	0
  1910  00718C  0100               	movlb	0	; () banked
  1911  00718E  6FE0               	movwf	_t& (0+255),b
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;Main.c: 173: if(B==1){
  1915  007190  0100               	movlb	0	; () banked
  1916  007192  05D4               	decf	_B& (0+255),w,b
  1917  007194  11D5               	iorwf	(_B+1)& (0+255),w,b
  1918  007196  A4D8               	btfss	status,2,c
  1919  007198  D046               	goto	l3218
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;Main.c: 174: Lcd_Init();
  1923  00719A  EC7A  F032         	call	_Lcd_Init	;wreg free
  1924                           
  1925                           ;Main.c: 175: Lcd_Cmd(1);
  1926  00719E  0E01               	movlw	1
  1927  0071A0  ECE7  F031         	call	_Lcd_Cmd
  1928                           
  1929                           ;Main.c: 176: Lcd_Cmd(12);
  1930  0071A4  0E0C               	movlw	12
  1931  0071A6  ECE7  F031         	call	_Lcd_Cmd
  1932                           
  1933                           ;Main.c: 177: Lcd_Out2(1,0,"*10%");
  1934  0071AA  0E00               	movlw	0
  1935  0071AC  6E04               	movwf	Lcd_Out2@x,c
  1936  0071AE  0E7F               	movlw	high STR_16
  1937  0071B0  6E06               	movwf	Lcd_Out2@buffer+1,c
  1938  0071B2  0EAA               	movlw	low STR_16
  1939  0071B4  6E05               	movwf	Lcd_Out2@buffer,c
  1940  0071B6  0E01               	movlw	1
  1941  0071B8  ECAB  F02D         	call	_Lcd_Out2
  1942                           
  1943                           ;Main.c: 178: Lcd_Out2(2,0," 20%");
  1944  0071BC  0E00               	movlw	0
  1945  0071BE  6E04               	movwf	Lcd_Out2@x,c
  1946  0071C0  0E7F               	movlw	high STR_17
  1947  0071C2  6E06               	movwf	Lcd_Out2@buffer+1,c
  1948  0071C4  0EAF               	movlw	low STR_17
  1949  0071C6  6E05               	movwf	Lcd_Out2@buffer,c
  1950  0071C8  0E02               	movlw	2
  1951  0071CA  ECAB  F02D         	call	_Lcd_Out2
  1952                           
  1953                           ;Main.c: 179: Lcd_Out2(1,5," 30%");
  1954  0071CE  0E05               	movlw	5
  1955  0071D0  6E04               	movwf	Lcd_Out2@x,c
  1956  0071D2  0E7F               	movlw	high STR_18
  1957  0071D4  6E06               	movwf	Lcd_Out2@buffer+1,c
  1958  0071D6  0EB9               	movlw	low STR_18
  1959  0071D8  6E05               	movwf	Lcd_Out2@buffer,c
  1960  0071DA  0E01               	movlw	1
  1961  0071DC  ECAB  F02D         	call	_Lcd_Out2
  1962                           
  1963                           ;Main.c: 180: Lcd_Out2(2,5," 40%");
  1964  0071E0  0E05               	movlw	5
  1965  0071E2  6E04               	movwf	Lcd_Out2@x,c
  1966  0071E4  0E7F               	movlw	high STR_19
  1967  0071E6  6E06               	movwf	Lcd_Out2@buffer+1,c
  1968  0071E8  0EC3               	movlw	low STR_19
  1969  0071EA  6E05               	movwf	Lcd_Out2@buffer,c
  1970  0071EC  0E02               	movlw	2
  1971  0071EE  ECAB  F02D         	call	_Lcd_Out2
  1972                           
  1973                           ;Main.c: 181: Lcd_Out2(1,10," 50%");
  1974  0071F2  0E0A               	movlw	10
  1975  0071F4  6E04               	movwf	Lcd_Out2@x,c
  1976  0071F6  0E7F               	movlw	high STR_20
  1977  0071F8  6E06               	movwf	Lcd_Out2@buffer+1,c
  1978  0071FA  0ECD               	movlw	low STR_20
  1979  0071FC  6E05               	movwf	Lcd_Out2@buffer,c
  1980  0071FE  0E01               	movlw	1
  1981  007200  ECAB  F02D         	call	_Lcd_Out2
  1982                           
  1983                           ;Main.c: 182: Lcd_Out2(2,10," 60%");
  1984  007204  0E0A               	movlw	10
  1985  007206  6E04               	movwf	Lcd_Out2@x,c
  1986  007208  0E7F               	movlw	high STR_21
  1987  00720A  6E06               	movwf	Lcd_Out2@buffer+1,c
  1988  00720C  0ED7               	movlw	low STR_21
  1989  00720E  6E05               	movwf	Lcd_Out2@buffer,c
  1990  007210  0E02               	movlw	2
  1991  007212  ECAB  F02D         	call	_Lcd_Out2
  1992                           
  1993                           ;Main.c: 183: tm_1s();
  1994  007216  EC20  F02E         	call	_tm_1s	;wreg free
  1995                           
  1996                           ;Main.c: 184: Z=10;
  1997  00721A  0E00               	movlw	0
  1998  00721C  0100               	movlb	0	; () banked
  1999  00721E  6FD2               	movwf	(main@Z+1)& (0+255),b
  2000  007220  0E0A               	movlw	10
  2001  007222  0100               	movlb	0	; () banked
  2002  007224  6FD1               	movwf	main@Z& (0+255),b
  2003  007226                     l3218:
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;Main.c: 186: }
  2007                           ;Main.c: 187: if(B==2){
  2008  007226  0100               	movlb	0	; () banked
  2009  007228  51D4               	movf	_B& (0+255),w,b
  2010  00722A  0A02               	xorlw	2
  2011  00722C  11D5               	iorwf	(_B+1)& (0+255),w,b
  2012  00722E  A4D8               	btfss	status,2,c
  2013  007230  D046               	goto	l3238
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;Main.c: 188: Lcd_Init();
  2017  007232  EC7A  F032         	call	_Lcd_Init	;wreg free
  2018                           
  2019                           ;Main.c: 189: Lcd_Cmd(1);
  2020  007236  0E01               	movlw	1
  2021  007238  ECE7  F031         	call	_Lcd_Cmd
  2022                           
  2023                           ;Main.c: 190: Lcd_Cmd(12);
  2024  00723C  0E0C               	movlw	12
  2025  00723E  ECE7  F031         	call	_Lcd_Cmd
  2026                           
  2027                           ;Main.c: 191: Lcd_Out2(1,0," 10%");
  2028  007242  0E00               	movlw	0
  2029  007244  6E04               	movwf	Lcd_Out2@x,c
  2030  007246  0E7F               	movlw	high STR_22
  2031  007248  6E06               	movwf	Lcd_Out2@buffer+1,c
  2032  00724A  0EA5               	movlw	low STR_22
  2033  00724C  6E05               	movwf	Lcd_Out2@buffer,c
  2034  00724E  0E01               	movlw	1
  2035  007250  ECAB  F02D         	call	_Lcd_Out2
  2036                           
  2037                           ;Main.c: 192: Lcd_Out2(2,0,"*20%");
  2038  007254  0E00               	movlw	0
  2039  007256  6E04               	movwf	Lcd_Out2@x,c
  2040  007258  0E7F               	movlw	high STR_23
  2041  00725A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2042  00725C  0EB4               	movlw	low STR_23
  2043  00725E  6E05               	movwf	Lcd_Out2@buffer,c
  2044  007260  0E02               	movlw	2
  2045  007262  ECAB  F02D         	call	_Lcd_Out2
  2046                           
  2047                           ;Main.c: 193: Lcd_Out2(1,5," 30%");
  2048  007266  0E05               	movlw	5
  2049  007268  6E04               	movwf	Lcd_Out2@x,c
  2050  00726A  0E7F               	movlw	high STR_18
  2051  00726C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2052  00726E  0EB9               	movlw	low STR_18
  2053  007270  6E05               	movwf	Lcd_Out2@buffer,c
  2054  007272  0E01               	movlw	1
  2055  007274  ECAB  F02D         	call	_Lcd_Out2
  2056                           
  2057                           ;Main.c: 194: Lcd_Out2(2,5," 40%");
  2058  007278  0E05               	movlw	5
  2059  00727A  6E04               	movwf	Lcd_Out2@x,c
  2060  00727C  0E7F               	movlw	high STR_19
  2061  00727E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2062  007280  0EC3               	movlw	low STR_19
  2063  007282  6E05               	movwf	Lcd_Out2@buffer,c
  2064  007284  0E02               	movlw	2
  2065  007286  ECAB  F02D         	call	_Lcd_Out2
  2066                           
  2067                           ;Main.c: 195: Lcd_Out2(1,10," 50%");
  2068  00728A  0E0A               	movlw	10
  2069  00728C  6E04               	movwf	Lcd_Out2@x,c
  2070  00728E  0E7F               	movlw	high STR_20
  2071  007290  6E06               	movwf	Lcd_Out2@buffer+1,c
  2072  007292  0ECD               	movlw	low STR_20
  2073  007294  6E05               	movwf	Lcd_Out2@buffer,c
  2074  007296  0E01               	movlw	1
  2075  007298  ECAB  F02D         	call	_Lcd_Out2
  2076                           
  2077                           ;Main.c: 196: Lcd_Out2(2,10," 60%");
  2078  00729C  0E0A               	movlw	10
  2079  00729E  6E04               	movwf	Lcd_Out2@x,c
  2080  0072A0  0E7F               	movlw	high STR_21
  2081  0072A2  6E06               	movwf	Lcd_Out2@buffer+1,c
  2082  0072A4  0ED7               	movlw	low STR_21
  2083  0072A6  6E05               	movwf	Lcd_Out2@buffer,c
  2084  0072A8  0E02               	movlw	2
  2085  0072AA  ECAB  F02D         	call	_Lcd_Out2
  2086                           
  2087                           ;Main.c: 197: tm_1s();
  2088  0072AE  EC20  F02E         	call	_tm_1s	;wreg free
  2089                           
  2090                           ;Main.c: 198: Z=20;
  2091  0072B2  0E00               	movlw	0
  2092  0072B4  0100               	movlb	0	; () banked
  2093  0072B6  6FD2               	movwf	(main@Z+1)& (0+255),b
  2094  0072B8  0E14               	movlw	20
  2095  0072BA  0100               	movlb	0	; () banked
  2096  0072BC  6FD1               	movwf	main@Z& (0+255),b
  2097  0072BE                     l3238:
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;Main.c: 200: }
  2101                           ;Main.c: 201: if(B==3){
  2102  0072BE  0100               	movlb	0	; () banked
  2103  0072C0  51D4               	movf	_B& (0+255),w,b
  2104  0072C2  0A03               	xorlw	3
  2105  0072C4  11D5               	iorwf	(_B+1)& (0+255),w,b
  2106  0072C6  A4D8               	btfss	status,2,c
  2107  0072C8  D046               	goto	l3258
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;Main.c: 202: Lcd_Init();
  2111  0072CA  EC7A  F032         	call	_Lcd_Init	;wreg free
  2112                           
  2113                           ;Main.c: 203: Lcd_Cmd(1);
  2114  0072CE  0E01               	movlw	1
  2115  0072D0  ECE7  F031         	call	_Lcd_Cmd
  2116                           
  2117                           ;Main.c: 204: Lcd_Cmd(12);
  2118  0072D4  0E0C               	movlw	12
  2119  0072D6  ECE7  F031         	call	_Lcd_Cmd
  2120                           
  2121                           ;Main.c: 205: Lcd_Out2(1,0," 10%");
  2122  0072DA  0E00               	movlw	0
  2123  0072DC  6E04               	movwf	Lcd_Out2@x,c
  2124  0072DE  0E7F               	movlw	high STR_22
  2125  0072E0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2126  0072E2  0EA5               	movlw	low STR_22
  2127  0072E4  6E05               	movwf	Lcd_Out2@buffer,c
  2128  0072E6  0E01               	movlw	1
  2129  0072E8  ECAB  F02D         	call	_Lcd_Out2
  2130                           
  2131                           ;Main.c: 206: Lcd_Out2(2,0," 20%");
  2132  0072EC  0E00               	movlw	0
  2133  0072EE  6E04               	movwf	Lcd_Out2@x,c
  2134  0072F0  0E7F               	movlw	high STR_17
  2135  0072F2  6E06               	movwf	Lcd_Out2@buffer+1,c
  2136  0072F4  0EAF               	movlw	low STR_17
  2137  0072F6  6E05               	movwf	Lcd_Out2@buffer,c
  2138  0072F8  0E02               	movlw	2
  2139  0072FA  ECAB  F02D         	call	_Lcd_Out2
  2140                           
  2141                           ;Main.c: 207: Lcd_Out2(1,5,"*30%");
  2142  0072FE  0E05               	movlw	5
  2143  007300  6E04               	movwf	Lcd_Out2@x,c
  2144  007302  0E7F               	movlw	high STR_30
  2145  007304  6E06               	movwf	Lcd_Out2@buffer+1,c
  2146  007306  0EBE               	movlw	low STR_30
  2147  007308  6E05               	movwf	Lcd_Out2@buffer,c
  2148  00730A  0E01               	movlw	1
  2149  00730C  ECAB  F02D         	call	_Lcd_Out2
  2150                           
  2151                           ;Main.c: 208: Lcd_Out2(2,5," 40%");
  2152  007310  0E05               	movlw	5
  2153  007312  6E04               	movwf	Lcd_Out2@x,c
  2154  007314  0E7F               	movlw	high STR_19
  2155  007316  6E06               	movwf	Lcd_Out2@buffer+1,c
  2156  007318  0EC3               	movlw	low STR_19
  2157  00731A  6E05               	movwf	Lcd_Out2@buffer,c
  2158  00731C  0E02               	movlw	2
  2159  00731E  ECAB  F02D         	call	_Lcd_Out2
  2160                           
  2161                           ;Main.c: 209: Lcd_Out2(1,10," 50%");
  2162  007322  0E0A               	movlw	10
  2163  007324  6E04               	movwf	Lcd_Out2@x,c
  2164  007326  0E7F               	movlw	high STR_20
  2165  007328  6E06               	movwf	Lcd_Out2@buffer+1,c
  2166  00732A  0ECD               	movlw	low STR_20
  2167  00732C  6E05               	movwf	Lcd_Out2@buffer,c
  2168  00732E  0E01               	movlw	1
  2169  007330  ECAB  F02D         	call	_Lcd_Out2
  2170                           
  2171                           ;Main.c: 210: Lcd_Out2(2,10," 60%");
  2172  007334  0E0A               	movlw	10
  2173  007336  6E04               	movwf	Lcd_Out2@x,c
  2174  007338  0E7F               	movlw	high STR_21
  2175  00733A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2176  00733C  0ED7               	movlw	low STR_21
  2177  00733E  6E05               	movwf	Lcd_Out2@buffer,c
  2178  007340  0E02               	movlw	2
  2179  007342  ECAB  F02D         	call	_Lcd_Out2
  2180                           
  2181                           ;Main.c: 211: tm_1s();
  2182  007346  EC20  F02E         	call	_tm_1s	;wreg free
  2183                           
  2184                           ;Main.c: 212: Z=30;
  2185  00734A  0E00               	movlw	0
  2186  00734C  0100               	movlb	0	; () banked
  2187  00734E  6FD2               	movwf	(main@Z+1)& (0+255),b
  2188  007350  0E1E               	movlw	30
  2189  007352  0100               	movlb	0	; () banked
  2190  007354  6FD1               	movwf	main@Z& (0+255),b
  2191  007356                     l3258:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;Main.c: 215: }
  2195                           ;Main.c: 216: if(B==4){
  2196  007356  0100               	movlb	0	; () banked
  2197  007358  51D4               	movf	_B& (0+255),w,b
  2198  00735A  0A04               	xorlw	4
  2199  00735C  11D5               	iorwf	(_B+1)& (0+255),w,b
  2200  00735E  A4D8               	btfss	status,2,c
  2201  007360  D046               	goto	l3278
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;Main.c: 217: Lcd_Init();
  2205  007362  EC7A  F032         	call	_Lcd_Init	;wreg free
  2206                           
  2207                           ;Main.c: 218: Lcd_Cmd(1);
  2208  007366  0E01               	movlw	1
  2209  007368  ECE7  F031         	call	_Lcd_Cmd
  2210                           
  2211                           ;Main.c: 219: Lcd_Cmd(12);
  2212  00736C  0E0C               	movlw	12
  2213  00736E  ECE7  F031         	call	_Lcd_Cmd
  2214                           
  2215                           ;Main.c: 220: Lcd_Out2(1,0," 10%");
  2216  007372  0E00               	movlw	0
  2217  007374  6E04               	movwf	Lcd_Out2@x,c
  2218  007376  0E7F               	movlw	high STR_22
  2219  007378  6E06               	movwf	Lcd_Out2@buffer+1,c
  2220  00737A  0EA5               	movlw	low STR_22
  2221  00737C  6E05               	movwf	Lcd_Out2@buffer,c
  2222  00737E  0E01               	movlw	1
  2223  007380  ECAB  F02D         	call	_Lcd_Out2
  2224                           
  2225                           ;Main.c: 221: Lcd_Out2(2,0," 20%");
  2226  007384  0E00               	movlw	0
  2227  007386  6E04               	movwf	Lcd_Out2@x,c
  2228  007388  0E7F               	movlw	high STR_17
  2229  00738A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2230  00738C  0EAF               	movlw	low STR_17
  2231  00738E  6E05               	movwf	Lcd_Out2@buffer,c
  2232  007390  0E02               	movlw	2
  2233  007392  ECAB  F02D         	call	_Lcd_Out2
  2234                           
  2235                           ;Main.c: 222: Lcd_Out2(1,5," 30%");
  2236  007396  0E05               	movlw	5
  2237  007398  6E04               	movwf	Lcd_Out2@x,c
  2238  00739A  0E7F               	movlw	high STR_18
  2239  00739C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2240  00739E  0EB9               	movlw	low STR_18
  2241  0073A0  6E05               	movwf	Lcd_Out2@buffer,c
  2242  0073A2  0E01               	movlw	1
  2243  0073A4  ECAB  F02D         	call	_Lcd_Out2
  2244                           
  2245                           ;Main.c: 223: Lcd_Out2(2,5,"*40%");
  2246  0073A8  0E05               	movlw	5
  2247  0073AA  6E04               	movwf	Lcd_Out2@x,c
  2248  0073AC  0E7F               	movlw	high STR_37
  2249  0073AE  6E06               	movwf	Lcd_Out2@buffer+1,c
  2250  0073B0  0EC8               	movlw	low STR_37
  2251  0073B2  6E05               	movwf	Lcd_Out2@buffer,c
  2252  0073B4  0E02               	movlw	2
  2253  0073B6  ECAB  F02D         	call	_Lcd_Out2
  2254                           
  2255                           ;Main.c: 224: Lcd_Out2(1,10," 50%");
  2256  0073BA  0E0A               	movlw	10
  2257  0073BC  6E04               	movwf	Lcd_Out2@x,c
  2258  0073BE  0E7F               	movlw	high STR_20
  2259  0073C0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2260  0073C2  0ECD               	movlw	low STR_20
  2261  0073C4  6E05               	movwf	Lcd_Out2@buffer,c
  2262  0073C6  0E01               	movlw	1
  2263  0073C8  ECAB  F02D         	call	_Lcd_Out2
  2264                           
  2265                           ;Main.c: 225: Lcd_Out2(2,10," 60%");
  2266  0073CC  0E0A               	movlw	10
  2267  0073CE  6E04               	movwf	Lcd_Out2@x,c
  2268  0073D0  0E7F               	movlw	high STR_21
  2269  0073D2  6E06               	movwf	Lcd_Out2@buffer+1,c
  2270  0073D4  0ED7               	movlw	low STR_21
  2271  0073D6  6E05               	movwf	Lcd_Out2@buffer,c
  2272  0073D8  0E02               	movlw	2
  2273  0073DA  ECAB  F02D         	call	_Lcd_Out2
  2274                           
  2275                           ;Main.c: 226: tm_1s();
  2276  0073DE  EC20  F02E         	call	_tm_1s	;wreg free
  2277                           
  2278                           ;Main.c: 227: Z=40;
  2279  0073E2  0E00               	movlw	0
  2280  0073E4  0100               	movlb	0	; () banked
  2281  0073E6  6FD2               	movwf	(main@Z+1)& (0+255),b
  2282  0073E8  0E28               	movlw	40
  2283  0073EA  0100               	movlb	0	; () banked
  2284  0073EC  6FD1               	movwf	main@Z& (0+255),b
  2285  0073EE                     l3278:
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;Main.c: 230: }
  2289                           ;Main.c: 231: if(B==5){
  2290  0073EE  0100               	movlb	0	; () banked
  2291  0073F0  51D4               	movf	_B& (0+255),w,b
  2292  0073F2  0A05               	xorlw	5
  2293  0073F4  11D5               	iorwf	(_B+1)& (0+255),w,b
  2294  0073F6  A4D8               	btfss	status,2,c
  2295  0073F8  D046               	goto	l3298
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;Main.c: 232: Lcd_Init();
  2299  0073FA  EC7A  F032         	call	_Lcd_Init	;wreg free
  2300                           
  2301                           ;Main.c: 233: Lcd_Cmd(1);
  2302  0073FE  0E01               	movlw	1
  2303  007400  ECE7  F031         	call	_Lcd_Cmd
  2304                           
  2305                           ;Main.c: 234: Lcd_Cmd(12);
  2306  007404  0E0C               	movlw	12
  2307  007406  ECE7  F031         	call	_Lcd_Cmd
  2308                           
  2309                           ;Main.c: 235: Lcd_Out2(1,0," 10%");
  2310  00740A  0E00               	movlw	0
  2311  00740C  6E04               	movwf	Lcd_Out2@x,c
  2312  00740E  0E7F               	movlw	high STR_22
  2313  007410  6E06               	movwf	Lcd_Out2@buffer+1,c
  2314  007412  0EA5               	movlw	low STR_22
  2315  007414  6E05               	movwf	Lcd_Out2@buffer,c
  2316  007416  0E01               	movlw	1
  2317  007418  ECAB  F02D         	call	_Lcd_Out2
  2318                           
  2319                           ;Main.c: 236: Lcd_Out2(2,0," 20%");
  2320  00741C  0E00               	movlw	0
  2321  00741E  6E04               	movwf	Lcd_Out2@x,c
  2322  007420  0E7F               	movlw	high STR_17
  2323  007422  6E06               	movwf	Lcd_Out2@buffer+1,c
  2324  007424  0EAF               	movlw	low STR_17
  2325  007426  6E05               	movwf	Lcd_Out2@buffer,c
  2326  007428  0E02               	movlw	2
  2327  00742A  ECAB  F02D         	call	_Lcd_Out2
  2328                           
  2329                           ;Main.c: 237: Lcd_Out2(1,5," 30%");
  2330  00742E  0E05               	movlw	5
  2331  007430  6E04               	movwf	Lcd_Out2@x,c
  2332  007432  0E7F               	movlw	high STR_18
  2333  007434  6E06               	movwf	Lcd_Out2@buffer+1,c
  2334  007436  0EB9               	movlw	low STR_18
  2335  007438  6E05               	movwf	Lcd_Out2@buffer,c
  2336  00743A  0E01               	movlw	1
  2337  00743C  ECAB  F02D         	call	_Lcd_Out2
  2338                           
  2339                           ;Main.c: 238: Lcd_Out2(2,5," 40%");
  2340  007440  0E05               	movlw	5
  2341  007442  6E04               	movwf	Lcd_Out2@x,c
  2342  007444  0E7F               	movlw	high STR_19
  2343  007446  6E06               	movwf	Lcd_Out2@buffer+1,c
  2344  007448  0EC3               	movlw	low STR_19
  2345  00744A  6E05               	movwf	Lcd_Out2@buffer,c
  2346  00744C  0E02               	movlw	2
  2347  00744E  ECAB  F02D         	call	_Lcd_Out2
  2348                           
  2349                           ;Main.c: 239: Lcd_Out2(1,10,"*50%");
  2350  007452  0E0A               	movlw	10
  2351  007454  6E04               	movwf	Lcd_Out2@x,c
  2352  007456  0E7F               	movlw	high STR_44
  2353  007458  6E06               	movwf	Lcd_Out2@buffer+1,c
  2354  00745A  0ED2               	movlw	low STR_44
  2355  00745C  6E05               	movwf	Lcd_Out2@buffer,c
  2356  00745E  0E01               	movlw	1
  2357  007460  ECAB  F02D         	call	_Lcd_Out2
  2358                           
  2359                           ;Main.c: 240: Lcd_Out2(2,10," 60%");
  2360  007464  0E0A               	movlw	10
  2361  007466  6E04               	movwf	Lcd_Out2@x,c
  2362  007468  0E7F               	movlw	high STR_21
  2363  00746A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2364  00746C  0ED7               	movlw	low STR_21
  2365  00746E  6E05               	movwf	Lcd_Out2@buffer,c
  2366  007470  0E02               	movlw	2
  2367  007472  ECAB  F02D         	call	_Lcd_Out2
  2368                           
  2369                           ;Main.c: 241: tm_1s();
  2370  007476  EC20  F02E         	call	_tm_1s	;wreg free
  2371                           
  2372                           ;Main.c: 242: Z=50;
  2373  00747A  0E00               	movlw	0
  2374  00747C  0100               	movlb	0	; () banked
  2375  00747E  6FD2               	movwf	(main@Z+1)& (0+255),b
  2376  007480  0E32               	movlw	50
  2377  007482  0100               	movlb	0	; () banked
  2378  007484  6FD1               	movwf	main@Z& (0+255),b
  2379  007486                     l3298:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;Main.c: 245: }
  2383                           ;Main.c: 246: if(B==6){
  2384  007486  0100               	movlb	0	; () banked
  2385  007488  51D4               	movf	_B& (0+255),w,b
  2386  00748A  0A06               	xorlw	6
  2387  00748C  11D5               	iorwf	(_B+1)& (0+255),w,b
  2388  00748E  A4D8               	btfss	status,2,c
  2389  007490  D046               	goto	l3318
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;Main.c: 247: Lcd_Init();
  2393  007492  EC7A  F032         	call	_Lcd_Init	;wreg free
  2394                           
  2395                           ;Main.c: 248: Lcd_Cmd(1);
  2396  007496  0E01               	movlw	1
  2397  007498  ECE7  F031         	call	_Lcd_Cmd
  2398                           
  2399                           ;Main.c: 249: Lcd_Cmd(12);
  2400  00749C  0E0C               	movlw	12
  2401  00749E  ECE7  F031         	call	_Lcd_Cmd
  2402                           
  2403                           ;Main.c: 250: Lcd_Out2(1,0," 10%");
  2404  0074A2  0E00               	movlw	0
  2405  0074A4  6E04               	movwf	Lcd_Out2@x,c
  2406  0074A6  0E7F               	movlw	high STR_22
  2407  0074A8  6E06               	movwf	Lcd_Out2@buffer+1,c
  2408  0074AA  0EA5               	movlw	low STR_22
  2409  0074AC  6E05               	movwf	Lcd_Out2@buffer,c
  2410  0074AE  0E01               	movlw	1
  2411  0074B0  ECAB  F02D         	call	_Lcd_Out2
  2412                           
  2413                           ;Main.c: 251: Lcd_Out2(2,0," 20%");
  2414  0074B4  0E00               	movlw	0
  2415  0074B6  6E04               	movwf	Lcd_Out2@x,c
  2416  0074B8  0E7F               	movlw	high STR_17
  2417  0074BA  6E06               	movwf	Lcd_Out2@buffer+1,c
  2418  0074BC  0EAF               	movlw	low STR_17
  2419  0074BE  6E05               	movwf	Lcd_Out2@buffer,c
  2420  0074C0  0E02               	movlw	2
  2421  0074C2  ECAB  F02D         	call	_Lcd_Out2
  2422                           
  2423                           ;Main.c: 252: Lcd_Out2(1,5," 30%");
  2424  0074C6  0E05               	movlw	5
  2425  0074C8  6E04               	movwf	Lcd_Out2@x,c
  2426  0074CA  0E7F               	movlw	high STR_18
  2427  0074CC  6E06               	movwf	Lcd_Out2@buffer+1,c
  2428  0074CE  0EB9               	movlw	low STR_18
  2429  0074D0  6E05               	movwf	Lcd_Out2@buffer,c
  2430  0074D2  0E01               	movlw	1
  2431  0074D4  ECAB  F02D         	call	_Lcd_Out2
  2432                           
  2433                           ;Main.c: 253: Lcd_Out2(2,5," 40%");
  2434  0074D8  0E05               	movlw	5
  2435  0074DA  6E04               	movwf	Lcd_Out2@x,c
  2436  0074DC  0E7F               	movlw	high STR_19
  2437  0074DE  6E06               	movwf	Lcd_Out2@buffer+1,c
  2438  0074E0  0EC3               	movlw	low STR_19
  2439  0074E2  6E05               	movwf	Lcd_Out2@buffer,c
  2440  0074E4  0E02               	movlw	2
  2441  0074E6  ECAB  F02D         	call	_Lcd_Out2
  2442                           
  2443                           ;Main.c: 254: Lcd_Out2(1,10," 50%");
  2444  0074EA  0E0A               	movlw	10
  2445  0074EC  6E04               	movwf	Lcd_Out2@x,c
  2446  0074EE  0E7F               	movlw	high STR_20
  2447  0074F0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2448  0074F2  0ECD               	movlw	low STR_20
  2449  0074F4  6E05               	movwf	Lcd_Out2@buffer,c
  2450  0074F6  0E01               	movlw	1
  2451  0074F8  ECAB  F02D         	call	_Lcd_Out2
  2452                           
  2453                           ;Main.c: 255: Lcd_Out2(2,10,"*60%");
  2454  0074FC  0E0A               	movlw	10
  2455  0074FE  6E04               	movwf	Lcd_Out2@x,c
  2456  007500  0E7F               	movlw	high STR_51
  2457  007502  6E06               	movwf	Lcd_Out2@buffer+1,c
  2458  007504  0EDC               	movlw	low STR_51
  2459  007506  6E05               	movwf	Lcd_Out2@buffer,c
  2460  007508  0E02               	movlw	2
  2461  00750A  ECAB  F02D         	call	_Lcd_Out2
  2462                           
  2463                           ;Main.c: 256: tm_1s();
  2464  00750E  EC20  F02E         	call	_tm_1s	;wreg free
  2465                           
  2466                           ;Main.c: 257: Z=60;
  2467  007512  0E00               	movlw	0
  2468  007514  0100               	movlb	0	; () banked
  2469  007516  6FD2               	movwf	(main@Z+1)& (0+255),b
  2470  007518  0E3C               	movlw	60
  2471  00751A  0100               	movlb	0	; () banked
  2472  00751C  6FD1               	movwf	main@Z& (0+255),b
  2473  00751E                     l3318:
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;Main.c: 260: }
  2477                           ;Main.c: 261: if(B==7){
  2478  00751E  0100               	movlb	0	; () banked
  2479  007520  51D4               	movf	_B& (0+255),w,b
  2480  007522  0A07               	xorlw	7
  2481  007524  11D5               	iorwf	(_B+1)& (0+255),w,b
  2482  007526  A4D8               	btfss	status,2,c
  2483  007528  D034               	goto	l3334
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;Main.c: 264: Lcd_Init();
  2487  00752A  EC7A  F032         	call	_Lcd_Init	;wreg free
  2488                           
  2489                           ;Main.c: 265: Lcd_Cmd(1);
  2490  00752E  0E01               	movlw	1
  2491  007530  ECE7  F031         	call	_Lcd_Cmd
  2492                           
  2493                           ;Main.c: 266: Lcd_Cmd(12);
  2494  007534  0E0C               	movlw	12
  2495  007536  ECE7  F031         	call	_Lcd_Cmd
  2496                           
  2497                           ;Main.c: 267: Lcd_Out2(1,1," *70%");
  2498  00753A  0E01               	movlw	1
  2499  00753C  6E04               	movwf	Lcd_Out2@x,c
  2500  00753E  0E7F               	movlw	high STR_52
  2501  007540  6E06               	movwf	Lcd_Out2@buffer+1,c
  2502  007542  0E9F               	movlw	low STR_52
  2503  007544  6E05               	movwf	Lcd_Out2@buffer,c
  2504  007546  0E01               	movlw	1
  2505  007548  ECAB  F02D         	call	_Lcd_Out2
  2506                           
  2507                           ;Main.c: 268: Lcd_Out2(2,1," 80%");
  2508  00754C  0E01               	movlw	1
  2509  00754E  6E04               	movwf	Lcd_Out2@x,c
  2510  007550  0E7F               	movlw	high STR_53
  2511  007552  6E06               	movwf	Lcd_Out2@buffer+1,c
  2512  007554  0EE6               	movlw	low STR_53
  2513  007556  6E05               	movwf	Lcd_Out2@buffer,c
  2514  007558  0E02               	movlw	2
  2515  00755A  ECAB  F02D         	call	_Lcd_Out2
  2516                           
  2517                           ;Main.c: 269: Lcd_Out2(1,6," 90%");
  2518  00755E  0E06               	movlw	6
  2519  007560  6E04               	movwf	Lcd_Out2@x,c
  2520  007562  0E7F               	movlw	high STR_54
  2521  007564  6E06               	movwf	Lcd_Out2@buffer+1,c
  2522  007566  0EF0               	movlw	low STR_54
  2523  007568  6E05               	movwf	Lcd_Out2@buffer,c
  2524  00756A  0E01               	movlw	1
  2525  00756C  ECAB  F02D         	call	_Lcd_Out2
  2526                           
  2527                           ;Main.c: 270: Lcd_Out2(2,6," 100%");
  2528  007570  0E06               	movlw	6
  2529  007572  6E04               	movwf	Lcd_Out2@x,c
  2530  007574  0E7F               	movlw	high STR_55
  2531  007576  6E06               	movwf	Lcd_Out2@buffer+1,c
  2532  007578  0E93               	movlw	low STR_55
  2533  00757A  6E05               	movwf	Lcd_Out2@buffer,c
  2534  00757C  0E02               	movlw	2
  2535  00757E  ECAB  F02D         	call	_Lcd_Out2
  2536                           
  2537                           ;Main.c: 271: tm_1s();
  2538  007582  EC20  F02E         	call	_tm_1s	;wreg free
  2539                           
  2540                           ;Main.c: 272: Z=70;
  2541  007586  0E00               	movlw	0
  2542  007588  0100               	movlb	0	; () banked
  2543  00758A  6FD2               	movwf	(main@Z+1)& (0+255),b
  2544  00758C  0E46               	movlw	70
  2545  00758E  0100               	movlb	0	; () banked
  2546  007590  6FD1               	movwf	main@Z& (0+255),b
  2547  007592                     l3334:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;Main.c: 274: }
  2551                           ;Main.c: 276: if(B==8){
  2552  007592  0100               	movlb	0	; () banked
  2553  007594  51D4               	movf	_B& (0+255),w,b
  2554  007596  0A08               	xorlw	8
  2555  007598  11D5               	iorwf	(_B+1)& (0+255),w,b
  2556  00759A  A4D8               	btfss	status,2,c
  2557  00759C  D034               	goto	l3350
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;Main.c: 280: Lcd_Init();
  2561  00759E  EC7A  F032         	call	_Lcd_Init	;wreg free
  2562                           
  2563                           ;Main.c: 281: Lcd_Cmd(1);
  2564  0075A2  0E01               	movlw	1
  2565  0075A4  ECE7  F031         	call	_Lcd_Cmd
  2566                           
  2567                           ;Main.c: 282: Lcd_Cmd(12);
  2568  0075A8  0E0C               	movlw	12
  2569  0075AA  ECE7  F031         	call	_Lcd_Cmd
  2570                           
  2571                           ;Main.c: 283: Lcd_Out2(1,1," 70%");
  2572  0075AE  0E01               	movlw	1
  2573  0075B0  6E04               	movwf	Lcd_Out2@x,c
  2574  0075B2  0E7F               	movlw	high STR_56
  2575  0075B4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2576  0075B6  0EE1               	movlw	low STR_56
  2577  0075B8  6E05               	movwf	Lcd_Out2@buffer,c
  2578  0075BA  0E01               	movlw	1
  2579  0075BC  ECAB  F02D         	call	_Lcd_Out2
  2580                           
  2581                           ;Main.c: 284: Lcd_Out2(2,1,"*80%");
  2582  0075C0  0E01               	movlw	1
  2583  0075C2  6E04               	movwf	Lcd_Out2@x,c
  2584  0075C4  0E7F               	movlw	high STR_57
  2585  0075C6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2586  0075C8  0EEB               	movlw	low STR_57
  2587  0075CA  6E05               	movwf	Lcd_Out2@buffer,c
  2588  0075CC  0E02               	movlw	2
  2589  0075CE  ECAB  F02D         	call	_Lcd_Out2
  2590                           
  2591                           ;Main.c: 285: Lcd_Out2(1,6," 90%");
  2592  0075D2  0E06               	movlw	6
  2593  0075D4  6E04               	movwf	Lcd_Out2@x,c
  2594  0075D6  0E7F               	movlw	high STR_54
  2595  0075D8  6E06               	movwf	Lcd_Out2@buffer+1,c
  2596  0075DA  0EF0               	movlw	low STR_54
  2597  0075DC  6E05               	movwf	Lcd_Out2@buffer,c
  2598  0075DE  0E01               	movlw	1
  2599  0075E0  ECAB  F02D         	call	_Lcd_Out2
  2600                           
  2601                           ;Main.c: 286: Lcd_Out2(2,6," 100%");
  2602  0075E4  0E06               	movlw	6
  2603  0075E6  6E04               	movwf	Lcd_Out2@x,c
  2604  0075E8  0E7F               	movlw	high STR_55
  2605  0075EA  6E06               	movwf	Lcd_Out2@buffer+1,c
  2606  0075EC  0E93               	movlw	low STR_55
  2607  0075EE  6E05               	movwf	Lcd_Out2@buffer,c
  2608  0075F0  0E02               	movlw	2
  2609  0075F2  ECAB  F02D         	call	_Lcd_Out2
  2610                           
  2611                           ;Main.c: 287: tm_1s();
  2612  0075F6  EC20  F02E         	call	_tm_1s	;wreg free
  2613                           
  2614                           ;Main.c: 288: Z=80;
  2615  0075FA  0E00               	movlw	0
  2616  0075FC  0100               	movlb	0	; () banked
  2617  0075FE  6FD2               	movwf	(main@Z+1)& (0+255),b
  2618  007600  0E50               	movlw	80
  2619  007602  0100               	movlb	0	; () banked
  2620  007604  6FD1               	movwf	main@Z& (0+255),b
  2621  007606                     l3350:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;Main.c: 290: }
  2625                           ;Main.c: 291: if(B==9){
  2626  007606  0100               	movlb	0	; () banked
  2627  007608  51D4               	movf	_B& (0+255),w,b
  2628  00760A  0A09               	xorlw	9
  2629  00760C  11D5               	iorwf	(_B+1)& (0+255),w,b
  2630  00760E  A4D8               	btfss	status,2,c
  2631  007610  D034               	goto	l3366
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;Main.c: 294: Lcd_Init();
  2635  007612  EC7A  F032         	call	_Lcd_Init	;wreg free
  2636                           
  2637                           ;Main.c: 295: Lcd_Cmd(1);
  2638  007616  0E01               	movlw	1
  2639  007618  ECE7  F031         	call	_Lcd_Cmd
  2640                           
  2641                           ;Main.c: 296: Lcd_Cmd(12);
  2642  00761C  0E0C               	movlw	12
  2643  00761E  ECE7  F031         	call	_Lcd_Cmd
  2644                           
  2645                           ;Main.c: 297: Lcd_Out2(1,1," 70%");
  2646  007622  0E01               	movlw	1
  2647  007624  6E04               	movwf	Lcd_Out2@x,c
  2648  007626  0E7F               	movlw	high STR_56
  2649  007628  6E06               	movwf	Lcd_Out2@buffer+1,c
  2650  00762A  0EE1               	movlw	low STR_56
  2651  00762C  6E05               	movwf	Lcd_Out2@buffer,c
  2652  00762E  0E01               	movlw	1
  2653  007630  ECAB  F02D         	call	_Lcd_Out2
  2654                           
  2655                           ;Main.c: 298: Lcd_Out2(2,1," 80%");
  2656  007634  0E01               	movlw	1
  2657  007636  6E04               	movwf	Lcd_Out2@x,c
  2658  007638  0E7F               	movlw	high STR_53
  2659  00763A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2660  00763C  0EE6               	movlw	low STR_53
  2661  00763E  6E05               	movwf	Lcd_Out2@buffer,c
  2662  007640  0E02               	movlw	2
  2663  007642  ECAB  F02D         	call	_Lcd_Out2
  2664                           
  2665                           ;Main.c: 299: Lcd_Out2(1,6,"*90%");
  2666  007646  0E06               	movlw	6
  2667  007648  6E04               	movwf	Lcd_Out2@x,c
  2668  00764A  0E7F               	movlw	high STR_62
  2669  00764C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2670  00764E  0EF5               	movlw	low STR_62
  2671  007650  6E05               	movwf	Lcd_Out2@buffer,c
  2672  007652  0E01               	movlw	1
  2673  007654  ECAB  F02D         	call	_Lcd_Out2
  2674                           
  2675                           ;Main.c: 300: Lcd_Out2(2,6," 100%");
  2676  007658  0E06               	movlw	6
  2677  00765A  6E04               	movwf	Lcd_Out2@x,c
  2678  00765C  0E7F               	movlw	high STR_55
  2679  00765E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2680  007660  0E93               	movlw	low STR_55
  2681  007662  6E05               	movwf	Lcd_Out2@buffer,c
  2682  007664  0E02               	movlw	2
  2683  007666  ECAB  F02D         	call	_Lcd_Out2
  2684                           
  2685                           ;Main.c: 301: tm_1s();
  2686  00766A  EC20  F02E         	call	_tm_1s	;wreg free
  2687                           
  2688                           ;Main.c: 302: Z=90;
  2689  00766E  0E00               	movlw	0
  2690  007670  0100               	movlb	0	; () banked
  2691  007672  6FD2               	movwf	(main@Z+1)& (0+255),b
  2692  007674  0E5A               	movlw	90
  2693  007676  0100               	movlb	0	; () banked
  2694  007678  6FD1               	movwf	main@Z& (0+255),b
  2695  00767A                     l3366:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;Main.c: 304: }
  2699                           ;Main.c: 306: if(B==10){
  2700  00767A  0100               	movlb	0	; () banked
  2701  00767C  51D4               	movf	_B& (0+255),w,b
  2702  00767E  0A0A               	xorlw	10
  2703  007680  11D5               	iorwf	(_B+1)& (0+255),w,b
  2704  007682  A4D8               	btfss	status,2,c
  2705  007684  D034               	goto	l3382
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;Main.c: 310: Lcd_Init();
  2709  007686  EC7A  F032         	call	_Lcd_Init	;wreg free
  2710                           
  2711                           ;Main.c: 311: Lcd_Cmd(1);
  2712  00768A  0E01               	movlw	1
  2713  00768C  ECE7  F031         	call	_Lcd_Cmd
  2714                           
  2715                           ;Main.c: 312: Lcd_Cmd(12);
  2716  007690  0E0C               	movlw	12
  2717  007692  ECE7  F031         	call	_Lcd_Cmd
  2718                           
  2719                           ;Main.c: 313: Lcd_Out2(1,1," 70%");
  2720  007696  0E01               	movlw	1
  2721  007698  6E04               	movwf	Lcd_Out2@x,c
  2722  00769A  0E7F               	movlw	high STR_56
  2723  00769C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2724  00769E  0EE1               	movlw	low STR_56
  2725  0076A0  6E05               	movwf	Lcd_Out2@buffer,c
  2726  0076A2  0E01               	movlw	1
  2727  0076A4  ECAB  F02D         	call	_Lcd_Out2
  2728                           
  2729                           ;Main.c: 314: Lcd_Out2(2,1," 80%");
  2730  0076A8  0E01               	movlw	1
  2731  0076AA  6E04               	movwf	Lcd_Out2@x,c
  2732  0076AC  0E7F               	movlw	high STR_53
  2733  0076AE  6E06               	movwf	Lcd_Out2@buffer+1,c
  2734  0076B0  0EE6               	movlw	low STR_53
  2735  0076B2  6E05               	movwf	Lcd_Out2@buffer,c
  2736  0076B4  0E02               	movlw	2
  2737  0076B6  ECAB  F02D         	call	_Lcd_Out2
  2738                           
  2739                           ;Main.c: 315: Lcd_Out2(1,6," 90%");
  2740  0076BA  0E06               	movlw	6
  2741  0076BC  6E04               	movwf	Lcd_Out2@x,c
  2742  0076BE  0E7F               	movlw	high STR_54
  2743  0076C0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2744  0076C2  0EF0               	movlw	low STR_54
  2745  0076C4  6E05               	movwf	Lcd_Out2@buffer,c
  2746  0076C6  0E01               	movlw	1
  2747  0076C8  ECAB  F02D         	call	_Lcd_Out2
  2748                           
  2749                           ;Main.c: 316: Lcd_Out2(2,6,"*100%");
  2750  0076CC  0E06               	movlw	6
  2751  0076CE  6E04               	movwf	Lcd_Out2@x,c
  2752  0076D0  0E7F               	movlw	high STR_67
  2753  0076D2  6E06               	movwf	Lcd_Out2@buffer+1,c
  2754  0076D4  0E99               	movlw	low STR_67
  2755  0076D6  6E05               	movwf	Lcd_Out2@buffer,c
  2756  0076D8  0E02               	movlw	2
  2757  0076DA  ECAB  F02D         	call	_Lcd_Out2
  2758                           
  2759                           ;Main.c: 317: tm_1s();
  2760  0076DE  EC20  F02E         	call	_tm_1s	;wreg free
  2761                           
  2762                           ;Main.c: 318: Z=100;
  2763  0076E2  0E00               	movlw	0
  2764  0076E4  0100               	movlb	0	; () banked
  2765  0076E6  6FD2               	movwf	(main@Z+1)& (0+255),b
  2766  0076E8  0E64               	movlw	100
  2767  0076EA  0100               	movlb	0	; () banked
  2768  0076EC  6FD1               	movwf	main@Z& (0+255),b
  2769  0076EE                     l3382:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;Main.c: 320: }
  2773                           ;Main.c: 321: if(PORTAbits.RA0==1)
  2774  0076EE  A080               	btfss	3968,0,c	;volatile
  2775  0076F0  D00A               	goto	l3388
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;Main.c: 322: {
  2779                           ;Main.c: 323: B++;
  2780  0076F2  0100               	movlb	0	; () banked
  2781  0076F4  4BD4               	infsnz	_B& (0+255),f,b
  2782  0076F6  2BD5               	incf	(_B+1)& (0+255),f,b
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;Main.c: 324: _delay((unsigned long)((10)*(4000000/4000.0)));
  2786  0076F8  0E0D               	movlw	13
  2787  0076FA  6E3C               	movwf	??_main& (0+255),c
  2788  0076FC  0EFC               	movlw	252
  2789  0076FE                     u3557:
  2790  0076FE  2EE8               	decfsz	wreg,f,c
  2791  007700  D7FE               	goto	u3557
  2792  007702  2E3C               	decfsz	??_main& (0+255),f,c
  2793  007704  D7FC               	goto	u3557
  2794  007706                     l3388:
  2795                           
  2796                           ;Main.c: 325: }
  2797                           ;Main.c: 327: if(PORTAbits.RA1==1)
  2798  007706  A280               	btfss	3968,1,c	;volatile
  2799  007708  D00B               	goto	l163
  2800                           
  2801                           ;Main.c: 328: {
  2802                           ;Main.c: 329: B--;
  2803  00770A  0100               	movlb	0	; () banked
  2804  00770C  07D4               	decf	_B& (0+255),f,b
  2805  00770E  A0D8               	btfss	status,0,c
  2806  007710  07D5               	decf	(_B+1)& (0+255),f,b
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;Main.c: 330: _delay((unsigned long)((10)*(4000000/4000.0)));
  2810  007712  0E0D               	movlw	13
  2811  007714  6E3C               	movwf	??_main& (0+255),c
  2812  007716  0EFC               	movlw	252
  2813  007718                     u3567:
  2814  007718  2EE8               	decfsz	wreg,f,c
  2815  00771A  D7FE               	goto	u3567
  2816  00771C  2E3C               	decfsz	??_main& (0+255),f,c
  2817  00771E  D7FC               	goto	u3567
  2818  007720                     l163:
  2819                           
  2820                           ;Main.c: 331: }
  2821                           ;Main.c: 333: if(B>10){
  2822  007720  0E0B               	movlw	11
  2823  007722  0100               	movlb	0	; () banked
  2824  007724  5DD4               	subwf	_B& (0+255),w,b
  2825  007726  0E00               	movlw	0
  2826  007728  0100               	movlb	0	; () banked
  2827  00772A  59D5               	subwfb	(_B+1)& (0+255),w,b
  2828  00772C  A0D8               	btfss	status,0,c
  2829  00772E  D006               	goto	l3398
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;Main.c: 334: B=1;
  2833  007730  0E00               	movlw	0
  2834  007732  0100               	movlb	0	; () banked
  2835  007734  6FD5               	movwf	(_B+1)& (0+255),b
  2836  007736  0E01               	movlw	1
  2837  007738  0100               	movlb	0	; () banked
  2838  00773A  6FD4               	movwf	_B& (0+255),b
  2839  00773C                     l3398:
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;Main.c: 339: }
  2843                           ;Main.c: 341: if(PORTAbits.RA1==1 && PORTAbits.RA2==1){
  2844  00773C  B280               	btfsc	3968,1,c	;volatile
  2845                           
  2846                           ; BSR set to: 0
  2847  00773E  A480               	btfss	3968,2,c	;volatile
  2848  007740  D006               	goto	l3404
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;Main.c: 342: t=1;
  2852  007742  0E00               	movlw	0
  2853  007744  0100               	movlb	0	; () banked
  2854  007746  6FE1               	movwf	(_t+1)& (0+255),b
  2855  007748  0E01               	movlw	1
  2856  00774A  0100               	movlb	0	; () banked
  2857  00774C  6FE0               	movwf	_t& (0+255),b
  2858  00774E                     l3404:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;Main.c: 343: }
  2862                           ;Main.c: 345: }while(t==0);
  2863  00774E  0100               	movlb	0	; () banked
  2864  007750  51E1               	movf	(_t+1)& (0+255),w,b
  2865  007752  11E0               	iorwf	_t& (0+255),w,b
  2866  007754  B4D8               	btfsc	status,2,c
  2867  007756  D516               	goto	l3196
  2868  007758                     l149:
  2869                           
  2870                           ;Main.c: 347: }
  2871                           ;Main.c: 349: }
  2872                           ;Main.c: 350: if(PORTAbits.RA0==1)
  2873  007758  A080               	btfss	3968,0,c	;volatile
  2874  00775A  D00A               	goto	l3410
  2875                           
  2876                           ;Main.c: 351: {
  2877                           ;Main.c: 352: B++;
  2878  00775C  0100               	movlb	0	; () banked
  2879  00775E  4BD4               	infsnz	_B& (0+255),f,b
  2880  007760  2BD5               	incf	(_B+1)& (0+255),f,b
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;Main.c: 353: _delay((unsigned long)((10)*(4000000/4000.0)));
  2884  007762  0E0D               	movlw	13
  2885  007764  6E3C               	movwf	??_main& (0+255),c
  2886  007766  0EFC               	movlw	252
  2887  007768                     u3577:
  2888  007768  2EE8               	decfsz	wreg,f,c
  2889  00776A  D7FE               	goto	u3577
  2890  00776C  2E3C               	decfsz	??_main& (0+255),f,c
  2891  00776E  D7FC               	goto	u3577
  2892  007770                     l3410:
  2893                           
  2894                           ;Main.c: 354: }
  2895                           ;Main.c: 356: if(PORTAbits.RA1==1)
  2896  007770  A280               	btfss	3968,1,c	;volatile
  2897  007772  D00B               	goto	l169
  2898                           
  2899                           ;Main.c: 357: {
  2900                           ;Main.c: 358: B--;
  2901  007774  0100               	movlb	0	; () banked
  2902  007776  07D4               	decf	_B& (0+255),f,b
  2903  007778  A0D8               	btfss	status,0,c
  2904  00777A  07D5               	decf	(_B+1)& (0+255),f,b
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;Main.c: 359: _delay((unsigned long)((10)*(4000000/4000.0)));
  2908  00777C  0E0D               	movlw	13
  2909  00777E  6E3C               	movwf	??_main& (0+255),c
  2910  007780  0EFC               	movlw	252
  2911  007782                     u3587:
  2912  007782  2EE8               	decfsz	wreg,f,c
  2913  007784  D7FE               	goto	u3587
  2914  007786  2E3C               	decfsz	??_main& (0+255),f,c
  2915  007788  D7FC               	goto	u3587
  2916  00778A                     l169:
  2917                           
  2918                           ;Main.c: 360: }
  2919                           ;Main.c: 362: if(B>2){
  2920  00778A  0E03               	movlw	3
  2921  00778C  0100               	movlb	0	; () banked
  2922  00778E  5DD4               	subwf	_B& (0+255),w,b
  2923  007790  0E00               	movlw	0
  2924  007792  0100               	movlb	0	; () banked
  2925  007794  59D5               	subwfb	(_B+1)& (0+255),w,b
  2926  007796  A0D8               	btfss	status,0,c
  2927  007798  D006               	goto	l3420
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;Main.c: 363: B=1;
  2931  00779A  0E00               	movlw	0
  2932  00779C  0100               	movlb	0	; () banked
  2933  00779E  6FD5               	movwf	(_B+1)& (0+255),b
  2934  0077A0  0E01               	movlw	1
  2935  0077A2  0100               	movlb	0	; () banked
  2936  0077A4  6FD4               	movwf	_B& (0+255),b
  2937  0077A6                     l3420:
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;Main.c: 368: }
  2941                           ;Main.c: 370: if(PORTAbits.RA0==1 && PORTAbits.RA3==1){
  2942  0077A6  B080               	btfsc	3968,0,c	;volatile
  2943                           
  2944                           ; BSR set to: 0
  2945  0077A8  A680               	btfss	3968,3,c	;volatile
  2946  0077AA  D006               	goto	l3426
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;Main.c: 371: e=1;
  2950  0077AC  0E00               	movlw	0
  2951  0077AE  0100               	movlb	0	; () banked
  2952  0077B0  6FD9               	movwf	(_e+1)& (0+255),b
  2953  0077B2  0E01               	movlw	1
  2954  0077B4  0100               	movlb	0	; () banked
  2955  0077B6  6FD8               	movwf	_e& (0+255),b
  2956  0077B8                     l3426:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;Main.c: 372: }
  2960                           ;Main.c: 373: }
  2961                           ;Main.c: 374: while(e==0);
  2962  0077B8  0100               	movlb	0	; () banked
  2963  0077BA  51D9               	movf	(_e+1)& (0+255),w,b
  2964  0077BC  11D8               	iorwf	_e& (0+255),w,b
  2965  0077BE  B4D8               	btfsc	status,2,c
  2966  0077C0  EFC5  F037         	goto	l3104
  2967  0077C4                     l3428:
  2968                           
  2969                           ;Main.c: 375: }
  2970                           ;Main.c: 376: }
  2971                           ;Main.c: 377: if(B==2){
  2972  0077C4  0100               	movlb	0	; () banked
  2973  0077C6  51D4               	movf	_B& (0+255),w,b
  2974  0077C8  0A02               	xorlw	2
  2975  0077CA  11D5               	iorwf	(_B+1)& (0+255),w,b
  2976  0077CC  A4D8               	btfss	status,2,c
  2977  0077CE  D01C               	goto	l3438
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;Main.c: 378: Lcd_Init();
  2981  0077D0  EC7A  F032         	call	_Lcd_Init	;wreg free
  2982                           
  2983                           ;Main.c: 379: Lcd_Cmd(1);
  2984  0077D4  0E01               	movlw	1
  2985  0077D6  ECE7  F031         	call	_Lcd_Cmd
  2986                           
  2987                           ;Main.c: 380: Lcd_Cmd(12);
  2988  0077DA  0E0C               	movlw	12
  2989  0077DC  ECE7  F031         	call	_Lcd_Cmd
  2990                           
  2991                           ;Main.c: 381: Lcd_Out2(1,1,"   Ingresar");
  2992  0077E0  0E01               	movlw	1
  2993  0077E2  6E04               	movwf	Lcd_Out2@x,c
  2994  0077E4  0E7E               	movlw	high STR_5
  2995  0077E6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2996  0077E8  0EC5               	movlw	low STR_5
  2997  0077EA  6E05               	movwf	Lcd_Out2@buffer,c
  2998  0077EC  0E01               	movlw	1
  2999  0077EE  ECAB  F02D         	call	_Lcd_Out2
  3000                           
  3001                           ;Main.c: 382: Lcd_Out2(2,1,"=> Comenzar");
  3002  0077F2  0E01               	movlw	1
  3003  0077F4  6E04               	movwf	Lcd_Out2@x,c
  3004  0077F6  0E7E               	movlw	high STR_69
  3005  0077F8  6E06               	movwf	Lcd_Out2@buffer+1,c
  3006  0077FA  0EE9               	movlw	low STR_69
  3007  0077FC  6E05               	movwf	Lcd_Out2@buffer,c
  3008  0077FE  0E02               	movlw	2
  3009  007800  ECAB  F02D         	call	_Lcd_Out2
  3010                           
  3011                           ;Main.c: 383: tm_1s();
  3012  007804  EC20  F02E         	call	_tm_1s	;wreg free
  3013  007808                     l3438:
  3014                           
  3015                           ;Main.c: 385: }
  3016                           ;Main.c: 386: if(PORTAbits.RA2==1){
  3017  007808  A480               	btfss	3968,2,c	;volatile
  3018  00780A  D091               	goto	l175
  3019                           
  3020                           ;Main.c: 387: p=0;
  3021  00780C  0E00               	movlw	0
  3022  00780E  0100               	movlb	0	; () banked
  3023  007810  6FDB               	movwf	(_p+1)& (0+255),b
  3024  007812  0E00               	movlw	0
  3025  007814  0100               	movlb	0	; () banked
  3026  007816  6FDA               	movwf	_p& (0+255),b
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;Main.c: 388: Lcd_Init();
  3030  007818  EC7A  F032         	call	_Lcd_Init	;wreg free
  3031                           
  3032                           ;Main.c: 389: Lcd_Cmd(1);
  3033  00781C  0E01               	movlw	1
  3034  00781E  ECE7  F031         	call	_Lcd_Cmd
  3035                           
  3036                           ;Main.c: 390: Lcd_Cmd(12);
  3037  007822  0E0C               	movlw	12
  3038  007824  ECE7  F031         	call	_Lcd_Cmd
  3039                           
  3040                           ;Main.c: 394: X=A*1000;
  3041  007828  0100               	movlb	0	; () banked
  3042  00782A  C0D3  F001         	movff	main@A,___wmul@multiplier
  3043  00782E  6A02               	clrf	___wmul@multiplier+1,c
  3044  007830  0E03               	movlw	3
  3045  007832  6E04               	movwf	___wmul@multiplicand+1,c
  3046  007834  0EE8               	movlw	232
  3047  007836  6E03               	movwf	___wmul@multiplicand,c
  3048  007838  ECC3  F02C         	call	___wmul	;wreg free
  3049  00783C  C001  F0CF         	movff	?___wmul,main@X
  3050  007840  C002  F0D0         	movff	?___wmul+1,main@X+1
  3051                           
  3052                           ;Main.c: 396: cant = Conv_Entero(X,cad);
  3053  007844  0100               	movlb	0	; () banked
  3054  007846  C0CF  F00F         	movff	main@X,Conv_Entero@numero
  3055  00784A  0100               	movlb	0	; () banked
  3056  00784C  C0D0  F010         	movff	main@X+1,Conv_Entero@numero+1
  3057  007850  6A11               	clrf	Conv_Entero@numero+2,c
  3058  007852  6A12               	clrf	Conv_Entero@numero+3,c
  3059  007854  0100               	movlb	0	; () banked
  3060  007856  0E00               	movlw	high main@cad
  3061  007858  6E14               	movwf	Conv_Entero@conv+1,c
  3062  00785A  0100               	movlb	0	; () banked
  3063  00785C  0EA2               	movlw	low main@cad
  3064  00785E  6E13               	movwf	Conv_Entero@conv,c
  3065  007860  ECEE  F034         	call	_Conv_Entero	;wreg free
  3066  007864  500F               	movf	?_Conv_Entero,w,c
  3067  007866  0100               	movlb	0	; () banked
  3068  007868  6FCE               	movwf	main@cant& (0+255),b
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;Main.c: 397: unsigned char fre=0;
  3072  00786A  0E00               	movlw	0
  3073  00786C  0100               	movlb	0	; () banked
  3074  00786E  6FCC               	movwf	main@fre& (0+255),b
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;Main.c: 399: PWM_generar(Z,M);
  3078  007870  C0D1  F00E         	movff	main@Z,PWM_generar@ciclo
  3079  007874  C0D2  F00F         	movff	main@Z+1,PWM_generar@ciclo+1
  3080  007878  C0D6  F010         	movff	_M,PWM_generar@frecuencia
  3081  00787C  C0D7  F011         	movff	_M+1,PWM_generar@frecuencia+1
  3082  007880  ECDA  F035         	call	_PWM_generar	;wreg free
  3083                           
  3084                           ;Main.c: 401: Lcd_Out2(1,1,"F:  000 hz");
  3085  007884  0E01               	movlw	1
  3086  007886  6E04               	movwf	Lcd_Out2@x,c
  3087  007888  0E7F               	movlw	high STR_70
  3088  00788A  6E06               	movwf	Lcd_Out2@buffer+1,c
  3089  00788C  0E00               	movlw	low STR_70
  3090  00788E  6E05               	movwf	Lcd_Out2@buffer,c
  3091  007890  0E01               	movlw	1
  3092  007892  ECAB  F02D         	call	_Lcd_Out2
  3093                           
  3094                           ;Main.c: 402: lcd_goto(4,1);
  3095  007896  0E00               	movlw	0
  3096  007898  6E05               	movwf	lcd_goto@x+1,c
  3097  00789A  0E04               	movlw	4
  3098  00789C  6E04               	movwf	lcd_goto@x,c
  3099  00789E  0E00               	movlw	0
  3100  0078A0  6E07               	movwf	lcd_goto@y+1,c
  3101  0078A2  0E01               	movlw	1
  3102  0078A4  6E06               	movwf	lcd_goto@y,c
  3103  0078A6  ECF7  F02C         	call	_lcd_goto	;wreg free
  3104                           
  3105                           ;Main.c: 403: Lcd_Chr_CP(A);
  3106  0078AA  0100               	movlb	0	; () banked
  3107  0078AC  51D3               	movf	main@A& (0+255),w,b
  3108  0078AE  EC0E  F033         	call	_Lcd_Chr_CP
  3109                           
  3110                           ;Main.c: 404: Lcd_Out2(2,1,"C: ");
  3111  0078B2  0E01               	movlw	1
  3112  0078B4  6E04               	movwf	Lcd_Out2@x,c
  3113  0078B6  0E7F               	movlw	high STR_71
  3114  0078B8  6E06               	movwf	Lcd_Out2@buffer+1,c
  3115  0078BA  0EFA               	movlw	low STR_71
  3116  0078BC  6E05               	movwf	Lcd_Out2@buffer,c
  3117  0078BE  0E02               	movlw	2
  3118  0078C0  ECAB  F02D         	call	_Lcd_Out2
  3119                           
  3120                           ;Main.c: 405: Lcd_Out2(2,7,"%");
  3121  0078C4  0E07               	movlw	7
  3122  0078C6  6E04               	movwf	Lcd_Out2@x,c
  3123  0078C8  0E7F               	movlw	high (STR_55+4)
  3124  0078CA  6E06               	movwf	Lcd_Out2@buffer+1,c
  3125  0078CC  0E97               	movlw	low (STR_55+4)
  3126  0078CE  6E05               	movwf	Lcd_Out2@buffer,c
  3127  0078D0  0E02               	movlw	2
  3128  0078D2  ECAB  F02D         	call	_Lcd_Out2
  3129                           
  3130                           ;Main.c: 406: cantidad = Conv_Entero(Z,cadena);
  3131  0078D6  0100               	movlb	0	; () banked
  3132  0078D8  C0D1  F00F         	movff	main@Z,Conv_Entero@numero
  3133  0078DC  0100               	movlb	0	; () banked
  3134  0078DE  C0D2  F010         	movff	main@Z+1,Conv_Entero@numero+1
  3135  0078E2  6A11               	clrf	Conv_Entero@numero+2,c
  3136  0078E4  6A12               	clrf	Conv_Entero@numero+3,c
  3137  0078E6  0100               	movlb	0	; () banked
  3138  0078E8  0E00               	movlw	high main@cadena
  3139  0078EA  6E14               	movwf	Conv_Entero@conv+1,c
  3140  0078EC  0100               	movlb	0	; () banked
  3141  0078EE  0EB6               	movlw	low main@cadena
  3142  0078F0  6E13               	movwf	Conv_Entero@conv,c
  3143  0078F2  ECEE  F034         	call	_Conv_Entero	;wreg free
  3144  0078F6  500F               	movf	?_Conv_Entero,w,c
  3145  0078F8  0100               	movlb	0	; () banked
  3146  0078FA  6FCD               	movwf	main@cantidad& (0+255),b
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;Main.c: 407: Lcd_Out(2,4,cadena);
  3150  0078FC  0E04               	movlw	4
  3151  0078FE  6E04               	movwf	Lcd_Out@x,c
  3152  007900  0100               	movlb	0	; () banked
  3153  007902  0E00               	movlw	high main@cadena
  3154  007904  6E06               	movwf	Lcd_Out@buffer+1,c
  3155  007906  0100               	movlb	0	; () banked
  3156  007908  0EB6               	movlw	low main@cadena
  3157  00790A  6E05               	movwf	Lcd_Out@buffer,c
  3158  00790C  0E02               	movlw	2
  3159  00790E  EC49  F02D         	call	_Lcd_Out
  3160  007912                     l3470:
  3161                           
  3162                           ;Main.c: 411: if(PORTAbits.RA0==1 && PORTAbits.RA2==1){
  3163  007912  B080               	btfsc	3968,0,c	;volatile
  3164  007914  A480               	btfss	3968,2,c	;volatile
  3165  007916  D006               	goto	l3476
  3166                           
  3167                           ;Main.c: 412: p=1;
  3168  007918  0E00               	movlw	0
  3169  00791A  0100               	movlb	0	; () banked
  3170  00791C  6FDB               	movwf	(_p+1)& (0+255),b
  3171  00791E  0E01               	movlw	1
  3172  007920  0100               	movlb	0	; () banked
  3173  007922  6FDA               	movwf	_p& (0+255),b
  3174  007924                     l3476:
  3175                           
  3176                           ;Main.c: 413: }
  3177                           ;Main.c: 414: }while(p==0);
  3178  007924  0100               	movlb	0	; () banked
  3179  007926  51DB               	movf	(_p+1)& (0+255),w,b
  3180  007928  11DA               	iorwf	_p& (0+255),w,b
  3181  00792A  B4D8               	btfsc	status,2,c
  3182  00792C  D7F2               	goto	l3470
  3183  00792E                     l175:
  3184                           
  3185                           ;Main.c: 415: }
  3186                           ;Main.c: 416: if(PORTAbits.RA0==1 && PORTAbits.RA2==1){
  3187  00792E  B080               	btfsc	3968,0,c	;volatile
  3188  007930  A480               	btfss	3968,2,c	;volatile
  3189  007932  D006               	goto	l3482
  3190                           
  3191                           ;Main.c: 417: w=1;
  3192  007934  0E00               	movlw	0
  3193  007936  0100               	movlb	0	; () banked
  3194  007938  6FE3               	movwf	(_w+1)& (0+255),b
  3195  00793A  0E01               	movlw	1
  3196  00793C  0100               	movlb	0	; () banked
  3197  00793E  6FE2               	movwf	_w& (0+255),b
  3198  007940                     l3482:
  3199                           
  3200                           ;Main.c: 418: }
  3201                           ;Main.c: 420: if(PORTAbits.RA0==1)
  3202  007940  A080               	btfss	3968,0,c	;volatile
  3203  007942  D00A               	goto	l3488
  3204                           
  3205                           ;Main.c: 421: {
  3206                           ;Main.c: 422: B++;
  3207  007944  0100               	movlb	0	; () banked
  3208  007946  4BD4               	infsnz	_B& (0+255),f,b
  3209  007948  2BD5               	incf	(_B+1)& (0+255),f,b
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;Main.c: 423: _delay((unsigned long)((10)*(4000000/4000.0)));
  3213  00794A  0E0D               	movlw	13
  3214  00794C  6E3C               	movwf	??_main& (0+255),c
  3215  00794E  0EFC               	movlw	252
  3216  007950                     u3597:
  3217  007950  2EE8               	decfsz	wreg,f,c
  3218  007952  D7FE               	goto	u3597
  3219  007954  2E3C               	decfsz	??_main& (0+255),f,c
  3220  007956  D7FC               	goto	u3597
  3221  007958                     l3488:
  3222                           
  3223                           ;Main.c: 424: }
  3224                           ;Main.c: 426: if(PORTAbits.RA1==1)
  3225  007958  A280               	btfss	3968,1,c	;volatile
  3226  00795A  D00B               	goto	l181
  3227                           
  3228                           ;Main.c: 427: {
  3229                           ;Main.c: 428: B--;
  3230  00795C  0100               	movlb	0	; () banked
  3231  00795E  07D4               	decf	_B& (0+255),f,b
  3232  007960  A0D8               	btfss	status,0,c
  3233  007962  07D5               	decf	(_B+1)& (0+255),f,b
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;Main.c: 429: _delay((unsigned long)((10)*(4000000/4000.0)));
  3237  007964  0E0D               	movlw	13
  3238  007966  6E3C               	movwf	??_main& (0+255),c
  3239  007968  0EFC               	movlw	252
  3240  00796A                     u3607:
  3241  00796A  2EE8               	decfsz	wreg,f,c
  3242  00796C  D7FE               	goto	u3607
  3243  00796E  2E3C               	decfsz	??_main& (0+255),f,c
  3244  007970  D7FC               	goto	u3607
  3245  007972                     l181:
  3246                           
  3247                           ;Main.c: 430: }
  3248                           ;Main.c: 431: if(B>3){
  3249  007972  0E04               	movlw	4
  3250  007974  0100               	movlb	0	; () banked
  3251  007976  5DD4               	subwf	_B& (0+255),w,b
  3252  007978  0E00               	movlw	0
  3253  00797A  0100               	movlb	0	; () banked
  3254  00797C  59D5               	subwfb	(_B+1)& (0+255),w,b
  3255  00797E  A0D8               	btfss	status,0,c
  3256  007980  D006               	goto	l3498
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;Main.c: 432: B=1;
  3260  007982  0E00               	movlw	0
  3261  007984  0100               	movlb	0	; () banked
  3262  007986  6FD5               	movwf	(_B+1)& (0+255),b
  3263  007988  0E01               	movlw	1
  3264  00798A  0100               	movlb	0	; () banked
  3265  00798C  6FD4               	movwf	_B& (0+255),b
  3266  00798E                     l3498:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;Main.c: 437: }
  3270                           ;Main.c: 438: } while(w==0);
  3271  00798E  0100               	movlb	0	; () banked
  3272  007990  51E3               	movf	(_w+1)& (0+255),w,b
  3273  007992  11E2               	iorwf	_w& (0+255),w,b
  3274  007994  B4D8               	btfsc	status,2,c
  3275  007996  EF79  F037         	goto	l3080
  3276  00799A                     l3500:
  3277                           
  3278                           ;Main.c: 439: }
  3279                           ;Main.c: 445: }
  3280                           ;Main.c: 447: if(B==2){
  3281  00799A  0100               	movlb	0	; () banked
  3282  00799C  51D4               	movf	_B& (0+255),w,b
  3283  00799E  0A02               	xorlw	2
  3284  0079A0  11D5               	iorwf	(_B+1)& (0+255),w,b
  3285  0079A2  A4D8               	btfss	status,2,c
  3286  0079A4  D12C               	goto	l3624
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;Main.c: 448: Lcd_Init();
  3290  0079A6  EC7A  F032         	call	_Lcd_Init	;wreg free
  3291                           
  3292                           ;Main.c: 449: Lcd_Cmd(1);
  3293  0079AA  0E01               	movlw	1
  3294  0079AC  ECE7  F031         	call	_Lcd_Cmd
  3295                           
  3296                           ;Main.c: 450: Lcd_Cmd(12);
  3297  0079B0  0E0C               	movlw	12
  3298  0079B2  ECE7  F031         	call	_Lcd_Cmd
  3299                           
  3300                           ;Main.c: 451: Lcd_Out2(1,1,"   PWM");
  3301  0079B6  0E01               	movlw	1
  3302  0079B8  6E04               	movwf	Lcd_Out2@x,c
  3303  0079BA  0E7F               	movlw	high STR_73
  3304  0079BC  6E06               	movwf	Lcd_Out2@buffer+1,c
  3305  0079BE  0E85               	movlw	low STR_73
  3306  0079C0  6E05               	movwf	Lcd_Out2@buffer,c
  3307  0079C2  0E01               	movlw	1
  3308  0079C4  ECAB  F02D         	call	_Lcd_Out2
  3309                           
  3310                           ;Main.c: 452: Lcd_Out2(2,1,"=> Senoidal");
  3311  0079C8  0E01               	movlw	1
  3312  0079CA  6E04               	movwf	Lcd_Out2@x,c
  3313  0079CC  0E7E               	movlw	high STR_74
  3314  0079CE  6E06               	movwf	Lcd_Out2@buffer+1,c
  3315  0079D0  0EB9               	movlw	low STR_74
  3316  0079D2  6E05               	movwf	Lcd_Out2@buffer,c
  3317  0079D4  0E02               	movlw	2
  3318  0079D6  ECAB  F02D         	call	_Lcd_Out2
  3319                           
  3320                           ;Main.c: 453: tm_1s();
  3321  0079DA  EC20  F02E         	call	_tm_1s	;wreg free
  3322                           
  3323                           ;Main.c: 455: if(PORTAbits.RA2==1){
  3324  0079DE  A480               	btfss	3968,2,c	;volatile
  3325  0079E0  D10E               	goto	l3624
  3326                           
  3327                           ;Main.c: 456: w=0;
  3328  0079E2  0E00               	movlw	0
  3329  0079E4  0100               	movlb	0	; () banked
  3330  0079E6  6FE3               	movwf	(_w+1)& (0+255),b
  3331  0079E8  0E00               	movlw	0
  3332  0079EA  0100               	movlb	0	; () banked
  3333  0079EC  6FE2               	movwf	_w& (0+255),b
  3334  0079EE                     l3514:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;Main.c: 459: if(B==0){
  3338  0079EE  0100               	movlb	0	; () banked
  3339  0079F0  51D5               	movf	(_B+1)& (0+255),w,b
  3340  0079F2  11D4               	iorwf	_B& (0+255),w,b
  3341  0079F4  A4D8               	btfss	status,2,c
  3342  0079F6  D044               	goto	l3544
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;Main.c: 460: Lcd_Init();
  3346  0079F8  EC7A  F032         	call	_Lcd_Init	;wreg free
  3347                           
  3348                           ;Main.c: 461: Lcd_Cmd(1);
  3349  0079FC  0E01               	movlw	1
  3350  0079FE  ECE7  F031         	call	_Lcd_Cmd
  3351                           
  3352                           ;Main.c: 462: Lcd_Cmd(12);
  3353  007A02  0E0C               	movlw	12
  3354  007A04  ECE7  F031         	call	_Lcd_Cmd
  3355                           
  3356                           ;Main.c: 463: Lcd_Out2(1,1,"=> Sin 1");
  3357  007A08  0E01               	movlw	1
  3358  007A0A  6E04               	movwf	Lcd_Out2@x,c
  3359  007A0C  0E7F               	movlw	high STR_75
  3360  007A0E  6E06               	movwf	Lcd_Out2@buffer+1,c
  3361  007A10  0E46               	movlw	low STR_75
  3362  007A12  6E05               	movwf	Lcd_Out2@buffer,c
  3363  007A14  0E01               	movlw	1
  3364  007A16  ECAB  F02D         	call	_Lcd_Out2
  3365                           
  3366                           ;Main.c: 464: Lcd_Out2(2,1,"   Sin 2");
  3367  007A1A  0E01               	movlw	1
  3368  007A1C  6E04               	movwf	Lcd_Out2@x,c
  3369  007A1E  0E7F               	movlw	high STR_76
  3370  007A20  6E06               	movwf	Lcd_Out2@buffer+1,c
  3371  007A22  0E4F               	movlw	low STR_76
  3372  007A24  6E05               	movwf	Lcd_Out2@buffer,c
  3373  007A26  0E02               	movlw	2
  3374  007A28  ECAB  F02D         	call	_Lcd_Out2
  3375                           
  3376                           ;Main.c: 465: tm_1s();
  3377  007A2C  EC20  F02E         	call	_tm_1s	;wreg free
  3378                           
  3379                           ;Main.c: 466: if(PORTAbits.RA2==1){
  3380  007A30  A480               	btfss	3968,2,c	;volatile
  3381  007A32  D026               	goto	l3544
  3382                           
  3383                           ;Main.c: 467: q=0;
  3384  007A34  0E00               	movlw	0
  3385  007A36  0100               	movlb	0	; () banked
  3386  007A38  6FDD               	movwf	(_q+1)& (0+255),b
  3387  007A3A  0E00               	movlw	0
  3388  007A3C  0100               	movlb	0	; () banked
  3389  007A3E  6FDC               	movwf	_q& (0+255),b
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;Main.c: 468: Lcd_Init();
  3393  007A40  EC7A  F032         	call	_Lcd_Init	;wreg free
  3394                           
  3395                           ;Main.c: 469: Lcd_Cmd(1);
  3396  007A44  0E01               	movlw	1
  3397  007A46  ECE7  F031         	call	_Lcd_Cmd
  3398                           
  3399                           ;Main.c: 470: Lcd_Cmd(12);
  3400  007A4A  0E0C               	movlw	12
  3401  007A4C  ECE7  F031         	call	_Lcd_Cmd
  3402                           
  3403                           ;Main.c: 471: Lcd_Out2(1,1," Sin 1");
  3404  007A50  0E01               	movlw	1
  3405  007A52  6E04               	movwf	Lcd_Out2@x,c
  3406  007A54  0E7F               	movlw	high (STR_78+2)
  3407  007A56  6E06               	movwf	Lcd_Out2@buffer+1,c
  3408  007A58  0E3F               	movlw	low (STR_78+2)
  3409  007A5A  6E05               	movwf	Lcd_Out2@buffer,c
  3410  007A5C  0E01               	movlw	1
  3411  007A5E  ECAB  F02D         	call	_Lcd_Out2
  3412  007A62                     l3536:
  3413                           
  3414                           ;Main.c: 473: SENO_1();
  3415  007A62  ECF2  F02F         	call	_SENO_1	;wreg free
  3416                           
  3417                           ;Main.c: 474: if(PORTAbits.RA3==1){
  3418  007A66  A680               	btfss	3968,3,c	;volatile
  3419  007A68  D006               	goto	l3542
  3420                           
  3421                           ;Main.c: 475: q=1;
  3422  007A6A  0E00               	movlw	0
  3423  007A6C  0100               	movlb	0	; () banked
  3424  007A6E  6FDD               	movwf	(_q+1)& (0+255),b
  3425  007A70  0E01               	movlw	1
  3426  007A72  0100               	movlb	0	; () banked
  3427  007A74  6FDC               	movwf	_q& (0+255),b
  3428  007A76                     l3542:
  3429                           
  3430                           ;Main.c: 476: }
  3431                           ;Main.c: 477: }while(q==0);
  3432  007A76  0100               	movlb	0	; () banked
  3433  007A78  51DD               	movf	(_q+1)& (0+255),w,b
  3434  007A7A  11DC               	iorwf	_q& (0+255),w,b
  3435  007A7C  B4D8               	btfsc	status,2,c
  3436  007A7E  D7F1               	goto	l3536
  3437  007A80                     l3544:
  3438                           
  3439                           ;Main.c: 478: }
  3440                           ;Main.c: 479: }
  3441                           ;Main.c: 481: if(B==1){
  3442  007A80  0100               	movlb	0	; () banked
  3443  007A82  05D4               	decf	_B& (0+255),w,b
  3444  007A84  11D5               	iorwf	(_B+1)& (0+255),w,b
  3445  007A86  A4D8               	btfss	status,2,c
  3446  007A88  D044               	goto	l3574
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;Main.c: 482: Lcd_Init();
  3450  007A8A  EC7A  F032         	call	_Lcd_Init	;wreg free
  3451                           
  3452                           ;Main.c: 483: Lcd_Cmd(1);
  3453  007A8E  0E01               	movlw	1
  3454  007A90  ECE7  F031         	call	_Lcd_Cmd
  3455                           
  3456                           ;Main.c: 484: Lcd_Cmd(12);
  3457  007A94  0E0C               	movlw	12
  3458  007A96  ECE7  F031         	call	_Lcd_Cmd
  3459                           
  3460                           ;Main.c: 485: Lcd_Out2(1,1,"   Sin 1");
  3461  007A9A  0E01               	movlw	1
  3462  007A9C  6E04               	movwf	Lcd_Out2@x,c
  3463  007A9E  0E7F               	movlw	high STR_78
  3464  007AA0  6E06               	movwf	Lcd_Out2@buffer+1,c
  3465  007AA2  0E3D               	movlw	low STR_78
  3466  007AA4  6E05               	movwf	Lcd_Out2@buffer,c
  3467  007AA6  0E01               	movlw	1
  3468  007AA8  ECAB  F02D         	call	_Lcd_Out2
  3469                           
  3470                           ;Main.c: 486: Lcd_Out2(2,1,"=> Sin 2");
  3471  007AAC  0E01               	movlw	1
  3472  007AAE  6E04               	movwf	Lcd_Out2@x,c
  3473  007AB0  0E7F               	movlw	high STR_79
  3474  007AB2  6E06               	movwf	Lcd_Out2@buffer+1,c
  3475  007AB4  0E58               	movlw	low STR_79
  3476  007AB6  6E05               	movwf	Lcd_Out2@buffer,c
  3477  007AB8  0E02               	movlw	2
  3478  007ABA  ECAB  F02D         	call	_Lcd_Out2
  3479                           
  3480                           ;Main.c: 487: tm_1s();
  3481  007ABE  EC20  F02E         	call	_tm_1s	;wreg free
  3482                           
  3483                           ;Main.c: 488: if(PORTAbits.RA2==1){
  3484  007AC2  A480               	btfss	3968,2,c	;volatile
  3485  007AC4  D026               	goto	l3574
  3486                           
  3487                           ;Main.c: 489: q=0;
  3488  007AC6  0E00               	movlw	0
  3489  007AC8  0100               	movlb	0	; () banked
  3490  007ACA  6FDD               	movwf	(_q+1)& (0+255),b
  3491  007ACC  0E00               	movlw	0
  3492  007ACE  0100               	movlb	0	; () banked
  3493  007AD0  6FDC               	movwf	_q& (0+255),b
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;Main.c: 490: Lcd_Init();
  3497  007AD2  EC7A  F032         	call	_Lcd_Init	;wreg free
  3498                           
  3499                           ;Main.c: 491: Lcd_Cmd(1);
  3500  007AD6  0E01               	movlw	1
  3501  007AD8  ECE7  F031         	call	_Lcd_Cmd
  3502                           
  3503                           ;Main.c: 492: Lcd_Cmd(12);
  3504  007ADC  0E0C               	movlw	12
  3505  007ADE  ECE7  F031         	call	_Lcd_Cmd
  3506                           
  3507                           ;Main.c: 493: Lcd_Out2(1,1," Sin 2");
  3508  007AE2  0E01               	movlw	1
  3509  007AE4  6E04               	movwf	Lcd_Out2@x,c
  3510  007AE6  0E7F               	movlw	high (STR_76+2)
  3511  007AE8  6E06               	movwf	Lcd_Out2@buffer+1,c
  3512  007AEA  0E51               	movlw	low (STR_76+2)
  3513  007AEC  6E05               	movwf	Lcd_Out2@buffer,c
  3514  007AEE  0E01               	movlw	1
  3515  007AF0  ECAB  F02D         	call	_Lcd_Out2
  3516  007AF4                     l3566:
  3517                           
  3518                           ;Main.c: 495: SENO_2();
  3519  007AF4  EC77  F02F         	call	_SENO_2	;wreg free
  3520                           
  3521                           ;Main.c: 496: if(PORTAbits.RA3==1){
  3522  007AF8  A680               	btfss	3968,3,c	;volatile
  3523  007AFA  D006               	goto	l3572
  3524                           
  3525                           ;Main.c: 497: q=1;
  3526  007AFC  0E00               	movlw	0
  3527  007AFE  0100               	movlb	0	; () banked
  3528  007B00  6FDD               	movwf	(_q+1)& (0+255),b
  3529  007B02  0E01               	movlw	1
  3530  007B04  0100               	movlb	0	; () banked
  3531  007B06  6FDC               	movwf	_q& (0+255),b
  3532  007B08                     l3572:
  3533                           
  3534                           ;Main.c: 498: }
  3535                           ;Main.c: 499: }while(q==0);
  3536  007B08  0100               	movlb	0	; () banked
  3537  007B0A  51DD               	movf	(_q+1)& (0+255),w,b
  3538  007B0C  11DC               	iorwf	_q& (0+255),w,b
  3539  007B0E  B4D8               	btfsc	status,2,c
  3540  007B10  D7F1               	goto	l3566
  3541  007B12                     l3574:
  3542                           
  3543                           ;Main.c: 500: }
  3544                           ;Main.c: 501: }
  3545                           ;Main.c: 503: if(B==2){
  3546  007B12  0100               	movlb	0	; () banked
  3547  007B14  51D4               	movf	_B& (0+255),w,b
  3548  007B16  0A02               	xorlw	2
  3549  007B18  11D5               	iorwf	(_B+1)& (0+255),w,b
  3550  007B1A  A4D8               	btfss	status,2,c
  3551  007B1C  D03B               	goto	l198
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;Main.c: 504: Lcd_Init();
  3555  007B1E  EC7A  F032         	call	_Lcd_Init	;wreg free
  3556                           
  3557                           ;Main.c: 505: Lcd_Cmd(1);
  3558  007B22  0E01               	movlw	1
  3559  007B24  ECE7  F031         	call	_Lcd_Cmd
  3560                           
  3561                           ;Main.c: 506: Lcd_Cmd(12);
  3562  007B28  0E0C               	movlw	12
  3563  007B2A  ECE7  F031         	call	_Lcd_Cmd
  3564                           
  3565                           ;Main.c: 507: Lcd_Out2(1,1,"=> Sin 3");
  3566  007B2E  0E01               	movlw	1
  3567  007B30  6E04               	movwf	Lcd_Out2@x,c
  3568  007B32  0E7F               	movlw	high STR_81
  3569  007B34  6E06               	movwf	Lcd_Out2@buffer+1,c
  3570  007B36  0E61               	movlw	low STR_81
  3571  007B38  6E05               	movwf	Lcd_Out2@buffer,c
  3572  007B3A  0E01               	movlw	1
  3573  007B3C  ECAB  F02D         	call	_Lcd_Out2
  3574                           
  3575                           ;Main.c: 508: tm_1s();
  3576  007B40  EC20  F02E         	call	_tm_1s	;wreg free
  3577                           
  3578                           ;Main.c: 509: if(PORTAbits.RA2==1){
  3579  007B44  A480               	btfss	3968,2,c	;volatile
  3580  007B46  D026               	goto	l198
  3581                           
  3582                           ;Main.c: 510: q=0;
  3583  007B48  0E00               	movlw	0
  3584  007B4A  0100               	movlb	0	; () banked
  3585  007B4C  6FDD               	movwf	(_q+1)& (0+255),b
  3586  007B4E  0E00               	movlw	0
  3587  007B50  0100               	movlb	0	; () banked
  3588  007B52  6FDC               	movwf	_q& (0+255),b
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;Main.c: 511: Lcd_Init();
  3592  007B54  EC7A  F032         	call	_Lcd_Init	;wreg free
  3593                           
  3594                           ;Main.c: 512: Lcd_Cmd(1);
  3595  007B58  0E01               	movlw	1
  3596  007B5A  ECE7  F031         	call	_Lcd_Cmd
  3597                           
  3598                           ;Main.c: 513: Lcd_Cmd(12);
  3599  007B5E  0E0C               	movlw	12
  3600  007B60  ECE7  F031         	call	_Lcd_Cmd
  3601                           
  3602                           ;Main.c: 514: Lcd_Out2(1,1," Sin 3");
  3603  007B64  0E01               	movlw	1
  3604  007B66  6E04               	movwf	Lcd_Out2@x,c
  3605  007B68  0E7F               	movlw	high (STR_81+2)
  3606  007B6A  6E06               	movwf	Lcd_Out2@buffer+1,c
  3607  007B6C  0E63               	movlw	low (STR_81+2)
  3608  007B6E  6E05               	movwf	Lcd_Out2@buffer,c
  3609  007B70  0E01               	movlw	1
  3610  007B72  ECAB  F02D         	call	_Lcd_Out2
  3611  007B76                     l3594:
  3612                           
  3613                           ;Main.c: 516: SENO_3();
  3614  007B76  EC6F  F030         	call	_SENO_3	;wreg free
  3615                           
  3616                           ;Main.c: 517: if(PORTAbits.RA3==1){
  3617  007B7A  A680               	btfss	3968,3,c	;volatile
  3618  007B7C  D006               	goto	l3600
  3619                           
  3620                           ;Main.c: 518: q=1;
  3621  007B7E  0E00               	movlw	0
  3622  007B80  0100               	movlb	0	; () banked
  3623  007B82  6FDD               	movwf	(_q+1)& (0+255),b
  3624  007B84  0E01               	movlw	1
  3625  007B86  0100               	movlb	0	; () banked
  3626  007B88  6FDC               	movwf	_q& (0+255),b
  3627  007B8A                     l3600:
  3628                           
  3629                           ;Main.c: 519: }
  3630                           ;Main.c: 520: }while(q==0);
  3631  007B8A  0100               	movlb	0	; () banked
  3632  007B8C  51DD               	movf	(_q+1)& (0+255),w,b
  3633  007B8E  11DC               	iorwf	_q& (0+255),w,b
  3634  007B90  B4D8               	btfsc	status,2,c
  3635  007B92  D7F1               	goto	l3594
  3636  007B94                     l198:
  3637                           
  3638                           ;Main.c: 521: }
  3639                           ;Main.c: 522: }
  3640                           ;Main.c: 524: if(PORTAbits.RA0==1)
  3641  007B94  A080               	btfss	3968,0,c	;volatile
  3642  007B96  D00A               	goto	l3606
  3643                           
  3644                           ;Main.c: 525: {
  3645                           ;Main.c: 526: B++;
  3646  007B98  0100               	movlb	0	; () banked
  3647  007B9A  4BD4               	infsnz	_B& (0+255),f,b
  3648  007B9C  2BD5               	incf	(_B+1)& (0+255),f,b
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;Main.c: 527: _delay((unsigned long)((10)*(4000000/4000.0)));
  3652  007B9E  0E0D               	movlw	13
  3653  007BA0  6E3C               	movwf	??_main& (0+255),c
  3654  007BA2  0EFC               	movlw	252
  3655  007BA4                     u3617:
  3656  007BA4  2EE8               	decfsz	wreg,f,c
  3657  007BA6  D7FE               	goto	u3617
  3658  007BA8  2E3C               	decfsz	??_main& (0+255),f,c
  3659  007BAA  D7FC               	goto	u3617
  3660  007BAC                     l3606:
  3661                           
  3662                           ;Main.c: 528: }
  3663                           ;Main.c: 530: if(PORTAbits.RA1==1)
  3664  007BAC  A280               	btfss	3968,1,c	;volatile
  3665  007BAE  D00B               	goto	l204
  3666                           
  3667                           ;Main.c: 531: {
  3668                           ;Main.c: 532: B--;
  3669  007BB0  0100               	movlb	0	; () banked
  3670  007BB2  07D4               	decf	_B& (0+255),f,b
  3671  007BB4  A0D8               	btfss	status,0,c
  3672  007BB6  07D5               	decf	(_B+1)& (0+255),f,b
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;Main.c: 533: _delay((unsigned long)((10)*(4000000/4000.0)));
  3676  007BB8  0E0D               	movlw	13
  3677  007BBA  6E3C               	movwf	??_main& (0+255),c
  3678  007BBC  0EFC               	movlw	252
  3679  007BBE                     u3627:
  3680  007BBE  2EE8               	decfsz	wreg,f,c
  3681  007BC0  D7FE               	goto	u3627
  3682  007BC2  2E3C               	decfsz	??_main& (0+255),f,c
  3683  007BC4  D7FC               	goto	u3627
  3684  007BC6                     l204:
  3685                           
  3686                           ;Main.c: 534: }
  3687                           ;Main.c: 535: if(B>2){
  3688  007BC6  0E03               	movlw	3
  3689  007BC8  0100               	movlb	0	; () banked
  3690  007BCA  5DD4               	subwf	_B& (0+255),w,b
  3691  007BCC  0E00               	movlw	0
  3692  007BCE  0100               	movlb	0	; () banked
  3693  007BD0  59D5               	subwfb	(_B+1)& (0+255),w,b
  3694  007BD2  A0D8               	btfss	status,0,c
  3695  007BD4  D006               	goto	l3616
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;Main.c: 536: B=0;
  3699  007BD6  0E00               	movlw	0
  3700  007BD8  0100               	movlb	0	; () banked
  3701  007BDA  6FD5               	movwf	(_B+1)& (0+255),b
  3702  007BDC  0E00               	movlw	0
  3703  007BDE  0100               	movlb	0	; () banked
  3704  007BE0  6FD4               	movwf	_B& (0+255),b
  3705  007BE2                     l3616:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;Main.c: 541: }
  3709                           ;Main.c: 542: if(PORTAbits.RA0==1 && PORTAbits.RA3==1 ){
  3710  007BE2  B080               	btfsc	3968,0,c	;volatile
  3711                           
  3712                           ; BSR set to: 0
  3713  007BE4  A680               	btfss	3968,3,c	;volatile
  3714  007BE6  D006               	goto	l3622
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;Main.c: 543: w=1;
  3718  007BE8  0E00               	movlw	0
  3719  007BEA  0100               	movlb	0	; () banked
  3720  007BEC  6FE3               	movwf	(_w+1)& (0+255),b
  3721  007BEE  0E01               	movlw	1
  3722  007BF0  0100               	movlb	0	; () banked
  3723  007BF2  6FE2               	movwf	_w& (0+255),b
  3724  007BF4                     l3622:
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;Main.c: 544: }
  3728                           ;Main.c: 545: }while(w==0);
  3729  007BF4  0100               	movlb	0	; () banked
  3730  007BF6  51E3               	movf	(_w+1)& (0+255),w,b
  3731  007BF8  11E2               	iorwf	_w& (0+255),w,b
  3732  007BFA  B4D8               	btfsc	status,2,c
  3733  007BFC  D6F8               	goto	l3514
  3734  007BFE                     l3624:
  3735                           
  3736                           ;Main.c: 547: }
  3737                           ;Main.c: 550: }
  3738                           ;Main.c: 552: if(B==3){
  3739  007BFE  0100               	movlb	0	; () banked
  3740  007C00  51D4               	movf	_B& (0+255),w,b
  3741  007C02  0A03               	xorlw	3
  3742  007C04  11D5               	iorwf	(_B+1)& (0+255),w,b
  3743  007C06  A4D8               	btfss	status,2,c
  3744  007C08  D123               	goto	l3746
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;Main.c: 553: Lcd_Init();
  3748  007C0A  EC7A  F032         	call	_Lcd_Init	;wreg free
  3749                           
  3750                           ;Main.c: 554: Lcd_Cmd(1);
  3751  007C0E  0E01               	movlw	1
  3752  007C10  ECE7  F031         	call	_Lcd_Cmd
  3753                           
  3754                           ;Main.c: 555: Lcd_Cmd(12);
  3755  007C14  0E0C               	movlw	12
  3756  007C16  ECE7  F031         	call	_Lcd_Cmd
  3757                           
  3758                           ;Main.c: 556: Lcd_Out2(1,1,"=> Triangular");
  3759  007C1A  0E01               	movlw	1
  3760  007C1C  6E04               	movwf	Lcd_Out2@x,c
  3761  007C1E  0E7E               	movlw	high STR_83
  3762  007C20  6E06               	movwf	Lcd_Out2@buffer+1,c
  3763  007C22  0E9F               	movlw	low STR_83
  3764  007C24  6E05               	movwf	Lcd_Out2@buffer,c
  3765  007C26  0E01               	movlw	1
  3766  007C28  ECAB  F02D         	call	_Lcd_Out2
  3767                           
  3768                           ;Main.c: 557: tm_1s();
  3769  007C2C  EC20  F02E         	call	_tm_1s	;wreg free
  3770                           
  3771                           ;Main.c: 560: if(PORTAbits.RA2==1){
  3772  007C30  A480               	btfss	3968,2,c	;volatile
  3773  007C32  D10E               	goto	l3746
  3774                           
  3775                           ;Main.c: 561: w=0;
  3776  007C34  0E00               	movlw	0
  3777  007C36  0100               	movlb	0	; () banked
  3778  007C38  6FE3               	movwf	(_w+1)& (0+255),b
  3779  007C3A  0E00               	movlw	0
  3780  007C3C  0100               	movlb	0	; () banked
  3781  007C3E  6FE2               	movwf	_w& (0+255),b
  3782  007C40                     l3636:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;Main.c: 564: if(B==0){
  3786  007C40  0100               	movlb	0	; () banked
  3787  007C42  51D5               	movf	(_B+1)& (0+255),w,b
  3788  007C44  11D4               	iorwf	_B& (0+255),w,b
  3789  007C46  A4D8               	btfss	status,2,c
  3790  007C48  D044               	goto	l3666
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;Main.c: 565: Lcd_Init();
  3794  007C4A  EC7A  F032         	call	_Lcd_Init	;wreg free
  3795                           
  3796                           ;Main.c: 566: Lcd_Cmd(1);
  3797  007C4E  0E01               	movlw	1
  3798  007C50  ECE7  F031         	call	_Lcd_Cmd
  3799                           
  3800                           ;Main.c: 567: Lcd_Cmd(12);
  3801  007C54  0E0C               	movlw	12
  3802  007C56  ECE7  F031         	call	_Lcd_Cmd
  3803                           
  3804                           ;Main.c: 568: Lcd_Out2(1,1,"=> Trin 1");
  3805  007C5A  0E01               	movlw	1
  3806  007C5C  6E04               	movwf	Lcd_Out2@x,c
  3807  007C5E  0E7F               	movlw	high STR_84
  3808  007C60  6E06               	movwf	Lcd_Out2@buffer+1,c
  3809  007C62  0E15               	movlw	low STR_84
  3810  007C64  6E05               	movwf	Lcd_Out2@buffer,c
  3811  007C66  0E01               	movlw	1
  3812  007C68  ECAB  F02D         	call	_Lcd_Out2
  3813                           
  3814                           ;Main.c: 569: Lcd_Out2(2,1,"   Trin 2");
  3815  007C6C  0E01               	movlw	1
  3816  007C6E  6E04               	movwf	Lcd_Out2@x,c
  3817  007C70  0E7F               	movlw	high STR_85
  3818  007C72  6E06               	movwf	Lcd_Out2@buffer+1,c
  3819  007C74  0E1F               	movlw	low STR_85
  3820  007C76  6E05               	movwf	Lcd_Out2@buffer,c
  3821  007C78  0E02               	movlw	2
  3822  007C7A  ECAB  F02D         	call	_Lcd_Out2
  3823                           
  3824                           ;Main.c: 570: tm_1s();
  3825  007C7E  EC20  F02E         	call	_tm_1s	;wreg free
  3826                           
  3827                           ;Main.c: 571: if(PORTAbits.RA2==1){
  3828  007C82  A480               	btfss	3968,2,c	;volatile
  3829  007C84  D026               	goto	l3666
  3830                           
  3831                           ;Main.c: 572: q=0;
  3832  007C86  0E00               	movlw	0
  3833  007C88  0100               	movlb	0	; () banked
  3834  007C8A  6FDD               	movwf	(_q+1)& (0+255),b
  3835  007C8C  0E00               	movlw	0
  3836  007C8E  0100               	movlb	0	; () banked
  3837  007C90  6FDC               	movwf	_q& (0+255),b
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;Main.c: 573: Lcd_Init();
  3841  007C92  EC7A  F032         	call	_Lcd_Init	;wreg free
  3842                           
  3843                           ;Main.c: 574: Lcd_Cmd(1);
  3844  007C96  0E01               	movlw	1
  3845  007C98  ECE7  F031         	call	_Lcd_Cmd
  3846                           
  3847                           ;Main.c: 575: Lcd_Cmd(12);
  3848  007C9C  0E0C               	movlw	12
  3849  007C9E  ECE7  F031         	call	_Lcd_Cmd
  3850                           
  3851                           ;Main.c: 576: Lcd_Out2(1,1," Trin 1");
  3852  007CA2  0E01               	movlw	1
  3853  007CA4  6E04               	movwf	Lcd_Out2@x,c
  3854  007CA6  0E7F               	movlw	high (STR_87+2)
  3855  007CA8  6E06               	movwf	Lcd_Out2@buffer+1,c
  3856  007CAA  0E0D               	movlw	low (STR_87+2)
  3857  007CAC  6E05               	movwf	Lcd_Out2@buffer,c
  3858  007CAE  0E01               	movlw	1
  3859  007CB0  ECAB  F02D         	call	_Lcd_Out2
  3860  007CB4                     l3658:
  3861                           
  3862                           ;Main.c: 578: TRI_1();
  3863  007CB4  ECEC  F030         	call	_TRI_1	;wreg free
  3864                           
  3865                           ;Main.c: 579: if(PORTAbits.RA3==1){
  3866  007CB8  A680               	btfss	3968,3,c	;volatile
  3867  007CBA  D006               	goto	l3664
  3868                           
  3869                           ;Main.c: 580: q=1;
  3870  007CBC  0E00               	movlw	0
  3871  007CBE  0100               	movlb	0	; () banked
  3872  007CC0  6FDD               	movwf	(_q+1)& (0+255),b
  3873  007CC2  0E01               	movlw	1
  3874  007CC4  0100               	movlb	0	; () banked
  3875  007CC6  6FDC               	movwf	_q& (0+255),b
  3876  007CC8                     l3664:
  3877                           
  3878                           ;Main.c: 581: }
  3879                           ;Main.c: 582: }while(q==0);
  3880  007CC8  0100               	movlb	0	; () banked
  3881  007CCA  51DD               	movf	(_q+1)& (0+255),w,b
  3882  007CCC  11DC               	iorwf	_q& (0+255),w,b
  3883  007CCE  B4D8               	btfsc	status,2,c
  3884  007CD0  D7F1               	goto	l3658
  3885  007CD2                     l3666:
  3886                           
  3887                           ;Main.c: 583: }
  3888                           ;Main.c: 584: }
  3889                           ;Main.c: 586: if(B==1){
  3890  007CD2  0100               	movlb	0	; () banked
  3891  007CD4  05D4               	decf	_B& (0+255),w,b
  3892  007CD6  11D5               	iorwf	(_B+1)& (0+255),w,b
  3893  007CD8  A4D8               	btfss	status,2,c
  3894  007CDA  D044               	goto	l3696
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;Main.c: 587: Lcd_Init();
  3898  007CDC  EC7A  F032         	call	_Lcd_Init	;wreg free
  3899                           
  3900                           ;Main.c: 588: Lcd_Cmd(1);
  3901  007CE0  0E01               	movlw	1
  3902  007CE2  ECE7  F031         	call	_Lcd_Cmd
  3903                           
  3904                           ;Main.c: 589: Lcd_Cmd(12);
  3905  007CE6  0E0C               	movlw	12
  3906  007CE8  ECE7  F031         	call	_Lcd_Cmd
  3907                           
  3908                           ;Main.c: 590: Lcd_Out2(1,1,"   Trin 1");
  3909  007CEC  0E01               	movlw	1
  3910  007CEE  6E04               	movwf	Lcd_Out2@x,c
  3911  007CF0  0E7F               	movlw	high STR_87
  3912  007CF2  6E06               	movwf	Lcd_Out2@buffer+1,c
  3913  007CF4  0E0B               	movlw	low STR_87
  3914  007CF6  6E05               	movwf	Lcd_Out2@buffer,c
  3915  007CF8  0E01               	movlw	1
  3916  007CFA  ECAB  F02D         	call	_Lcd_Out2
  3917                           
  3918                           ;Main.c: 591: Lcd_Out2(2,1,"=> Trin 2");
  3919  007CFE  0E01               	movlw	1
  3920  007D00  6E04               	movwf	Lcd_Out2@x,c
  3921  007D02  0E7F               	movlw	high STR_88
  3922  007D04  6E06               	movwf	Lcd_Out2@buffer+1,c
  3923  007D06  0E29               	movlw	low STR_88
  3924  007D08  6E05               	movwf	Lcd_Out2@buffer,c
  3925  007D0A  0E02               	movlw	2
  3926  007D0C  ECAB  F02D         	call	_Lcd_Out2
  3927                           
  3928                           ;Main.c: 592: tm_1s();
  3929  007D10  EC20  F02E         	call	_tm_1s	;wreg free
  3930                           
  3931                           ;Main.c: 593: if(PORTAbits.RA2==1){
  3932  007D14  A480               	btfss	3968,2,c	;volatile
  3933  007D16  D026               	goto	l3696
  3934                           
  3935                           ;Main.c: 594: q=0;
  3936  007D18  0E00               	movlw	0
  3937  007D1A  0100               	movlb	0	; () banked
  3938  007D1C  6FDD               	movwf	(_q+1)& (0+255),b
  3939  007D1E  0E00               	movlw	0
  3940  007D20  0100               	movlb	0	; () banked
  3941  007D22  6FDC               	movwf	_q& (0+255),b
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;Main.c: 595: Lcd_Init();
  3945  007D24  EC7A  F032         	call	_Lcd_Init	;wreg free
  3946                           
  3947                           ;Main.c: 596: Lcd_Cmd(1);
  3948  007D28  0E01               	movlw	1
  3949  007D2A  ECE7  F031         	call	_Lcd_Cmd
  3950                           
  3951                           ;Main.c: 597: Lcd_Cmd(12);
  3952  007D2E  0E0C               	movlw	12
  3953  007D30  ECE7  F031         	call	_Lcd_Cmd
  3954                           
  3955                           ;Main.c: 598: Lcd_Out2(1,1," Trin 2");
  3956  007D34  0E01               	movlw	1
  3957  007D36  6E04               	movwf	Lcd_Out2@x,c
  3958  007D38  0E7F               	movlw	high (STR_85+2)
  3959  007D3A  6E06               	movwf	Lcd_Out2@buffer+1,c
  3960  007D3C  0E21               	movlw	low (STR_85+2)
  3961  007D3E  6E05               	movwf	Lcd_Out2@buffer,c
  3962  007D40  0E01               	movlw	1
  3963  007D42  ECAB  F02D         	call	_Lcd_Out2
  3964  007D46                     l3688:
  3965                           
  3966                           ;Main.c: 600: TRI_2();
  3967  007D46  ECA4  F033         	call	_TRI_2	;wreg free
  3968                           
  3969                           ;Main.c: 601: if(PORTAbits.RA3==1){
  3970  007D4A  A680               	btfss	3968,3,c	;volatile
  3971  007D4C  D006               	goto	l3694
  3972                           
  3973                           ;Main.c: 602: q=1;
  3974  007D4E  0E00               	movlw	0
  3975  007D50  0100               	movlb	0	; () banked
  3976  007D52  6FDD               	movwf	(_q+1)& (0+255),b
  3977  007D54  0E01               	movlw	1
  3978  007D56  0100               	movlb	0	; () banked
  3979  007D58  6FDC               	movwf	_q& (0+255),b
  3980  007D5A                     l3694:
  3981                           
  3982                           ;Main.c: 603: }
  3983                           ;Main.c: 604: }while(q==0);
  3984  007D5A  0100               	movlb	0	; () banked
  3985  007D5C  51DD               	movf	(_q+1)& (0+255),w,b
  3986  007D5E  11DC               	iorwf	_q& (0+255),w,b
  3987  007D60  B4D8               	btfsc	status,2,c
  3988  007D62  D7F1               	goto	l3688
  3989  007D64                     l3696:
  3990                           
  3991                           ;Main.c: 605: }
  3992                           ;Main.c: 606: }
  3993                           ;Main.c: 608: if(B==2){
  3994  007D64  0100               	movlb	0	; () banked
  3995  007D66  51D4               	movf	_B& (0+255),w,b
  3996  007D68  0A02               	xorlw	2
  3997  007D6A  11D5               	iorwf	(_B+1)& (0+255),w,b
  3998  007D6C  A4D8               	btfss	status,2,c
  3999  007D6E  D03B               	goto	l222
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;Main.c: 609: Lcd_Init();
  4003  007D70  EC7A  F032         	call	_Lcd_Init	;wreg free
  4004                           
  4005                           ;Main.c: 610: Lcd_Cmd(1);
  4006  007D74  0E01               	movlw	1
  4007  007D76  ECE7  F031         	call	_Lcd_Cmd
  4008                           
  4009                           ;Main.c: 611: Lcd_Cmd(12);
  4010  007D7A  0E0C               	movlw	12
  4011  007D7C  ECE7  F031         	call	_Lcd_Cmd
  4012                           
  4013                           ;Main.c: 612: Lcd_Out2(1,1,"=> Trin 3");
  4014  007D80  0E01               	movlw	1
  4015  007D82  6E04               	movwf	Lcd_Out2@x,c
  4016  007D84  0E7F               	movlw	high STR_90
  4017  007D86  6E06               	movwf	Lcd_Out2@buffer+1,c
  4018  007D88  0E33               	movlw	low STR_90
  4019  007D8A  6E05               	movwf	Lcd_Out2@buffer,c
  4020  007D8C  0E01               	movlw	1
  4021  007D8E  ECAB  F02D         	call	_Lcd_Out2
  4022                           
  4023                           ;Main.c: 613: tm_1s();
  4024  007D92  EC20  F02E         	call	_tm_1s	;wreg free
  4025                           
  4026                           ;Main.c: 614: if(PORTAbits.RA2==1){
  4027  007D96  A480               	btfss	3968,2,c	;volatile
  4028  007D98  D026               	goto	l222
  4029                           
  4030                           ;Main.c: 615: q=0;
  4031  007D9A  0E00               	movlw	0
  4032  007D9C  0100               	movlb	0	; () banked
  4033  007D9E  6FDD               	movwf	(_q+1)& (0+255),b
  4034  007DA0  0E00               	movlw	0
  4035  007DA2  0100               	movlb	0	; () banked
  4036  007DA4  6FDC               	movwf	_q& (0+255),b
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;Main.c: 616: Lcd_Init();
  4040  007DA6  EC7A  F032         	call	_Lcd_Init	;wreg free
  4041                           
  4042                           ;Main.c: 617: Lcd_Cmd(1);
  4043  007DAA  0E01               	movlw	1
  4044  007DAC  ECE7  F031         	call	_Lcd_Cmd
  4045                           
  4046                           ;Main.c: 618: Lcd_Cmd(12);
  4047  007DB0  0E0C               	movlw	12
  4048  007DB2  ECE7  F031         	call	_Lcd_Cmd
  4049                           
  4050                           ;Main.c: 619: Lcd_Out2(1,1," Trin 3");
  4051  007DB6  0E01               	movlw	1
  4052  007DB8  6E04               	movwf	Lcd_Out2@x,c
  4053  007DBA  0E7F               	movlw	high (STR_90+2)
  4054  007DBC  6E06               	movwf	Lcd_Out2@buffer+1,c
  4055  007DBE  0E35               	movlw	low (STR_90+2)
  4056  007DC0  6E05               	movwf	Lcd_Out2@buffer,c
  4057  007DC2  0E01               	movlw	1
  4058  007DC4  ECAB  F02D         	call	_Lcd_Out2
  4059  007DC8                     l3716:
  4060                           
  4061                           ;Main.c: 621: TRI_3();
  4062  007DC8  EC49  F034         	call	_TRI_3	;wreg free
  4063                           
  4064                           ;Main.c: 622: if(PORTAbits.RA3==1){
  4065  007DCC  A680               	btfss	3968,3,c	;volatile
  4066  007DCE  D006               	goto	l3722
  4067                           
  4068                           ;Main.c: 623: q=1;
  4069  007DD0  0E00               	movlw	0
  4070  007DD2  0100               	movlb	0	; () banked
  4071  007DD4  6FDD               	movwf	(_q+1)& (0+255),b
  4072  007DD6  0E01               	movlw	1
  4073  007DD8  0100               	movlb	0	; () banked
  4074  007DDA  6FDC               	movwf	_q& (0+255),b
  4075  007DDC                     l3722:
  4076                           
  4077                           ;Main.c: 624: }
  4078                           ;Main.c: 625: }while(q==0);
  4079  007DDC  0100               	movlb	0	; () banked
  4080  007DDE  51DD               	movf	(_q+1)& (0+255),w,b
  4081  007DE0  11DC               	iorwf	_q& (0+255),w,b
  4082  007DE2  B4D8               	btfsc	status,2,c
  4083  007DE4  D7F1               	goto	l3716
  4084  007DE6                     l222:
  4085                           
  4086                           ;Main.c: 626: }
  4087                           ;Main.c: 627: }
  4088                           ;Main.c: 629: if(PORTAbits.RA0==1)
  4089  007DE6  A080               	btfss	3968,0,c	;volatile
  4090  007DE8  D00A               	goto	l3728
  4091                           
  4092                           ;Main.c: 630: {
  4093                           ;Main.c: 631: B++;
  4094  007DEA  0100               	movlb	0	; () banked
  4095  007DEC  4BD4               	infsnz	_B& (0+255),f,b
  4096  007DEE  2BD5               	incf	(_B+1)& (0+255),f,b
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;Main.c: 632: _delay((unsigned long)((10)*(4000000/4000.0)));
  4100  007DF0  0E0D               	movlw	13
  4101  007DF2  6E3C               	movwf	??_main& (0+255),c
  4102  007DF4  0EFC               	movlw	252
  4103  007DF6                     u3637:
  4104  007DF6  2EE8               	decfsz	wreg,f,c
  4105  007DF8  D7FE               	goto	u3637
  4106  007DFA  2E3C               	decfsz	??_main& (0+255),f,c
  4107  007DFC  D7FC               	goto	u3637
  4108  007DFE                     l3728:
  4109                           
  4110                           ;Main.c: 633: }
  4111                           ;Main.c: 635: if(PORTAbits.RA1==1)
  4112  007DFE  A280               	btfss	3968,1,c	;volatile
  4113  007E00  D00B               	goto	l228
  4114                           
  4115                           ;Main.c: 636: {
  4116                           ;Main.c: 637: B--;
  4117  007E02  0100               	movlb	0	; () banked
  4118  007E04  07D4               	decf	_B& (0+255),f,b
  4119  007E06  A0D8               	btfss	status,0,c
  4120  007E08  07D5               	decf	(_B+1)& (0+255),f,b
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;Main.c: 638: _delay((unsigned long)((10)*(4000000/4000.0)));
  4124  007E0A  0E0D               	movlw	13
  4125  007E0C  6E3C               	movwf	??_main& (0+255),c
  4126  007E0E  0EFC               	movlw	252
  4127  007E10                     u3647:
  4128  007E10  2EE8               	decfsz	wreg,f,c
  4129  007E12  D7FE               	goto	u3647
  4130  007E14  2E3C               	decfsz	??_main& (0+255),f,c
  4131  007E16  D7FC               	goto	u3647
  4132  007E18                     l228:
  4133                           
  4134                           ;Main.c: 639: }
  4135                           ;Main.c: 640: if(B>2){
  4136  007E18  0E03               	movlw	3
  4137  007E1A  0100               	movlb	0	; () banked
  4138  007E1C  5DD4               	subwf	_B& (0+255),w,b
  4139  007E1E  0E00               	movlw	0
  4140  007E20  0100               	movlb	0	; () banked
  4141  007E22  59D5               	subwfb	(_B+1)& (0+255),w,b
  4142  007E24  A0D8               	btfss	status,0,c
  4143  007E26  D006               	goto	l3738
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;Main.c: 641: B=0;
  4147  007E28  0E00               	movlw	0
  4148  007E2A  0100               	movlb	0	; () banked
  4149  007E2C  6FD5               	movwf	(_B+1)& (0+255),b
  4150  007E2E  0E00               	movlw	0
  4151  007E30  0100               	movlb	0	; () banked
  4152  007E32  6FD4               	movwf	_B& (0+255),b
  4153  007E34                     l3738:
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;Main.c: 646: }
  4157                           ;Main.c: 647: if(PORTAbits.RA0==1 && PORTAbits.RA3==1 ){
  4158  007E34  B080               	btfsc	3968,0,c	;volatile
  4159                           
  4160                           ; BSR set to: 0
  4161  007E36  A680               	btfss	3968,3,c	;volatile
  4162  007E38  D006               	goto	l3744
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;Main.c: 648: w=1;
  4166  007E3A  0E00               	movlw	0
  4167  007E3C  0100               	movlb	0	; () banked
  4168  007E3E  6FE3               	movwf	(_w+1)& (0+255),b
  4169  007E40  0E01               	movlw	1
  4170  007E42  0100               	movlb	0	; () banked
  4171  007E44  6FE2               	movwf	_w& (0+255),b
  4172  007E46                     l3744:
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;Main.c: 649: }
  4176                           ;Main.c: 650: }while(w==0);
  4177  007E46  0100               	movlb	0	; () banked
  4178  007E48  51E3               	movf	(_w+1)& (0+255),w,b
  4179  007E4A  11E2               	iorwf	_w& (0+255),w,b
  4180  007E4C  B4D8               	btfsc	status,2,c
  4181  007E4E  D6F8               	goto	l3636
  4182  007E50                     l3746:
  4183                           
  4184                           ;Main.c: 652: }
  4185                           ;Main.c: 654: }
  4186                           ;Main.c: 657: if(B>3){
  4187  007E50  0E04               	movlw	4
  4188  007E52  0100               	movlb	0	; () banked
  4189  007E54  5DD4               	subwf	_B& (0+255),w,b
  4190  007E56  0E00               	movlw	0
  4191  007E58  0100               	movlb	0	; () banked
  4192  007E5A  59D5               	subwfb	(_B+1)& (0+255),w,b
  4193  007E5C  A0D8               	btfss	status,0,c
  4194  007E5E  EF1A  F037         	goto	l3048
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;Main.c: 658: B=1;
  4198  007E62  0E00               	movlw	0
  4199  007E64  0100               	movlb	0	; () banked
  4200  007E66  6FD5               	movwf	(_B+1)& (0+255),b
  4201  007E68  0E01               	movlw	1
  4202  007E6A  0100               	movlb	0	; () banked
  4203  007E6C  6FD4               	movwf	_B& (0+255),b
  4204  007E6E  EF1A  F037         	goto	l3048
  4205  007E72                     __end_of_main:
  4206                           	opt stack 0
  4207                           tblptru	equ	0xFF8
  4208                           tblptrh	equ	0xFF7
  4209                           tblptrl	equ	0xFF6
  4210                           tablat	equ	0xFF5
  4211                           postinc0	equ	0xFEE
  4212                           wreg	equ	0xFE8
  4213                           postdec1	equ	0xFE5
  4214                           fsr1l	equ	0xFE1
  4215                           status	equ	0xFD8
  4216                           
  4217 ;; *************** function _tm_1s *****************
  4218 ;; Defined at:
  4219 ;;		line 4 in file "delay.h"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;		None               void
  4226 ;; Registers used:
  4227 ;;		wreg
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4235 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4236 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4237 ;;Total ram usage:        1 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_main
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text1
  4247  005C40                     __ptext1:
  4248                           	opt stack 0
  4249  005C40                     _tm_1s:
  4250                           	opt stack 30
  4251                           
  4252                           ;delay.h: 5: _delay((unsigned long)((100)*(4000000/4000.0)));
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;incstack = 0
  4256  005C40  0E82               	movlw	130
  4257  005C42  6E01               	movwf	??_tm_1s& (0+255),c
  4258  005C44  0EDE               	movlw	222
  4259  005C46                     u3657:
  4260  005C46  2EE8               	decfsz	wreg,f,c
  4261  005C48  D7FE               	goto	u3657
  4262  005C4A  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4263  005C4C  D7FC               	goto	u3657
  4264                           
  4265                           ;delay.h: 6: _delay((unsigned long)((100)*(4000000/4000.0)));
  4266  005C4E  0E82               	movlw	130
  4267  005C50  6E01               	movwf	??_tm_1s& (0+255),c
  4268  005C52  0EDE               	movlw	222
  4269  005C54                     u3667:
  4270  005C54  2EE8               	decfsz	wreg,f,c
  4271  005C56  D7FE               	goto	u3667
  4272  005C58  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4273  005C5A  D7FC               	goto	u3667
  4274                           
  4275                           ;delay.h: 7: _delay((unsigned long)((100)*(4000000/4000.0)));
  4276  005C5C  0E82               	movlw	130
  4277  005C5E  6E01               	movwf	??_tm_1s& (0+255),c
  4278  005C60  0EDE               	movlw	222
  4279  005C62                     u3677:
  4280  005C62  2EE8               	decfsz	wreg,f,c
  4281  005C64  D7FE               	goto	u3677
  4282  005C66  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4283  005C68  D7FC               	goto	u3677
  4284                           
  4285                           ;delay.h: 8: _delay((unsigned long)((100)*(4000000/4000.0)));
  4286  005C6A  0E82               	movlw	130
  4287  005C6C  6E01               	movwf	??_tm_1s& (0+255),c
  4288  005C6E  0EDE               	movlw	222
  4289  005C70                     u3687:
  4290  005C70  2EE8               	decfsz	wreg,f,c
  4291  005C72  D7FE               	goto	u3687
  4292  005C74  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4293  005C76  D7FC               	goto	u3687
  4294                           
  4295                           ;delay.h: 9: _delay((unsigned long)((100)*(4000000/4000.0)));
  4296  005C78  0E82               	movlw	130
  4297  005C7A  6E01               	movwf	??_tm_1s& (0+255),c
  4298  005C7C  0EDE               	movlw	222
  4299  005C7E                     u3697:
  4300  005C7E  2EE8               	decfsz	wreg,f,c
  4301  005C80  D7FE               	goto	u3697
  4302  005C82  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4303  005C84  D7FC               	goto	u3697
  4304                           
  4305                           ;delay.h: 10: _delay((unsigned long)((100)*(4000000/4000.0)));
  4306  005C86  0E82               	movlw	130
  4307  005C88  6E01               	movwf	??_tm_1s& (0+255),c
  4308  005C8A  0EDE               	movlw	222
  4309  005C8C                     u3707:
  4310  005C8C  2EE8               	decfsz	wreg,f,c
  4311  005C8E  D7FE               	goto	u3707
  4312  005C90  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4313  005C92  D7FC               	goto	u3707
  4314                           
  4315                           ;delay.h: 11: _delay((unsigned long)((100)*(4000000/4000.0)));
  4316  005C94  0E82               	movlw	130
  4317  005C96  6E01               	movwf	??_tm_1s& (0+255),c
  4318  005C98  0EDE               	movlw	222
  4319  005C9A                     u3717:
  4320  005C9A  2EE8               	decfsz	wreg,f,c
  4321  005C9C  D7FE               	goto	u3717
  4322  005C9E  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4323  005CA0  D7FC               	goto	u3717
  4324                           
  4325                           ;delay.h: 12: _delay((unsigned long)((100)*(4000000/4000.0)));
  4326  005CA2  0E82               	movlw	130
  4327  005CA4  6E01               	movwf	??_tm_1s& (0+255),c
  4328  005CA6  0EDE               	movlw	222
  4329  005CA8                     u3727:
  4330  005CA8  2EE8               	decfsz	wreg,f,c
  4331  005CAA  D7FE               	goto	u3727
  4332  005CAC  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4333  005CAE  D7FC               	goto	u3727
  4334                           
  4335                           ;delay.h: 13: _delay((unsigned long)((100)*(4000000/4000.0)));
  4336  005CB0  0E82               	movlw	130
  4337  005CB2  6E01               	movwf	??_tm_1s& (0+255),c
  4338  005CB4  0EDE               	movlw	222
  4339  005CB6                     u3737:
  4340  005CB6  2EE8               	decfsz	wreg,f,c
  4341  005CB8  D7FE               	goto	u3737
  4342  005CBA  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4343  005CBC  D7FC               	goto	u3737
  4344                           
  4345                           ;delay.h: 14: _delay((unsigned long)((100)*(4000000/4000.0)));
  4346  005CBE  0E82               	movlw	130
  4347  005CC0  6E01               	movwf	??_tm_1s& (0+255),c
  4348  005CC2  0EDE               	movlw	222
  4349  005CC4                     u3747:
  4350  005CC4  2EE8               	decfsz	wreg,f,c
  4351  005CC6  D7FE               	goto	u3747
  4352  005CC8  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4353  005CCA  D7FC               	goto	u3747
  4354  005CCC  0012               	return	
  4355  005CCE                     __end_of_tm_1s:
  4356                           	opt stack 0
  4357                           tblptru	equ	0xFF8
  4358                           tblptrh	equ	0xFF7
  4359                           tblptrl	equ	0xFF6
  4360                           tablat	equ	0xFF5
  4361                           postinc0	equ	0xFEE
  4362                           wreg	equ	0xFE8
  4363                           postdec1	equ	0xFE5
  4364                           fsr1l	equ	0xFE1
  4365                           status	equ	0xFD8
  4366                           
  4367 ;; *************** function _lcd_goto *****************
  4368 ;; Defined at:
  4369 ;;		line 161 in file "LCD.h"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  x               2    3[COMRAM] int 
  4372 ;;  y               2    5[COMRAM] int 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  data            1    9[COMRAM] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;		None               void
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4384 ;;      Params:         4       0       0       0       0       0       0       0       0
  4385 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4386 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4387 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4388 ;;Total ram usage:        7 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:    1
  4391 ;; This function calls:
  4392 ;;		_Lcd_Cmd
  4393 ;; This function is called by:
  4394 ;;		_main
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text2
  4399  0059EE                     __ptext2:
  4400                           	opt stack 0
  4401  0059EE                     _lcd_goto:
  4402                           	opt stack 29
  4403                           
  4404                           ;LCD.h: 162: unsigned char data;
  4405                           ;LCD.h: 163: switch (y) {
  4406                           
  4407                           ;incstack = 0
  4408  0059EE  D00D               	goto	l2682
  4409  0059F0                     l2672:
  4410  0059F0  5004               	movf	lcd_goto@x,w,c
  4411  0059F2  0F80               	addlw	128
  4412  0059F4  D008               	goto	L11
  4413  0059F6                     l2674:
  4414  0059F6  5004               	movf	lcd_goto@x,w,c
  4415  0059F8  0FC0               	addlw	192
  4416  0059FA  D005               	goto	L11
  4417  0059FC                     l2676:
  4418  0059FC  5004               	movf	lcd_goto@x,w,c
  4419  0059FE  0F94               	addlw	148
  4420  005A00  D002               	goto	L11
  4421  005A02                     l2678:
  4422  005A02  5004               	movf	lcd_goto@x,w,c
  4423  005A04  0FD4               	addlw	212
  4424  005A06                     L11:
  4425  005A06  6E0A               	movwf	lcd_goto@data,c
  4426  005A08  D015               	goto	l2684
  4427  005A0A                     l2682:
  4428  005A0A  C006  F008         	movff	lcd_goto@y,??_lcd_goto
  4429  005A0E  C007  F009         	movff	lcd_goto@y+1,??_lcd_goto+1
  4430                           
  4431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4432                           ; Switch size 1, requested type "space"
  4433                           ; Number of cases is 1, Range of values is 0 to 0
  4434                           ; switch strategies available:
  4435                           ; Name         Instructions Cycles
  4436                           ; simple_byte            4     3 (average)
  4437                           ;	Chosen strategy is simple_byte
  4438  005A12  5009               	movf	??_lcd_goto+1,w,c
  4439  005A14  0A00               	xorlw	0	; case 0
  4440  005A16  A4D8               	btfss	status,2,c
  4441  005A18  D00D               	goto	l2684
  4442                           
  4443                           ; Switch size 1, requested type "space"
  4444                           ; Number of cases is 4, Range of values is 1 to 4
  4445                           ; switch strategies available:
  4446                           ; Name         Instructions Cycles
  4447                           ; simple_byte           13     7 (average)
  4448                           ;	Chosen strategy is simple_byte
  4449  005A1A  5008               	movf	??_lcd_goto,w,c
  4450  005A1C  0A01               	xorlw	1	; case 1
  4451  005A1E  B4D8               	btfsc	status,2,c
  4452  005A20  D7E7               	goto	l2672
  4453  005A22  0A03               	xorlw	3	; case 2
  4454  005A24  B4D8               	btfsc	status,2,c
  4455  005A26  D7E7               	goto	l2674
  4456  005A28  0A01               	xorlw	1	; case 3
  4457  005A2A  B4D8               	btfsc	status,2,c
  4458  005A2C  D7E7               	goto	l2676
  4459  005A2E  0A07               	xorlw	7	; case 4
  4460  005A30  B4D8               	btfsc	status,2,c
  4461  005A32  D7E7               	goto	l2678
  4462  005A34                     l2684:
  4463                           
  4464                           ;LCD.h: 170: Lcd_Cmd(data);
  4465  005A34  500A               	movf	lcd_goto@data,w,c
  4466  005A36  ECE7  F031         	call	_Lcd_Cmd
  4467  005A3A  0012               	return	
  4468  005A3C                     __end_of_lcd_goto:
  4469                           	opt stack 0
  4470                           tblptru	equ	0xFF8
  4471                           tblptrh	equ	0xFF7
  4472                           tblptrl	equ	0xFF6
  4473                           tablat	equ	0xFF5
  4474                           postinc0	equ	0xFEE
  4475                           wreg	equ	0xFE8
  4476                           postdec1	equ	0xFE5
  4477                           fsr1l	equ	0xFE1
  4478                           status	equ	0xFD8
  4479                           
  4480 ;; *************** function ___wmul *****************
  4481 ;; Defined at:
  4482 ;;		line 15 in file "/opt/microchip/xc8/v1.32/sources/common/Umul16.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  multiplier      2    0[COMRAM] unsigned int 
  4485 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  product         2    4[COMRAM] unsigned int 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  2    0[COMRAM] unsigned int 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0, prodl, prodh
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4497 ;;      Params:         4       0       0       0       0       0       0       0       0
  4498 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4500 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4501 ;;Total ram usage:        6 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_main
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text3
  4511  005986                     __ptext3:
  4512                           	opt stack 0
  4513  005986                     ___wmul:
  4514                           	opt stack 30
  4515                           
  4516                           ;incstack = 0
  4517  005986  5001               	movf	___wmul@multiplier,w,c
  4518  005988  0203               	mulwf	___wmul@multiplicand,c
  4519  00598A  CFF3 F005          	movff	prodl,___wmul@product
  4520  00598E  CFF4 F006          	movff	prodh,___wmul@product+1
  4521  005992  5001               	movf	___wmul@multiplier,w,c
  4522  005994  0204               	mulwf	___wmul@multiplicand+1,c
  4523  005996  50F3               	movf	prodl,w,c
  4524  005998  2606               	addwf	___wmul@product+1,f,c
  4525  00599A  5002               	movf	___wmul@multiplier+1,w,c
  4526  00599C  0203               	mulwf	___wmul@multiplicand,c
  4527  00599E  50F3               	movf	prodl,w,c
  4528  0059A0  2606               	addwf	___wmul@product+1,f,c
  4529  0059A2  C005  F001         	movff	___wmul@product,?___wmul
  4530  0059A6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4531  0059AA  0012               	return	
  4532  0059AC                     __end_of___wmul:
  4533                           	opt stack 0
  4534                           tblptru	equ	0xFF8
  4535                           tblptrh	equ	0xFF7
  4536                           tblptrl	equ	0xFF6
  4537                           tablat	equ	0xFF5
  4538                           prodh	equ	0xFF4
  4539                           prodl	equ	0xFF3
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           postdec1	equ	0xFE5
  4543                           fsr1l	equ	0xFE1
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function _TRI_3 *****************
  4547 ;; Defined at:
  4548 ;;		line 65 in file "Trian.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  valoresSeno    40   13[COMRAM] int [20]
  4553 ;;  i               2   57[COMRAM] int 
  4554 ;;  j               2   55[COMRAM] int 
  4555 ;;  k               2   53[COMRAM] int 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2   34[COMRAM] int 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4565 ;;      Params:         0       0       0       0       0       0       0       0       0
  4566 ;;      Locals:        46       0       0       0       0       0       0       0       0
  4567 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4568 ;;      Totals:        51       0       0       0       0       0       0       0       0
  4569 ;;Total ram usage:       51 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    1
  4572 ;; This function calls:
  4573 ;;		___awdiv
  4574 ;; This function is called by:
  4575 ;;		_main
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text4
  4580  006892                     __ptext4:
  4581                           	opt stack 0
  4582  006892                     _TRI_3:
  4583                           	opt stack 29
  4584                           
  4585                           ;Trian.c: 66: OSCCON=0b01010111;
  4586                           
  4587                           ;incstack = 0
  4588  006892  0E57               	movlw	87
  4589  006894  6ED3               	movwf	4051,c	;volatile
  4590                           
  4591                           ;Trian.c: 67: TRISAbits.RA6=0;
  4592  006896  9C92               	bcf	3986,6,c	;volatile
  4593                           
  4594                           ;Trian.c: 68: TRISCbits.RC2=0;
  4595  006898  9494               	bcf	3988,2,c	;volatile
  4596                           
  4597                           ;Trian.c: 69: int valoresSeno [20]= {10,20,30,40,50,60,70,80,90,100,90,80,70,60,50,40,30
      +                          ,20,10,0};
  4598  00689A  EE21  F078         	lfsr	2,TRI_3@F7364
  4599  00689E  EE10  F00E         	lfsr	1,TRI_3@valoresSeno
  4600  0068A2  0E28               	movlw	40
  4601  0068A4                     u2541:
  4602  0068A4  CFDE FFE6          	movff	postinc2,postinc1
  4603  0068A8  2EE8               	decfsz	wreg,f,c
  4604  0068AA  D7FC               	goto	u2541
  4605                           
  4606                           ;Trian.c: 70: int i, j,k;
  4607                           ;Trian.c: 71: for (i=0;i<20;i++){
  4608  0068AC  0E00               	movlw	0
  4609  0068AE  6E3B               	movwf	TRI_3@i+1,c
  4610  0068B0  0E00               	movlw	0
  4611  0068B2  6E3A               	movwf	TRI_3@i,c
  4612  0068B4  503B               	movf	TRI_3@i+1,w,c
  4613  0068B6  0A80               	xorlw	128
  4614  0068B8  0F80               	addlw	-128
  4615  0068BA  0E14               	movlw	20
  4616  0068BC  B4D8               	btfsc	status,2,c
  4617  0068BE  5C3A               	subwf	TRI_3@i,w,c
  4618  0068C0  B0D8               	btfsc	status,0,c
  4619  0068C2  D02B               	goto	l3004
  4620                           
  4621                           ;Trian.c: 72: valoresSeno [i]=valoresSeno [i]/4;
  4622  0068C4  0E0E               	movlw	low TRI_3@valoresSeno
  4623  0068C6  6E09               	movwf	??_TRI_3& (0+255),c
  4624  0068C8  0E00               	movlw	high TRI_3@valoresSeno
  4625  0068CA  6E0A               	movwf	(??_TRI_3+1)& (0+255),c
  4626  0068CC  90D8               	bcf	status,0,c
  4627  0068CE  343A               	rlcf	TRI_3@i,w,c
  4628  0068D0  6ED9               	movwf	fsr2l,c
  4629  0068D2  343B               	rlcf	TRI_3@i+1,w,c
  4630  0068D4  6EDA               	movwf	fsr2h,c
  4631  0068D6  5009               	movf	??_TRI_3,w,c
  4632  0068D8  26D9               	addwf	fsr2l,f,c
  4633  0068DA  500A               	movf	??_TRI_3+1,w,c
  4634  0068DC  22DA               	addwfc	fsr2h,f,c
  4635  0068DE  CFDE F001          	movff	postinc2,___awdiv@dividend
  4636  0068E2  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  4637  0068E6  0E00               	movlw	0
  4638  0068E8  6E04               	movwf	___awdiv@divisor+1,c
  4639  0068EA  0E04               	movlw	4
  4640  0068EC  6E03               	movwf	___awdiv@divisor,c
  4641  0068EE  ECB7  F02E         	call	___awdiv	;wreg free
  4642  0068F2  0E0E               	movlw	low TRI_3@valoresSeno
  4643  0068F4  6E0B               	movwf	(??_TRI_3+2)& (0+255),c
  4644  0068F6  0E00               	movlw	high TRI_3@valoresSeno
  4645  0068F8  6E0C               	movwf	(??_TRI_3+3)& (0+255),c
  4646  0068FA  90D8               	bcf	status,0,c
  4647  0068FC  343A               	rlcf	TRI_3@i,w,c
  4648  0068FE  6ED9               	movwf	fsr2l,c
  4649  006900  343B               	rlcf	TRI_3@i+1,w,c
  4650  006902  6EDA               	movwf	fsr2h,c
  4651  006904  500B               	movf	??_TRI_3+2,w,c
  4652  006906  26D9               	addwf	fsr2l,f,c
  4653  006908  500C               	movf	??_TRI_3+3,w,c
  4654  00690A  22DA               	addwfc	fsr2h,f,c
  4655  00690C  C001  FFDE         	movff	?___awdiv,postinc2
  4656  006910  C002  FFDD         	movff	?___awdiv+1,postdec2
  4657  006914  4A3A               	infsnz	TRI_3@i,f,c
  4658  006916  2A3B               	incf	TRI_3@i+1,f,c
  4659  006918  D7CD               	goto	L12
  4660  00691A                     l3004:
  4661                           
  4662                           ;Trian.c: 77: for (i=0;i<20;i++){
  4663  00691A  0E00               	movlw	0
  4664  00691C  6E3B               	movwf	TRI_3@i+1,c
  4665  00691E  0E00               	movlw	0
  4666  006920  6E3A               	movwf	TRI_3@i,c
  4667  006922  503B               	movf	TRI_3@i+1,w,c
  4668  006924  0A80               	xorlw	128
  4669  006926  0F80               	addlw	-128
  4670  006928  0E14               	movlw	20
  4671  00692A  B4D8               	btfsc	status,2,c
  4672  00692C  5C3A               	subwf	TRI_3@i,w,c
  4673  00692E  B0D8               	btfsc	status,0,c
  4674  006930  0012               	return	
  4675                           
  4676                           ;Trian.c: 78: for (j=0;j<valoresSeno[i];j++){
  4677  006932  0E00               	movlw	0
  4678  006934  6E39               	movwf	TRI_3@j+1,c
  4679  006936  0E00               	movlw	0
  4680  006938  6E38               	movwf	TRI_3@j,c
  4681  00693A  D004               	goto	l3014
  4682  00693C                     l377:
  4683                           
  4684                           ;Trian.c: 79: PORTCbits.RC2=1;
  4685  00693C  8482               	bsf	3970,2,c	;volatile
  4686                           
  4687                           ;Trian.c: 80: PORTAbits.RA6=1;
  4688  00693E  8C80               	bsf	3968,6,c	;volatile
  4689  006940  4A38               	infsnz	TRI_3@j,f,c
  4690  006942  2A39               	incf	TRI_3@j+1,f,c
  4691  006944                     l3014:
  4692  006944  0E0E               	movlw	low TRI_3@valoresSeno
  4693  006946  6E09               	movwf	??_TRI_3& (0+255),c
  4694  006948  0E00               	movlw	high TRI_3@valoresSeno
  4695  00694A  6E0A               	movwf	(??_TRI_3+1)& (0+255),c
  4696  00694C  90D8               	bcf	status,0,c
  4697  00694E  343A               	rlcf	TRI_3@i,w,c
  4698  006950  6ED9               	movwf	fsr2l,c
  4699  006952  343B               	rlcf	TRI_3@i+1,w,c
  4700  006954  6EDA               	movwf	fsr2h,c
  4701  006956  5009               	movf	??_TRI_3,w,c
  4702  006958  26D9               	addwf	fsr2l,f,c
  4703  00695A  500A               	movf	??_TRI_3+1,w,c
  4704  00695C  22DA               	addwfc	fsr2h,f,c
  4705  00695E  CFDE F00B          	movff	postinc2,??_TRI_3+2
  4706  006962  CFDD F00C          	movff	postdec2,??_TRI_3+3
  4707  006966  5039               	movf	TRI_3@j+1,w,c
  4708  006968  0A80               	xorlw	128
  4709  00696A  6E0D               	movwf	(??_TRI_3+4)& (0+255),c
  4710  00696C  500B               	movf	??_TRI_3+2,w,c
  4711  00696E  5C38               	subwf	TRI_3@j,w,c
  4712  006970  500C               	movf	??_TRI_3+3,w,c
  4713  006972  0A80               	xorlw	128
  4714  006974  580D               	subwfb	(??_TRI_3+4)& (0+255),w,c
  4715  006976  A0D8               	btfss	status,0,c
  4716  006978  D7E1               	goto	l377
  4717                           
  4718                           ;Trian.c: 81: }
  4719                           ;Trian.c: 82: k=100/4-valoresSeno[i];
  4720  00697A  0E0E               	movlw	low TRI_3@valoresSeno
  4721  00697C  6E09               	movwf	??_TRI_3& (0+255),c
  4722  00697E  0E00               	movlw	high TRI_3@valoresSeno
  4723  006980  6E0A               	movwf	(??_TRI_3+1)& (0+255),c
  4724  006982  90D8               	bcf	status,0,c
  4725  006984  343A               	rlcf	TRI_3@i,w,c
  4726  006986  6ED9               	movwf	fsr2l,c
  4727  006988  343B               	rlcf	TRI_3@i+1,w,c
  4728  00698A  6EDA               	movwf	fsr2h,c
  4729  00698C  5009               	movf	??_TRI_3,w,c
  4730  00698E  26D9               	addwf	fsr2l,f,c
  4731  006990  500A               	movf	??_TRI_3+1,w,c
  4732  006992  22DA               	addwfc	fsr2h,f,c
  4733  006994  CFDE F00B          	movff	postinc2,??_TRI_3+2
  4734  006998  CFDD F00C          	movff	postdec2,??_TRI_3+3
  4735  00699C  1E0B               	comf	??_TRI_3+2,f,c
  4736  00699E  1E0C               	comf	??_TRI_3+3,f,c
  4737  0069A0  4A0B               	infsnz	??_TRI_3+2,f,c
  4738  0069A2  2A0C               	incf	??_TRI_3+3,f,c
  4739  0069A4  0E19               	movlw	25
  4740  0069A6  240B               	addwf	??_TRI_3+2,w,c
  4741  0069A8  6E36               	movwf	TRI_3@k,c
  4742  0069AA  0E00               	movlw	0
  4743  0069AC  200C               	addwfc	??_TRI_3+3,w,c
  4744  0069AE  6E37               	movwf	TRI_3@k+1,c
  4745                           
  4746                           ;Trian.c: 83: for (j=0;j<k;j++){
  4747  0069B0  0E00               	movlw	0
  4748  0069B2  6E39               	movwf	TRI_3@j+1,c
  4749  0069B4  0E00               	movlw	0
  4750  0069B6  6E38               	movwf	TRI_3@j,c
  4751  0069B8  D004               	goto	l3022
  4752  0069BA                     l380:
  4753                           
  4754                           ;Trian.c: 84: PORTCbits.RC2=0;
  4755  0069BA  9482               	bcf	3970,2,c	;volatile
  4756                           
  4757                           ;Trian.c: 85: PORTAbits.RA6=0;
  4758  0069BC  9C80               	bcf	3968,6,c	;volatile
  4759  0069BE  4A38               	infsnz	TRI_3@j,f,c
  4760  0069C0  2A39               	incf	TRI_3@j+1,f,c
  4761  0069C2                     l3022:
  4762  0069C2  5039               	movf	TRI_3@j+1,w,c
  4763  0069C4  0A80               	xorlw	128
  4764  0069C6  6E09               	movwf	??_TRI_3& (0+255),c
  4765  0069C8  5036               	movf	TRI_3@k,w,c
  4766  0069CA  5C38               	subwf	TRI_3@j,w,c
  4767  0069CC  5037               	movf	TRI_3@k+1,w,c
  4768  0069CE  0A80               	xorlw	128
  4769  0069D0  5809               	subwfb	??_TRI_3& (0+255),w,c
  4770  0069D2  A0D8               	btfss	status,0,c
  4771  0069D4  D7F2               	goto	l380
  4772  0069D6  4A3A               	infsnz	TRI_3@i,f,c
  4773  0069D8  2A3B               	incf	TRI_3@i+1,f,c
  4774  0069DA  D7A3               	goto	L13
  4775  0069DC                     __end_of_TRI_3:
  4776                           	opt stack 0
  4777                           tblptru	equ	0xFF8
  4778                           tblptrh	equ	0xFF7
  4779                           tblptrl	equ	0xFF6
  4780                           tablat	equ	0xFF5
  4781                           prodh	equ	0xFF4
  4782                           prodl	equ	0xFF3
  4783                           postinc0	equ	0xFEE
  4784                           wreg	equ	0xFE8
  4785                           postinc1	equ	0xFE6
  4786                           postdec1	equ	0xFE5
  4787                           fsr1l	equ	0xFE1
  4788                           postinc2	equ	0xFDE
  4789                           postdec2	equ	0xFDD
  4790                           fsr2h	equ	0xFDA
  4791                           fsr2l	equ	0xFD9
  4792                           status	equ	0xFD8
  4793                           
  4794 ;; *************** function _TRI_2 *****************
  4795 ;; Defined at:
  4796 ;;		line 38 in file "Trian.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  valoresSeno    40   13[COMRAM] int [20]
  4801 ;;  i               2   57[COMRAM] int 
  4802 ;;  j               2   55[COMRAM] int 
  4803 ;;  k               2   53[COMRAM] int 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  2   32[COMRAM] int 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4813 ;;      Params:         0       0       0       0       0       0       0       0       0
  4814 ;;      Locals:        46       0       0       0       0       0       0       0       0
  4815 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4816 ;;      Totals:        51       0       0       0       0       0       0       0       0
  4817 ;;Total ram usage:       51 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    1
  4820 ;; This function calls:
  4821 ;;		___awdiv
  4822 ;; This function is called by:
  4823 ;;		_main
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text5
  4828  006748                     __ptext5:
  4829                           	opt stack 0
  4830  006748                     _TRI_2:
  4831                           	opt stack 29
  4832                           
  4833                           ;Trian.c: 39: OSCCON=0b01010111;
  4834                           
  4835                           ;incstack = 0
  4836  006748  0E57               	movlw	87
  4837  00674A  6ED3               	movwf	4051,c	;volatile
  4838                           
  4839                           ;Trian.c: 40: TRISAbits.RA0=0;
  4840  00674C  9092               	bcf	3986,0,c	;volatile
  4841                           
  4842                           ;Trian.c: 41: TRISCbits.RC2=0;
  4843  00674E  9494               	bcf	3988,2,c	;volatile
  4844                           
  4845                           ;Trian.c: 42: int valoresSeno [20]= {10,20,30,40,50,60,70,80,90,100,90,80,70,60,50,40,30
      +                          ,20,10,0};
  4846  006750  EE21  F050         	lfsr	2,TRI_2@F7359
  4847  006754  EE10  F00E         	lfsr	1,TRI_2@valoresSeno
  4848  006758  0E28               	movlw	40
  4849  00675A                     u2471:
  4850  00675A  CFDE FFE6          	movff	postinc2,postinc1
  4851  00675E  2EE8               	decfsz	wreg,f,c
  4852  006760  D7FC               	goto	u2471
  4853                           
  4854                           ;Trian.c: 43: int i, j,k;
  4855                           ;Trian.c: 44: for (i=0;i<20;i++){
  4856  006762  0E00               	movlw	0
  4857  006764  6E3B               	movwf	TRI_2@i+1,c
  4858  006766  0E00               	movlw	0
  4859  006768  6E3A               	movwf	TRI_2@i,c
  4860  00676A  503B               	movf	TRI_2@i+1,w,c
  4861  00676C  0A80               	xorlw	128
  4862  00676E  0F80               	addlw	-128
  4863  006770  0E14               	movlw	20
  4864  006772  B4D8               	btfsc	status,2,c
  4865  006774  5C3A               	subwf	TRI_2@i,w,c
  4866  006776  B0D8               	btfsc	status,0,c
  4867  006778  D02B               	goto	l2960
  4868                           
  4869                           ;Trian.c: 45: valoresSeno [i]=valoresSeno [i]/2;
  4870  00677A  0E0E               	movlw	low TRI_2@valoresSeno
  4871  00677C  6E09               	movwf	??_TRI_2& (0+255),c
  4872  00677E  0E00               	movlw	high TRI_2@valoresSeno
  4873  006780  6E0A               	movwf	(??_TRI_2+1)& (0+255),c
  4874  006782  90D8               	bcf	status,0,c
  4875  006784  343A               	rlcf	TRI_2@i,w,c
  4876  006786  6ED9               	movwf	fsr2l,c
  4877  006788  343B               	rlcf	TRI_2@i+1,w,c
  4878  00678A  6EDA               	movwf	fsr2h,c
  4879  00678C  5009               	movf	??_TRI_2,w,c
  4880  00678E  26D9               	addwf	fsr2l,f,c
  4881  006790  500A               	movf	??_TRI_2+1,w,c
  4882  006792  22DA               	addwfc	fsr2h,f,c
  4883  006794  CFDE F001          	movff	postinc2,___awdiv@dividend
  4884  006798  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  4885  00679C  0E00               	movlw	0
  4886  00679E  6E04               	movwf	___awdiv@divisor+1,c
  4887  0067A0  0E02               	movlw	2
  4888  0067A2  6E03               	movwf	___awdiv@divisor,c
  4889  0067A4  ECB7  F02E         	call	___awdiv	;wreg free
  4890  0067A8  0E0E               	movlw	low TRI_2@valoresSeno
  4891  0067AA  6E0B               	movwf	(??_TRI_2+2)& (0+255),c
  4892  0067AC  0E00               	movlw	high TRI_2@valoresSeno
  4893  0067AE  6E0C               	movwf	(??_TRI_2+3)& (0+255),c
  4894  0067B0  90D8               	bcf	status,0,c
  4895  0067B2  343A               	rlcf	TRI_2@i,w,c
  4896  0067B4  6ED9               	movwf	fsr2l,c
  4897  0067B6  343B               	rlcf	TRI_2@i+1,w,c
  4898  0067B8  6EDA               	movwf	fsr2h,c
  4899  0067BA  500B               	movf	??_TRI_2+2,w,c
  4900  0067BC  26D9               	addwf	fsr2l,f,c
  4901  0067BE  500C               	movf	??_TRI_2+3,w,c
  4902  0067C0  22DA               	addwfc	fsr2h,f,c
  4903  0067C2  C001  FFDE         	movff	?___awdiv,postinc2
  4904  0067C6  C002  FFDD         	movff	?___awdiv+1,postdec2
  4905  0067CA  4A3A               	infsnz	TRI_2@i,f,c
  4906  0067CC  2A3B               	incf	TRI_2@i+1,f,c
  4907  0067CE  D7CD               	goto	L14
  4908  0067D0                     l2960:
  4909                           
  4910                           ;Trian.c: 50: for (i=0;i<20;i++){
  4911  0067D0  0E00               	movlw	0
  4912  0067D2  6E3B               	movwf	TRI_2@i+1,c
  4913  0067D4  0E00               	movlw	0
  4914  0067D6  6E3A               	movwf	TRI_2@i,c
  4915  0067D8  503B               	movf	TRI_2@i+1,w,c
  4916  0067DA  0A80               	xorlw	128
  4917  0067DC  0F80               	addlw	-128
  4918  0067DE  0E14               	movlw	20
  4919  0067E0  B4D8               	btfsc	status,2,c
  4920  0067E2  5C3A               	subwf	TRI_2@i,w,c
  4921  0067E4  B0D8               	btfsc	status,0,c
  4922  0067E6  0012               	return	
  4923                           
  4924                           ;Trian.c: 51: for (j=0;j<valoresSeno[i];j++){
  4925  0067E8  0E00               	movlw	0
  4926  0067EA  6E39               	movwf	TRI_2@j+1,c
  4927  0067EC  0E00               	movlw	0
  4928  0067EE  6E38               	movwf	TRI_2@j,c
  4929  0067F0  D004               	goto	l2970
  4930  0067F2                     l359:
  4931                           
  4932                           ;Trian.c: 52: PORTCbits.RC2=1;
  4933  0067F2  8482               	bsf	3970,2,c	;volatile
  4934                           
  4935                           ;Trian.c: 53: PORTAbits.RA6=1;
  4936  0067F4  8C80               	bsf	3968,6,c	;volatile
  4937  0067F6  4A38               	infsnz	TRI_2@j,f,c
  4938  0067F8  2A39               	incf	TRI_2@j+1,f,c
  4939  0067FA                     l2970:
  4940  0067FA  0E0E               	movlw	low TRI_2@valoresSeno
  4941  0067FC  6E09               	movwf	??_TRI_2& (0+255),c
  4942  0067FE  0E00               	movlw	high TRI_2@valoresSeno
  4943  006800  6E0A               	movwf	(??_TRI_2+1)& (0+255),c
  4944  006802  90D8               	bcf	status,0,c
  4945  006804  343A               	rlcf	TRI_2@i,w,c
  4946  006806  6ED9               	movwf	fsr2l,c
  4947  006808  343B               	rlcf	TRI_2@i+1,w,c
  4948  00680A  6EDA               	movwf	fsr2h,c
  4949  00680C  5009               	movf	??_TRI_2,w,c
  4950  00680E  26D9               	addwf	fsr2l,f,c
  4951  006810  500A               	movf	??_TRI_2+1,w,c
  4952  006812  22DA               	addwfc	fsr2h,f,c
  4953  006814  CFDE F00B          	movff	postinc2,??_TRI_2+2
  4954  006818  CFDD F00C          	movff	postdec2,??_TRI_2+3
  4955  00681C  5039               	movf	TRI_2@j+1,w,c
  4956  00681E  0A80               	xorlw	128
  4957  006820  6E0D               	movwf	(??_TRI_2+4)& (0+255),c
  4958  006822  500B               	movf	??_TRI_2+2,w,c
  4959  006824  5C38               	subwf	TRI_2@j,w,c
  4960  006826  500C               	movf	??_TRI_2+3,w,c
  4961  006828  0A80               	xorlw	128
  4962  00682A  580D               	subwfb	(??_TRI_2+4)& (0+255),w,c
  4963  00682C  A0D8               	btfss	status,0,c
  4964  00682E  D7E1               	goto	l359
  4965                           
  4966                           ;Trian.c: 54: }
  4967                           ;Trian.c: 55: k=100/2-valoresSeno[i];
  4968  006830  0E0E               	movlw	low TRI_2@valoresSeno
  4969  006832  6E09               	movwf	??_TRI_2& (0+255),c
  4970  006834  0E00               	movlw	high TRI_2@valoresSeno
  4971  006836  6E0A               	movwf	(??_TRI_2+1)& (0+255),c
  4972  006838  90D8               	bcf	status,0,c
  4973  00683A  343A               	rlcf	TRI_2@i,w,c
  4974  00683C  6ED9               	movwf	fsr2l,c
  4975  00683E  343B               	rlcf	TRI_2@i+1,w,c
  4976  006840  6EDA               	movwf	fsr2h,c
  4977  006842  5009               	movf	??_TRI_2,w,c
  4978  006844  26D9               	addwf	fsr2l,f,c
  4979  006846  500A               	movf	??_TRI_2+1,w,c
  4980  006848  22DA               	addwfc	fsr2h,f,c
  4981  00684A  CFDE F00B          	movff	postinc2,??_TRI_2+2
  4982  00684E  CFDD F00C          	movff	postdec2,??_TRI_2+3
  4983  006852  1E0B               	comf	??_TRI_2+2,f,c
  4984  006854  1E0C               	comf	??_TRI_2+3,f,c
  4985  006856  4A0B               	infsnz	??_TRI_2+2,f,c
  4986  006858  2A0C               	incf	??_TRI_2+3,f,c
  4987  00685A  0E32               	movlw	50
  4988  00685C  240B               	addwf	??_TRI_2+2,w,c
  4989  00685E  6E36               	movwf	TRI_2@k,c
  4990  006860  0E00               	movlw	0
  4991  006862  200C               	addwfc	??_TRI_2+3,w,c
  4992  006864  6E37               	movwf	TRI_2@k+1,c
  4993                           
  4994                           ;Trian.c: 56: for (j=0;j<k;j++){
  4995  006866  0E00               	movlw	0
  4996  006868  6E39               	movwf	TRI_2@j+1,c
  4997  00686A  0E00               	movlw	0
  4998  00686C  6E38               	movwf	TRI_2@j,c
  4999  00686E  D004               	goto	l2978
  5000  006870                     l362:
  5001                           
  5002                           ;Trian.c: 57: PORTCbits.RC2=0;
  5003  006870  9482               	bcf	3970,2,c	;volatile
  5004                           
  5005                           ;Trian.c: 58: PORTAbits.RA6=0;
  5006  006872  9C80               	bcf	3968,6,c	;volatile
  5007  006874  4A38               	infsnz	TRI_2@j,f,c
  5008  006876  2A39               	incf	TRI_2@j+1,f,c
  5009  006878                     l2978:
  5010  006878  5039               	movf	TRI_2@j+1,w,c
  5011  00687A  0A80               	xorlw	128
  5012  00687C  6E09               	movwf	??_TRI_2& (0+255),c
  5013  00687E  5036               	movf	TRI_2@k,w,c
  5014  006880  5C38               	subwf	TRI_2@j,w,c
  5015  006882  5037               	movf	TRI_2@k+1,w,c
  5016  006884  0A80               	xorlw	128
  5017  006886  5809               	subwfb	??_TRI_2& (0+255),w,c
  5018  006888  A0D8               	btfss	status,0,c
  5019  00688A  D7F2               	goto	l362
  5020  00688C  4A3A               	infsnz	TRI_2@i,f,c
  5021  00688E  2A3B               	incf	TRI_2@i+1,f,c
  5022  006890  D7A3               	goto	L15
  5023  006892                     __end_of_TRI_2:
  5024                           	opt stack 0
  5025                           tblptru	equ	0xFF8
  5026                           tblptrh	equ	0xFF7
  5027                           tblptrl	equ	0xFF6
  5028                           tablat	equ	0xFF5
  5029                           prodh	equ	0xFF4
  5030                           prodl	equ	0xFF3
  5031                           postinc0	equ	0xFEE
  5032                           wreg	equ	0xFE8
  5033                           postinc1	equ	0xFE6
  5034                           postdec1	equ	0xFE5
  5035                           fsr1l	equ	0xFE1
  5036                           postinc2	equ	0xFDE
  5037                           postdec2	equ	0xFDD
  5038                           fsr2h	equ	0xFDA
  5039                           fsr2l	equ	0xFD9
  5040                           status	equ	0xFD8
  5041                           
  5042 ;; *************** function ___awdiv *****************
  5043 ;; Defined at:
  5044 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/awdiv.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  dividend        2    0[COMRAM] int 
  5047 ;;  divisor         2    2[COMRAM] int 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  quotient        2    6[COMRAM] int 
  5050 ;;  sign            1    5[COMRAM] unsigned char 
  5051 ;;  counter         1    4[COMRAM] unsigned char 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  2    0[COMRAM] int 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0, prodl
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5061 ;;      Params:         4       0       0       0       0       0       0       0       0
  5062 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5064 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5065 ;;Total ram usage:        8 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_TRI_2
  5071 ;;		_TRI_3
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text6
  5076  005D6E                     __ptext6:
  5077                           	opt stack 0
  5078  005D6E                     ___awdiv:
  5079                           	opt stack 29
  5080                           
  5081                           ;incstack = 0
  5082  005D6E  0E00               	movlw	0
  5083  005D70  6E06               	movwf	___awdiv@sign,c
  5084  005D72  5004               	movf	___awdiv@divisor+1,w,c
  5085  005D74  0A80               	xorlw	128
  5086  005D76  6EF3               	movwf	prodl,c
  5087  005D78  0E80               	movlw	128
  5088  005D7A  5CF3               	subwf	prodl,w,c
  5089  005D7C  0E00               	movlw	0
  5090  005D7E  B4D8               	btfsc	status,2,c
  5091  005D80  5C03               	subwf	___awdiv@divisor,w,c
  5092  005D82  B0D8               	btfsc	status,0,c
  5093  005D84  D006               	goto	l2534
  5094  005D86  6C03               	negf	___awdiv@divisor,c
  5095  005D88  1E04               	comf	___awdiv@divisor+1,f,c
  5096  005D8A  B0D8               	btfsc	status,0,c
  5097  005D8C  2A04               	incf	___awdiv@divisor+1,f,c
  5098  005D8E  0E01               	movlw	1
  5099  005D90  6E06               	movwf	___awdiv@sign,c
  5100  005D92                     l2534:
  5101  005D92  5002               	movf	___awdiv@dividend+1,w,c
  5102  005D94  0A80               	xorlw	128
  5103  005D96  6EF3               	movwf	prodl,c
  5104  005D98  0E80               	movlw	128
  5105  005D9A  5CF3               	subwf	prodl,w,c
  5106  005D9C  0E00               	movlw	0
  5107  005D9E  B4D8               	btfsc	status,2,c
  5108  005DA0  5C01               	subwf	___awdiv@dividend,w,c
  5109  005DA2  B0D8               	btfsc	status,0,c
  5110  005DA4  D006               	goto	l2540
  5111  005DA6  6C01               	negf	___awdiv@dividend,c
  5112  005DA8  1E02               	comf	___awdiv@dividend+1,f,c
  5113  005DAA  B0D8               	btfsc	status,0,c
  5114  005DAC  2A02               	incf	___awdiv@dividend+1,f,c
  5115  005DAE  0E01               	movlw	1
  5116  005DB0  1A06               	xorwf	___awdiv@sign,f,c
  5117  005DB2                     l2540:
  5118  005DB2  0E00               	movlw	0
  5119  005DB4  6E08               	movwf	___awdiv@quotient+1,c
  5120  005DB6  0E00               	movlw	0
  5121  005DB8  6E07               	movwf	___awdiv@quotient,c
  5122  005DBA  5004               	movf	___awdiv@divisor+1,w,c
  5123  005DBC  1003               	iorwf	___awdiv@divisor,w,c
  5124  005DBE  B4D8               	btfsc	status,2,c
  5125  005DC0  D01C               	goto	l2562
  5126  005DC2  0E01               	movlw	1
  5127  005DC4  6E05               	movwf	___awdiv@counter,c
  5128  005DC6  D004               	goto	l2548
  5129  005DC8                     l2546:
  5130  005DC8  90D8               	bcf	status,0,c
  5131  005DCA  3603               	rlcf	___awdiv@divisor,f,c
  5132  005DCC  3604               	rlcf	___awdiv@divisor+1,f,c
  5133  005DCE  2A05               	incf	___awdiv@counter,f,c
  5134  005DD0                     l2548:
  5135  005DD0  AE04               	btfss	___awdiv@divisor+1,7,c
  5136  005DD2  D7FA               	goto	l2546
  5137  005DD4                     l2550:
  5138  005DD4  90D8               	bcf	status,0,c
  5139  005DD6  3607               	rlcf	___awdiv@quotient,f,c
  5140  005DD8  3608               	rlcf	___awdiv@quotient+1,f,c
  5141  005DDA  5003               	movf	___awdiv@divisor,w,c
  5142  005DDC  5C01               	subwf	___awdiv@dividend,w,c
  5143  005DDE  5004               	movf	___awdiv@divisor+1,w,c
  5144  005DE0  5802               	subwfb	___awdiv@dividend+1,w,c
  5145  005DE2  A0D8               	btfss	status,0,c
  5146  005DE4  D005               	goto	l2558
  5147  005DE6  5003               	movf	___awdiv@divisor,w,c
  5148  005DE8  5E01               	subwf	___awdiv@dividend,f,c
  5149  005DEA  5004               	movf	___awdiv@divisor+1,w,c
  5150  005DEC  5A02               	subwfb	___awdiv@dividend+1,f,c
  5151  005DEE  8007               	bsf	___awdiv@quotient,0,c
  5152  005DF0                     l2558:
  5153  005DF0  90D8               	bcf	status,0,c
  5154  005DF2  3204               	rrcf	___awdiv@divisor+1,f,c
  5155  005DF4  3203               	rrcf	___awdiv@divisor,f,c
  5156  005DF6  2E05               	decfsz	___awdiv@counter,f,c
  5157  005DF8  D7ED               	goto	l2550
  5158  005DFA                     l2562:
  5159  005DFA  5006               	movf	___awdiv@sign,w,c
  5160  005DFC  B4D8               	btfsc	status,2,c
  5161  005DFE  D004               	goto	l2566
  5162  005E00  6C07               	negf	___awdiv@quotient,c
  5163  005E02  1E08               	comf	___awdiv@quotient+1,f,c
  5164  005E04  B0D8               	btfsc	status,0,c
  5165  005E06  2A08               	incf	___awdiv@quotient+1,f,c
  5166  005E08                     l2566:
  5167  005E08  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5168  005E0C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5169  005E10  0012               	return	
  5170  005E12                     __end_of___awdiv:
  5171                           	opt stack 0
  5172                           tblptru	equ	0xFF8
  5173                           tblptrh	equ	0xFF7
  5174                           tblptrl	equ	0xFF6
  5175                           tablat	equ	0xFF5
  5176                           prodh	equ	0xFF4
  5177                           prodl	equ	0xFF3
  5178                           postinc0	equ	0xFEE
  5179                           wreg	equ	0xFE8
  5180                           postinc1	equ	0xFE6
  5181                           postdec1	equ	0xFE5
  5182                           fsr1l	equ	0xFE1
  5183                           postinc2	equ	0xFDE
  5184                           postdec2	equ	0xFDD
  5185                           fsr2h	equ	0xFDA
  5186                           fsr2l	equ	0xFD9
  5187                           status	equ	0xFD8
  5188                           
  5189 ;; *************** function _TRI_1 *****************
  5190 ;; Defined at:
  5191 ;;		line 11 in file "Trian.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;		None
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  valoresSeno    40    5[COMRAM] int [20]
  5196 ;;  i               2   49[COMRAM] int 
  5197 ;;  j               2   47[COMRAM] int 
  5198 ;;  k               2   45[COMRAM] int 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  2   30[COMRAM] int 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5208 ;;      Params:         0       0       0       0       0       0       0       0       0
  5209 ;;      Locals:        46       0       0       0       0       0       0       0       0
  5210 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5211 ;;      Totals:        51       0       0       0       0       0       0       0       0
  5212 ;;Total ram usage:       51 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_main
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text7
  5222  0061D8                     __ptext7:
  5223                           	opt stack 0
  5224  0061D8                     _TRI_1:
  5225                           	opt stack 30
  5226                           
  5227                           ;Trian.c: 12: OSCCON=0b01010111;
  5228                           
  5229                           ;incstack = 0
  5230  0061D8  0E57               	movlw	87
  5231  0061DA  6ED3               	movwf	4051,c	;volatile
  5232                           
  5233                           ;Trian.c: 13: TRISAbits.RA6=0;
  5234  0061DC  9C92               	bcf	3986,6,c	;volatile
  5235                           
  5236                           ;Trian.c: 14: TRISCbits.RC2=0;
  5237  0061DE  9494               	bcf	3988,2,c	;volatile
  5238                           
  5239                           ;Trian.c: 15: int valoresSeno [20]= {10,20,30,40,50,60,70,80,90,100,90,80,70,60,50,40,30
      +                          ,20,10,0};
  5240  0061E0  EE21  F028         	lfsr	2,TRI_1@F7354
  5241  0061E4  EE10  F006         	lfsr	1,TRI_1@valoresSeno
  5242  0061E8  0E28               	movlw	40
  5243  0061EA                     u2401:
  5244  0061EA  CFDE FFE6          	movff	postinc2,postinc1
  5245  0061EE  2EE8               	decfsz	wreg,f,c
  5246  0061F0  D7FC               	goto	u2401
  5247                           
  5248                           ;Trian.c: 16: int i, j,k;
  5249                           ;Trian.c: 17: for (i=0;i<20;i++){
  5250  0061F2  0E00               	movlw	0
  5251  0061F4  6E33               	movwf	TRI_1@i+1,c
  5252  0061F6  0E00               	movlw	0
  5253  0061F8  6E32               	movwf	TRI_1@i,c
  5254  0061FA  5033               	movf	TRI_1@i+1,w,c
  5255  0061FC  0A80               	xorlw	128
  5256  0061FE  0F80               	addlw	-128
  5257  006200  0E14               	movlw	20
  5258  006202  B4D8               	btfsc	status,2,c
  5259  006204  5C32               	subwf	TRI_1@i,w,c
  5260  006206  B0D8               	btfsc	status,0,c
  5261  006208  D003               	goto	l2916
  5262  00620A  4A32               	infsnz	TRI_1@i,f,c
  5263  00620C  2A33               	incf	TRI_1@i+1,f,c
  5264  00620E  D7F5               	goto	L16
  5265  006210                     l2916:
  5266                           
  5267                           ;Trian.c: 23: for (i=0;i<20;i++){
  5268  006210  0E00               	movlw	0
  5269  006212  6E33               	movwf	TRI_1@i+1,c
  5270  006214  0E00               	movlw	0
  5271  006216  6E32               	movwf	TRI_1@i,c
  5272  006218  5033               	movf	TRI_1@i+1,w,c
  5273  00621A  0A80               	xorlw	128
  5274  00621C  0F80               	addlw	-128
  5275  00621E  0E14               	movlw	20
  5276  006220  B4D8               	btfsc	status,2,c
  5277  006222  5C32               	subwf	TRI_1@i,w,c
  5278  006224  B0D8               	btfsc	status,0,c
  5279  006226  0012               	return	
  5280                           
  5281                           ;Trian.c: 24: for (j=0;j<valoresSeno[i];j++){
  5282  006228  0E00               	movlw	0
  5283  00622A  6E31               	movwf	TRI_1@j+1,c
  5284  00622C  0E00               	movlw	0
  5285  00622E  6E30               	movwf	TRI_1@j,c
  5286  006230  D004               	goto	l2926
  5287  006232                     l341:
  5288                           
  5289                           ;Trian.c: 25: PORTCbits.RC2=1;
  5290  006232  8482               	bsf	3970,2,c	;volatile
  5291                           
  5292                           ;Trian.c: 26: PORTAbits.RA6=1;
  5293  006234  8C80               	bsf	3968,6,c	;volatile
  5294  006236  4A30               	infsnz	TRI_1@j,f,c
  5295  006238  2A31               	incf	TRI_1@j+1,f,c
  5296  00623A                     l2926:
  5297  00623A  0E06               	movlw	low TRI_1@valoresSeno
  5298  00623C  6E01               	movwf	??_TRI_1& (0+255),c
  5299  00623E  0E00               	movlw	high TRI_1@valoresSeno
  5300  006240  6E02               	movwf	(??_TRI_1+1)& (0+255),c
  5301  006242  90D8               	bcf	status,0,c
  5302  006244  3432               	rlcf	TRI_1@i,w,c
  5303  006246  6ED9               	movwf	fsr2l,c
  5304  006248  3433               	rlcf	TRI_1@i+1,w,c
  5305  00624A  6EDA               	movwf	fsr2h,c
  5306  00624C  5001               	movf	??_TRI_1,w,c
  5307  00624E  26D9               	addwf	fsr2l,f,c
  5308  006250  5002               	movf	??_TRI_1+1,w,c
  5309  006252  22DA               	addwfc	fsr2h,f,c
  5310  006254  CFDE F003          	movff	postinc2,??_TRI_1+2
  5311  006258  CFDD F004          	movff	postdec2,??_TRI_1+3
  5312  00625C  5031               	movf	TRI_1@j+1,w,c
  5313  00625E  0A80               	xorlw	128
  5314  006260  6E05               	movwf	(??_TRI_1+4)& (0+255),c
  5315  006262  5003               	movf	??_TRI_1+2,w,c
  5316  006264  5C30               	subwf	TRI_1@j,w,c
  5317  006266  5004               	movf	??_TRI_1+3,w,c
  5318  006268  0A80               	xorlw	128
  5319  00626A  5805               	subwfb	(??_TRI_1+4)& (0+255),w,c
  5320  00626C  A0D8               	btfss	status,0,c
  5321  00626E  D7E1               	goto	l341
  5322                           
  5323                           ;Trian.c: 27: }
  5324                           ;Trian.c: 28: k=100-valoresSeno[i];
  5325  006270  0E06               	movlw	low TRI_1@valoresSeno
  5326  006272  6E01               	movwf	??_TRI_1& (0+255),c
  5327  006274  0E00               	movlw	high TRI_1@valoresSeno
  5328  006276  6E02               	movwf	(??_TRI_1+1)& (0+255),c
  5329  006278  90D8               	bcf	status,0,c
  5330  00627A  3432               	rlcf	TRI_1@i,w,c
  5331  00627C  6ED9               	movwf	fsr2l,c
  5332  00627E  3433               	rlcf	TRI_1@i+1,w,c
  5333  006280  6EDA               	movwf	fsr2h,c
  5334  006282  5001               	movf	??_TRI_1,w,c
  5335  006284  26D9               	addwf	fsr2l,f,c
  5336  006286  5002               	movf	??_TRI_1+1,w,c
  5337  006288  22DA               	addwfc	fsr2h,f,c
  5338  00628A  CFDE F003          	movff	postinc2,??_TRI_1+2
  5339  00628E  CFDD F004          	movff	postdec2,??_TRI_1+3
  5340  006292  1E03               	comf	??_TRI_1+2,f,c
  5341  006294  1E04               	comf	??_TRI_1+3,f,c
  5342  006296  4A03               	infsnz	??_TRI_1+2,f,c
  5343  006298  2A04               	incf	??_TRI_1+3,f,c
  5344  00629A  0E64               	movlw	100
  5345  00629C  2403               	addwf	??_TRI_1+2,w,c
  5346  00629E  6E2E               	movwf	TRI_1@k,c
  5347  0062A0  0E00               	movlw	0
  5348  0062A2  2004               	addwfc	??_TRI_1+3,w,c
  5349  0062A4  6E2F               	movwf	TRI_1@k+1,c
  5350                           
  5351                           ;Trian.c: 29: for (j=0;j<k;j++){
  5352  0062A6  0E00               	movlw	0
  5353  0062A8  6E31               	movwf	TRI_1@j+1,c
  5354  0062AA  0E00               	movlw	0
  5355  0062AC  6E30               	movwf	TRI_1@j,c
  5356  0062AE  D004               	goto	l2934
  5357  0062B0                     l344:
  5358                           
  5359                           ;Trian.c: 30: PORTCbits.RC2=0;
  5360  0062B0  9482               	bcf	3970,2,c	;volatile
  5361                           
  5362                           ;Trian.c: 31: PORTAbits.RA6=0;
  5363  0062B2  9C80               	bcf	3968,6,c	;volatile
  5364  0062B4  4A30               	infsnz	TRI_1@j,f,c
  5365  0062B6  2A31               	incf	TRI_1@j+1,f,c
  5366  0062B8                     l2934:
  5367  0062B8  5031               	movf	TRI_1@j+1,w,c
  5368  0062BA  0A80               	xorlw	128
  5369  0062BC  6E01               	movwf	??_TRI_1& (0+255),c
  5370  0062BE  502E               	movf	TRI_1@k,w,c
  5371  0062C0  5C30               	subwf	TRI_1@j,w,c
  5372  0062C2  502F               	movf	TRI_1@k+1,w,c
  5373  0062C4  0A80               	xorlw	128
  5374  0062C6  5801               	subwfb	??_TRI_1& (0+255),w,c
  5375  0062C8  A0D8               	btfss	status,0,c
  5376  0062CA  D7F2               	goto	l344
  5377  0062CC  4A32               	infsnz	TRI_1@i,f,c
  5378  0062CE  2A33               	incf	TRI_1@i+1,f,c
  5379  0062D0  D7A3               	goto	L17
  5380  0062D2                     __end_of_TRI_1:
  5381                           	opt stack 0
  5382                           tblptru	equ	0xFF8
  5383                           tblptrh	equ	0xFF7
  5384                           tblptrl	equ	0xFF6
  5385                           tablat	equ	0xFF5
  5386                           prodh	equ	0xFF4
  5387                           prodl	equ	0xFF3
  5388                           postinc0	equ	0xFEE
  5389                           wreg	equ	0xFE8
  5390                           postinc1	equ	0xFE6
  5391                           postdec1	equ	0xFE5
  5392                           fsr1l	equ	0xFE1
  5393                           postinc2	equ	0xFDE
  5394                           postdec2	equ	0xFDD
  5395                           fsr2h	equ	0xFDA
  5396                           fsr2l	equ	0xFD9
  5397                           status	equ	0xFD8
  5398                           
  5399 ;; *************** function _SENO_3 *****************
  5400 ;; Defined at:
  5401 ;;		line 64 in file "SENO.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;		None
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  valoresSeno    30    5[COMRAM] int [15]
  5406 ;;  i               2   39[COMRAM] int 
  5407 ;;  j               2   37[COMRAM] int 
  5408 ;;  k               2   35[COMRAM] int 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;		None               void
  5411 ;; Registers used:
  5412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0
  5419 ;;      Locals:        36       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5421 ;;      Totals:        41       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:       41 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_main
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	text8
  5432  0060DE                     __ptext8:
  5433                           	opt stack 0
  5434  0060DE                     _SENO_3:
  5435                           	opt stack 30
  5436                           
  5437                           ;SENO.c: 65: OSCCON=0b01010111;
  5438                           
  5439                           ;incstack = 0
  5440  0060DE  0E57               	movlw	87
  5441  0060E0  6ED3               	movwf	4051,c	;volatile
  5442                           
  5443                           ;SENO.c: 66: TRISAbits.RA6=0;
  5444  0060E2  9C92               	bcf	3986,6,c	;volatile
  5445                           
  5446                           ;SENO.c: 67: TRISCbits.RC2=0;
  5447  0060E4  9494               	bcf	3988,2,c	;volatile
  5448                           
  5449                           ;SENO.c: 68: int valoresSeno [15]= {50,70,87,98,100,93,79,60,40,21,7,0,2,13,30};
  5450  0060E6  EE20  F084         	lfsr	2,SENO_3@F7364
  5451  0060EA  EE10  F006         	lfsr	1,SENO_3@valoresSeno
  5452  0060EE  0E1E               	movlw	30
  5453  0060F0                     u2331:
  5454  0060F0  CFDE FFE6          	movff	postinc2,postinc1
  5455  0060F4  2EE8               	decfsz	wreg,f,c
  5456  0060F6  D7FC               	goto	u2331
  5457                           
  5458                           ;SENO.c: 69: int i, j,k;
  5459                           ;SENO.c: 70: for (i=0;i<15;i++){
  5460  0060F8  0E00               	movlw	0
  5461  0060FA  6E29               	movwf	SENO_3@i+1,c
  5462  0060FC  0E00               	movlw	0
  5463  0060FE  6E28               	movwf	SENO_3@i,c
  5464  006100  5029               	movf	SENO_3@i+1,w,c
  5465  006102  0A80               	xorlw	128
  5466  006104  0F80               	addlw	-128
  5467  006106  0E0F               	movlw	15
  5468  006108  B4D8               	btfsc	status,2,c
  5469  00610A  5C28               	subwf	SENO_3@i,w,c
  5470  00610C  B0D8               	btfsc	status,0,c
  5471  00610E  D003               	goto	l2874
  5472  006110  4A28               	infsnz	SENO_3@i,f,c
  5473  006112  2A29               	incf	SENO_3@i+1,f,c
  5474  006114  D7F5               	goto	L18
  5475  006116                     l2874:
  5476                           
  5477                           ;SENO.c: 74: for (i=0;i<15;i++){
  5478  006116  0E00               	movlw	0
  5479  006118  6E29               	movwf	SENO_3@i+1,c
  5480  00611A  0E00               	movlw	0
  5481  00611C  6E28               	movwf	SENO_3@i,c
  5482  00611E  5029               	movf	SENO_3@i+1,w,c
  5483  006120  0A80               	xorlw	128
  5484  006122  0F80               	addlw	-128
  5485  006124  0E0F               	movlw	15
  5486  006126  B4D8               	btfsc	status,2,c
  5487  006128  5C28               	subwf	SENO_3@i,w,c
  5488  00612A  B0D8               	btfsc	status,0,c
  5489  00612C  0012               	return	
  5490                           
  5491                           ;SENO.c: 75: for (j=0;j<valoresSeno[i];j++){
  5492  00612E  0E00               	movlw	0
  5493  006130  6E27               	movwf	SENO_3@j+1,c
  5494  006132  0E00               	movlw	0
  5495  006134  6E26               	movwf	SENO_3@j,c
  5496  006136  D004               	goto	l2884
  5497  006138                     l313:
  5498                           
  5499                           ;SENO.c: 76: PORTCbits.RC2=1;
  5500  006138  8482               	bsf	3970,2,c	;volatile
  5501                           
  5502                           ;SENO.c: 77: PORTAbits.RA6=1;
  5503  00613A  8C80               	bsf	3968,6,c	;volatile
  5504  00613C  4A26               	infsnz	SENO_3@j,f,c
  5505  00613E  2A27               	incf	SENO_3@j+1,f,c
  5506  006140                     l2884:
  5507  006140  0E06               	movlw	low SENO_3@valoresSeno
  5508  006142  6E01               	movwf	??_SENO_3& (0+255),c
  5509  006144  0E00               	movlw	high SENO_3@valoresSeno
  5510  006146  6E02               	movwf	(??_SENO_3+1)& (0+255),c
  5511  006148  90D8               	bcf	status,0,c
  5512  00614A  3428               	rlcf	SENO_3@i,w,c
  5513  00614C  6ED9               	movwf	fsr2l,c
  5514  00614E  3429               	rlcf	SENO_3@i+1,w,c
  5515  006150  6EDA               	movwf	fsr2h,c
  5516  006152  5001               	movf	??_SENO_3,w,c
  5517  006154  26D9               	addwf	fsr2l,f,c
  5518  006156  5002               	movf	??_SENO_3+1,w,c
  5519  006158  22DA               	addwfc	fsr2h,f,c
  5520  00615A  CFDE F003          	movff	postinc2,??_SENO_3+2
  5521  00615E  CFDD F004          	movff	postdec2,??_SENO_3+3
  5522  006162  5027               	movf	SENO_3@j+1,w,c
  5523  006164  0A80               	xorlw	128
  5524  006166  6E05               	movwf	(??_SENO_3+4)& (0+255),c
  5525  006168  5003               	movf	??_SENO_3+2,w,c
  5526  00616A  5C26               	subwf	SENO_3@j,w,c
  5527  00616C  5004               	movf	??_SENO_3+3,w,c
  5528  00616E  0A80               	xorlw	128
  5529  006170  5805               	subwfb	(??_SENO_3+4)& (0+255),w,c
  5530  006172  A0D8               	btfss	status,0,c
  5531  006174  D7E1               	goto	l313
  5532                           
  5533                           ;SENO.c: 78: }
  5534                           ;SENO.c: 79: k=100-valoresSeno[i];
  5535  006176  0E06               	movlw	low SENO_3@valoresSeno
  5536  006178  6E01               	movwf	??_SENO_3& (0+255),c
  5537  00617A  0E00               	movlw	high SENO_3@valoresSeno
  5538  00617C  6E02               	movwf	(??_SENO_3+1)& (0+255),c
  5539  00617E  90D8               	bcf	status,0,c
  5540  006180  3428               	rlcf	SENO_3@i,w,c
  5541  006182  6ED9               	movwf	fsr2l,c
  5542  006184  3429               	rlcf	SENO_3@i+1,w,c
  5543  006186  6EDA               	movwf	fsr2h,c
  5544  006188  5001               	movf	??_SENO_3,w,c
  5545  00618A  26D9               	addwf	fsr2l,f,c
  5546  00618C  5002               	movf	??_SENO_3+1,w,c
  5547  00618E  22DA               	addwfc	fsr2h,f,c
  5548  006190  CFDE F003          	movff	postinc2,??_SENO_3+2
  5549  006194  CFDD F004          	movff	postdec2,??_SENO_3+3
  5550  006198  1E03               	comf	??_SENO_3+2,f,c
  5551  00619A  1E04               	comf	??_SENO_3+3,f,c
  5552  00619C  4A03               	infsnz	??_SENO_3+2,f,c
  5553  00619E  2A04               	incf	??_SENO_3+3,f,c
  5554  0061A0  0E64               	movlw	100
  5555  0061A2  2403               	addwf	??_SENO_3+2,w,c
  5556  0061A4  6E24               	movwf	SENO_3@k,c
  5557  0061A6  0E00               	movlw	0
  5558  0061A8  2004               	addwfc	??_SENO_3+3,w,c
  5559  0061AA  6E25               	movwf	SENO_3@k+1,c
  5560                           
  5561                           ;SENO.c: 80: for (j=0;j<k;j++){
  5562  0061AC  0E00               	movlw	0
  5563  0061AE  6E27               	movwf	SENO_3@j+1,c
  5564  0061B0  0E00               	movlw	0
  5565  0061B2  6E26               	movwf	SENO_3@j,c
  5566  0061B4  D004               	goto	l2892
  5567  0061B6                     l316:
  5568                           
  5569                           ;SENO.c: 81: PORTCbits.RC2=0;
  5570  0061B6  9482               	bcf	3970,2,c	;volatile
  5571                           
  5572                           ;SENO.c: 82: PORTAbits.RA6=0;
  5573  0061B8  9C80               	bcf	3968,6,c	;volatile
  5574  0061BA  4A26               	infsnz	SENO_3@j,f,c
  5575  0061BC  2A27               	incf	SENO_3@j+1,f,c
  5576  0061BE                     l2892:
  5577  0061BE  5027               	movf	SENO_3@j+1,w,c
  5578  0061C0  0A80               	xorlw	128
  5579  0061C2  6E01               	movwf	??_SENO_3& (0+255),c
  5580  0061C4  5024               	movf	SENO_3@k,w,c
  5581  0061C6  5C26               	subwf	SENO_3@j,w,c
  5582  0061C8  5025               	movf	SENO_3@k+1,w,c
  5583  0061CA  0A80               	xorlw	128
  5584  0061CC  5801               	subwfb	??_SENO_3& (0+255),w,c
  5585  0061CE  A0D8               	btfss	status,0,c
  5586  0061D0  D7F2               	goto	l316
  5587  0061D2  4A28               	infsnz	SENO_3@i,f,c
  5588  0061D4  2A29               	incf	SENO_3@i+1,f,c
  5589  0061D6  D7A3               	goto	L19
  5590  0061D8                     __end_of_SENO_3:
  5591                           	opt stack 0
  5592                           tblptru	equ	0xFF8
  5593                           tblptrh	equ	0xFF7
  5594                           tblptrl	equ	0xFF6
  5595                           tablat	equ	0xFF5
  5596                           prodh	equ	0xFF4
  5597                           prodl	equ	0xFF3
  5598                           postinc0	equ	0xFEE
  5599                           wreg	equ	0xFE8
  5600                           postinc1	equ	0xFE6
  5601                           postdec1	equ	0xFE5
  5602                           fsr1l	equ	0xFE1
  5603                           postinc2	equ	0xFDE
  5604                           postdec2	equ	0xFDD
  5605                           fsr2h	equ	0xFDA
  5606                           fsr2l	equ	0xFD9
  5607                           status	equ	0xFD8
  5608                           
  5609 ;; *************** function _SENO_2 *****************
  5610 ;; Defined at:
  5611 ;;		line 38 in file "SENO.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;		None
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  valoresSeno    36    5[COMRAM] int [18]
  5616 ;;  i               2   45[COMRAM] int 
  5617 ;;  j               2   43[COMRAM] int 
  5618 ;;  k               2   41[COMRAM] int 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;		None               void
  5621 ;; Registers used:
  5622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5628 ;;      Params:         0       0       0       0       0       0       0       0       0
  5629 ;;      Locals:        42       0       0       0       0       0       0       0       0
  5630 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5631 ;;      Totals:        47       0       0       0       0       0       0       0       0
  5632 ;;Total ram usage:       47 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_main
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text9
  5642  005EEE                     __ptext9:
  5643                           	opt stack 0
  5644  005EEE                     _SENO_2:
  5645                           	opt stack 30
  5646                           
  5647                           ;SENO.c: 40: TRISAbits.RA6=0;
  5648                           
  5649                           ;incstack = 0
  5650  005EEE  9C92               	bcf	3986,6,c	;volatile
  5651                           
  5652                           ;SENO.c: 41: TRISCbits.RC2=0;
  5653  005EF0  9494               	bcf	3988,2,c	;volatile
  5654                           
  5655                           ;SENO.c: 42: int valoresSeno [18]= {50,67,82,93,99,99,93,82,67,50,33,18,7,1,1,7,18,33};
  5656  005EF2  EE20  F060         	lfsr	2,SENO_2@F7359
  5657  005EF6  EE10  F006         	lfsr	1,SENO_2@valoresSeno
  5658  005EFA  0E24               	movlw	36
  5659  005EFC                     u2261:
  5660  005EFC  CFDE FFE6          	movff	postinc2,postinc1
  5661  005F00  2EE8               	decfsz	wreg,f,c
  5662  005F02  D7FC               	goto	u2261
  5663                           
  5664                           ;SENO.c: 43: int i, j,k;
  5665                           ;SENO.c: 44: for (i=0;i<18;i++){
  5666  005F04  0E00               	movlw	0
  5667  005F06  6E2F               	movwf	SENO_2@i+1,c
  5668  005F08  0E00               	movlw	0
  5669  005F0A  6E2E               	movwf	SENO_2@i,c
  5670  005F0C  502F               	movf	SENO_2@i+1,w,c
  5671  005F0E  0A80               	xorlw	128
  5672  005F10  0F80               	addlw	-128
  5673  005F12  0E12               	movlw	18
  5674  005F14  B4D8               	btfsc	status,2,c
  5675  005F16  5C2E               	subwf	SENO_2@i,w,c
  5676  005F18  B0D8               	btfsc	status,0,c
  5677  005F1A  D003               	goto	l2832
  5678  005F1C  4A2E               	infsnz	SENO_2@i,f,c
  5679  005F1E  2A2F               	incf	SENO_2@i+1,f,c
  5680  005F20  D7F5               	goto	L20
  5681  005F22                     l2832:
  5682                           
  5683                           ;SENO.c: 48: for (i=0;i<18;i++){
  5684  005F22  0E00               	movlw	0
  5685  005F24  6E2F               	movwf	SENO_2@i+1,c
  5686  005F26  0E00               	movlw	0
  5687  005F28  6E2E               	movwf	SENO_2@i,c
  5688  005F2A  502F               	movf	SENO_2@i+1,w,c
  5689  005F2C  0A80               	xorlw	128
  5690  005F2E  0F80               	addlw	-128
  5691  005F30  0E12               	movlw	18
  5692  005F32  B4D8               	btfsc	status,2,c
  5693  005F34  5C2E               	subwf	SENO_2@i,w,c
  5694  005F36  B0D8               	btfsc	status,0,c
  5695  005F38  0012               	return	
  5696                           
  5697                           ;SENO.c: 49: for (j=0;j<valoresSeno[i];j++){
  5698  005F3A  0E00               	movlw	0
  5699  005F3C  6E2D               	movwf	SENO_2@j+1,c
  5700  005F3E  0E00               	movlw	0
  5701  005F40  6E2C               	movwf	SENO_2@j,c
  5702  005F42  D004               	goto	l2842
  5703  005F44                     l295:
  5704                           
  5705                           ;SENO.c: 50: PORTCbits.RC2=1;
  5706  005F44  8482               	bsf	3970,2,c	;volatile
  5707                           
  5708                           ;SENO.c: 51: PORTAbits.RA6=1;
  5709  005F46  8C80               	bsf	3968,6,c	;volatile
  5710  005F48  4A2C               	infsnz	SENO_2@j,f,c
  5711  005F4A  2A2D               	incf	SENO_2@j+1,f,c
  5712  005F4C                     l2842:
  5713  005F4C  0E06               	movlw	low SENO_2@valoresSeno
  5714  005F4E  6E01               	movwf	??_SENO_2& (0+255),c
  5715  005F50  0E00               	movlw	high SENO_2@valoresSeno
  5716  005F52  6E02               	movwf	(??_SENO_2+1)& (0+255),c
  5717  005F54  90D8               	bcf	status,0,c
  5718  005F56  342E               	rlcf	SENO_2@i,w,c
  5719  005F58  6ED9               	movwf	fsr2l,c
  5720  005F5A  342F               	rlcf	SENO_2@i+1,w,c
  5721  005F5C  6EDA               	movwf	fsr2h,c
  5722  005F5E  5001               	movf	??_SENO_2,w,c
  5723  005F60  26D9               	addwf	fsr2l,f,c
  5724  005F62  5002               	movf	??_SENO_2+1,w,c
  5725  005F64  22DA               	addwfc	fsr2h,f,c
  5726  005F66  CFDE F003          	movff	postinc2,??_SENO_2+2
  5727  005F6A  CFDD F004          	movff	postdec2,??_SENO_2+3
  5728  005F6E  502D               	movf	SENO_2@j+1,w,c
  5729  005F70  0A80               	xorlw	128
  5730  005F72  6E05               	movwf	(??_SENO_2+4)& (0+255),c
  5731  005F74  5003               	movf	??_SENO_2+2,w,c
  5732  005F76  5C2C               	subwf	SENO_2@j,w,c
  5733  005F78  5004               	movf	??_SENO_2+3,w,c
  5734  005F7A  0A80               	xorlw	128
  5735  005F7C  5805               	subwfb	(??_SENO_2+4)& (0+255),w,c
  5736  005F7E  A0D8               	btfss	status,0,c
  5737  005F80  D7E1               	goto	l295
  5738                           
  5739                           ;SENO.c: 52: }
  5740                           ;SENO.c: 53: k=100-valoresSeno[i];
  5741  005F82  0E06               	movlw	low SENO_2@valoresSeno
  5742  005F84  6E01               	movwf	??_SENO_2& (0+255),c
  5743  005F86  0E00               	movlw	high SENO_2@valoresSeno
  5744  005F88  6E02               	movwf	(??_SENO_2+1)& (0+255),c
  5745  005F8A  90D8               	bcf	status,0,c
  5746  005F8C  342E               	rlcf	SENO_2@i,w,c
  5747  005F8E  6ED9               	movwf	fsr2l,c
  5748  005F90  342F               	rlcf	SENO_2@i+1,w,c
  5749  005F92  6EDA               	movwf	fsr2h,c
  5750  005F94  5001               	movf	??_SENO_2,w,c
  5751  005F96  26D9               	addwf	fsr2l,f,c
  5752  005F98  5002               	movf	??_SENO_2+1,w,c
  5753  005F9A  22DA               	addwfc	fsr2h,f,c
  5754  005F9C  CFDE F003          	movff	postinc2,??_SENO_2+2
  5755  005FA0  CFDD F004          	movff	postdec2,??_SENO_2+3
  5756  005FA4  1E03               	comf	??_SENO_2+2,f,c
  5757  005FA6  1E04               	comf	??_SENO_2+3,f,c
  5758  005FA8  4A03               	infsnz	??_SENO_2+2,f,c
  5759  005FAA  2A04               	incf	??_SENO_2+3,f,c
  5760  005FAC  0E64               	movlw	100
  5761  005FAE  2403               	addwf	??_SENO_2+2,w,c
  5762  005FB0  6E2A               	movwf	SENO_2@k,c
  5763  005FB2  0E00               	movlw	0
  5764  005FB4  2004               	addwfc	??_SENO_2+3,w,c
  5765  005FB6  6E2B               	movwf	SENO_2@k+1,c
  5766                           
  5767                           ;SENO.c: 54: for (j=0;j<k;j++){
  5768  005FB8  0E00               	movlw	0
  5769  005FBA  6E2D               	movwf	SENO_2@j+1,c
  5770  005FBC  0E00               	movlw	0
  5771  005FBE  6E2C               	movwf	SENO_2@j,c
  5772  005FC0  D004               	goto	l2850
  5773  005FC2                     l298:
  5774                           
  5775                           ;SENO.c: 55: PORTCbits.RC2=0;
  5776  005FC2  9482               	bcf	3970,2,c	;volatile
  5777                           
  5778                           ;SENO.c: 56: PORTAbits.RA6=0;
  5779  005FC4  9C80               	bcf	3968,6,c	;volatile
  5780  005FC6  4A2C               	infsnz	SENO_2@j,f,c
  5781  005FC8  2A2D               	incf	SENO_2@j+1,f,c
  5782  005FCA                     l2850:
  5783  005FCA  502D               	movf	SENO_2@j+1,w,c
  5784  005FCC  0A80               	xorlw	128
  5785  005FCE  6E01               	movwf	??_SENO_2& (0+255),c
  5786  005FD0  502A               	movf	SENO_2@k,w,c
  5787  005FD2  5C2C               	subwf	SENO_2@j,w,c
  5788  005FD4  502B               	movf	SENO_2@k+1,w,c
  5789  005FD6  0A80               	xorlw	128
  5790  005FD8  5801               	subwfb	??_SENO_2& (0+255),w,c
  5791  005FDA  A0D8               	btfss	status,0,c
  5792  005FDC  D7F2               	goto	l298
  5793  005FDE  4A2E               	infsnz	SENO_2@i,f,c
  5794  005FE0  2A2F               	incf	SENO_2@i+1,f,c
  5795  005FE2  D7A3               	goto	L21
  5796  005FE4                     __end_of_SENO_2:
  5797                           	opt stack 0
  5798                           tblptru	equ	0xFF8
  5799                           tblptrh	equ	0xFF7
  5800                           tblptrl	equ	0xFF6
  5801                           tablat	equ	0xFF5
  5802                           prodh	equ	0xFF4
  5803                           prodl	equ	0xFF3
  5804                           postinc0	equ	0xFEE
  5805                           wreg	equ	0xFE8
  5806                           postinc1	equ	0xFE6
  5807                           postdec1	equ	0xFE5
  5808                           fsr1l	equ	0xFE1
  5809                           postinc2	equ	0xFDE
  5810                           postdec2	equ	0xFDD
  5811                           fsr2h	equ	0xFDA
  5812                           fsr2l	equ	0xFD9
  5813                           status	equ	0xFD8
  5814                           
  5815 ;; *************** function _SENO_1 *****************
  5816 ;; Defined at:
  5817 ;;		line 11 in file "SENO.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;		None
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  valoresSeno    40    5[COMRAM] int [20]
  5822 ;;  i               2   49[COMRAM] int 
  5823 ;;  j               2   47[COMRAM] int 
  5824 ;;  k               2   45[COMRAM] int 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;		None               void
  5827 ;; Registers used:
  5828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0
  5835 ;;      Locals:        46       0       0       0       0       0       0       0       0
  5836 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5837 ;;      Totals:        51       0       0       0       0       0       0       0       0
  5838 ;;Total ram usage:       51 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_main
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text10
  5848  005FE4                     __ptext10:
  5849                           	opt stack 0
  5850  005FE4                     _SENO_1:
  5851                           	opt stack 30
  5852                           
  5853                           ;SENO.c: 12: OSCCON=0b01010111;
  5854                           
  5855                           ;incstack = 0
  5856  005FE4  0E57               	movlw	87
  5857  005FE6  6ED3               	movwf	4051,c	;volatile
  5858                           
  5859                           ;SENO.c: 13: TRISAbits.RA6=0;
  5860  005FE8  9C92               	bcf	3986,6,c	;volatile
  5861                           
  5862                           ;SENO.c: 14: TRISCbits.RC2=0;
  5863  005FEA  9494               	bcf	3988,2,c	;volatile
  5864                           
  5865                           ;SENO.c: 15: int valoresSeno [20]= {50,35,21,10, 2, 0, 2,10, 21, 35, 50, 65, 79, 90, 98,
  5866                           ;SENO.c: 16: 100, 98, 90, 79, 65};
  5867  005FEC  EE21  F000         	lfsr	2,SENO_1@F7354
  5868  005FF0  EE10  F006         	lfsr	1,SENO_1@valoresSeno
  5869  005FF4  0E28               	movlw	40
  5870  005FF6                     u2191:
  5871  005FF6  CFDE FFE6          	movff	postinc2,postinc1
  5872  005FFA  2EE8               	decfsz	wreg,f,c
  5873  005FFC  D7FC               	goto	u2191
  5874                           
  5875                           ;SENO.c: 17: int i, j,k;
  5876                           ;SENO.c: 18: for (i=0;i<20;i++){
  5877  005FFE  0E00               	movlw	0
  5878  006000  6E33               	movwf	SENO_1@i+1,c
  5879  006002  0E00               	movlw	0
  5880  006004  6E32               	movwf	SENO_1@i,c
  5881  006006  5033               	movf	SENO_1@i+1,w,c
  5882  006008  0A80               	xorlw	128
  5883  00600A  0F80               	addlw	-128
  5884  00600C  0E14               	movlw	20
  5885  00600E  B4D8               	btfsc	status,2,c
  5886  006010  5C32               	subwf	SENO_1@i,w,c
  5887  006012  B0D8               	btfsc	status,0,c
  5888  006014  D003               	goto	l2794
  5889  006016  4A32               	infsnz	SENO_1@i,f,c
  5890  006018  2A33               	incf	SENO_1@i+1,f,c
  5891  00601A  D7F5               	goto	L22
  5892  00601C                     l2794:
  5893                           
  5894                           ;SENO.c: 22: for (i=0;i<20;i++){
  5895  00601C  0E00               	movlw	0
  5896  00601E  6E33               	movwf	SENO_1@i+1,c
  5897  006020  0E00               	movlw	0
  5898  006022  6E32               	movwf	SENO_1@i,c
  5899  006024  5033               	movf	SENO_1@i+1,w,c
  5900  006026  0A80               	xorlw	128
  5901  006028  0F80               	addlw	-128
  5902  00602A  0E14               	movlw	20
  5903  00602C  B4D8               	btfsc	status,2,c
  5904  00602E  5C32               	subwf	SENO_1@i,w,c
  5905  006030  B0D8               	btfsc	status,0,c
  5906  006032  0012               	return	
  5907                           
  5908                           ;SENO.c: 23: for (j=0;j<valoresSeno[i];j++){
  5909  006034  0E00               	movlw	0
  5910  006036  6E31               	movwf	SENO_1@j+1,c
  5911  006038  0E00               	movlw	0
  5912  00603A  6E30               	movwf	SENO_1@j,c
  5913  00603C  D004               	goto	l2804
  5914  00603E                     l277:
  5915                           
  5916                           ;SENO.c: 24: PORTCbits.RC2=1;
  5917  00603E  8482               	bsf	3970,2,c	;volatile
  5918                           
  5919                           ;SENO.c: 25: PORTAbits.RA6=1;
  5920  006040  8C80               	bsf	3968,6,c	;volatile
  5921  006042  4A30               	infsnz	SENO_1@j,f,c
  5922  006044  2A31               	incf	SENO_1@j+1,f,c
  5923  006046                     l2804:
  5924  006046  0E06               	movlw	low SENO_1@valoresSeno
  5925  006048  6E01               	movwf	??_SENO_1& (0+255),c
  5926  00604A  0E00               	movlw	high SENO_1@valoresSeno
  5927  00604C  6E02               	movwf	(??_SENO_1+1)& (0+255),c
  5928  00604E  90D8               	bcf	status,0,c
  5929  006050  3432               	rlcf	SENO_1@i,w,c
  5930  006052  6ED9               	movwf	fsr2l,c
  5931  006054  3433               	rlcf	SENO_1@i+1,w,c
  5932  006056  6EDA               	movwf	fsr2h,c
  5933  006058  5001               	movf	??_SENO_1,w,c
  5934  00605A  26D9               	addwf	fsr2l,f,c
  5935  00605C  5002               	movf	??_SENO_1+1,w,c
  5936  00605E  22DA               	addwfc	fsr2h,f,c
  5937  006060  CFDE F003          	movff	postinc2,??_SENO_1+2
  5938  006064  CFDD F004          	movff	postdec2,??_SENO_1+3
  5939  006068  5031               	movf	SENO_1@j+1,w,c
  5940  00606A  0A80               	xorlw	128
  5941  00606C  6E05               	movwf	(??_SENO_1+4)& (0+255),c
  5942  00606E  5003               	movf	??_SENO_1+2,w,c
  5943  006070  5C30               	subwf	SENO_1@j,w,c
  5944  006072  5004               	movf	??_SENO_1+3,w,c
  5945  006074  0A80               	xorlw	128
  5946  006076  5805               	subwfb	(??_SENO_1+4)& (0+255),w,c
  5947  006078  A0D8               	btfss	status,0,c
  5948  00607A  D7E1               	goto	l277
  5949                           
  5950                           ;SENO.c: 26: }
  5951                           ;SENO.c: 27: k=100-valoresSeno[i];
  5952  00607C  0E06               	movlw	low SENO_1@valoresSeno
  5953  00607E  6E01               	movwf	??_SENO_1& (0+255),c
  5954  006080  0E00               	movlw	high SENO_1@valoresSeno
  5955  006082  6E02               	movwf	(??_SENO_1+1)& (0+255),c
  5956  006084  90D8               	bcf	status,0,c
  5957  006086  3432               	rlcf	SENO_1@i,w,c
  5958  006088  6ED9               	movwf	fsr2l,c
  5959  00608A  3433               	rlcf	SENO_1@i+1,w,c
  5960  00608C  6EDA               	movwf	fsr2h,c
  5961  00608E  5001               	movf	??_SENO_1,w,c
  5962  006090  26D9               	addwf	fsr2l,f,c
  5963  006092  5002               	movf	??_SENO_1+1,w,c
  5964  006094  22DA               	addwfc	fsr2h,f,c
  5965  006096  CFDE F003          	movff	postinc2,??_SENO_1+2
  5966  00609A  CFDD F004          	movff	postdec2,??_SENO_1+3
  5967  00609E  1E03               	comf	??_SENO_1+2,f,c
  5968  0060A0  1E04               	comf	??_SENO_1+3,f,c
  5969  0060A2  4A03               	infsnz	??_SENO_1+2,f,c
  5970  0060A4  2A04               	incf	??_SENO_1+3,f,c
  5971  0060A6  0E64               	movlw	100
  5972  0060A8  2403               	addwf	??_SENO_1+2,w,c
  5973  0060AA  6E2E               	movwf	SENO_1@k,c
  5974  0060AC  0E00               	movlw	0
  5975  0060AE  2004               	addwfc	??_SENO_1+3,w,c
  5976  0060B0  6E2F               	movwf	SENO_1@k+1,c
  5977                           
  5978                           ;SENO.c: 28: for (j=0;j<k;j++){
  5979  0060B2  0E00               	movlw	0
  5980  0060B4  6E31               	movwf	SENO_1@j+1,c
  5981  0060B6  0E00               	movlw	0
  5982  0060B8  6E30               	movwf	SENO_1@j,c
  5983  0060BA  D004               	goto	l2812
  5984  0060BC                     l280:
  5985                           
  5986                           ;SENO.c: 29: PORTCbits.RC2=0;
  5987  0060BC  9482               	bcf	3970,2,c	;volatile
  5988                           
  5989                           ;SENO.c: 30: PORTAbits.RA6=0;
  5990  0060BE  9C80               	bcf	3968,6,c	;volatile
  5991  0060C0  4A30               	infsnz	SENO_1@j,f,c
  5992  0060C2  2A31               	incf	SENO_1@j+1,f,c
  5993  0060C4                     l2812:
  5994  0060C4  5031               	movf	SENO_1@j+1,w,c
  5995  0060C6  0A80               	xorlw	128
  5996  0060C8  6E01               	movwf	??_SENO_1& (0+255),c
  5997  0060CA  502E               	movf	SENO_1@k,w,c
  5998  0060CC  5C30               	subwf	SENO_1@j,w,c
  5999  0060CE  502F               	movf	SENO_1@k+1,w,c
  6000  0060D0  0A80               	xorlw	128
  6001  0060D2  5801               	subwfb	??_SENO_1& (0+255),w,c
  6002  0060D4  A0D8               	btfss	status,0,c
  6003  0060D6  D7F2               	goto	l280
  6004  0060D8  4A32               	infsnz	SENO_1@i,f,c
  6005  0060DA  2A33               	incf	SENO_1@i+1,f,c
  6006  0060DC  D7A3               	goto	L23
  6007  0060DE                     __end_of_SENO_1:
  6008                           	opt stack 0
  6009                           tblptru	equ	0xFF8
  6010                           tblptrh	equ	0xFF7
  6011                           tblptrl	equ	0xFF6
  6012                           tablat	equ	0xFF5
  6013                           prodh	equ	0xFF4
  6014                           prodl	equ	0xFF3
  6015                           postinc0	equ	0xFEE
  6016                           wreg	equ	0xFE8
  6017                           postinc1	equ	0xFE6
  6018                           postdec1	equ	0xFE5
  6019                           fsr1l	equ	0xFE1
  6020                           postinc2	equ	0xFDE
  6021                           postdec2	equ	0xFDD
  6022                           fsr2h	equ	0xFDA
  6023                           fsr2l	equ	0xFD9
  6024                           status	equ	0xFD8
  6025                           
  6026 ;; *************** function _PWM_generar *****************
  6027 ;; Defined at:
  6028 ;;		line 9 in file "PWM.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  ciclo           2   13[COMRAM] unsigned int 
  6031 ;;  frecuencia      2   15[COMRAM] unsigned int 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  AuxCCPR2L       4   29[COMRAM] unsigned long 
  6034 ;;  PR2cal          4   25[COMRAM] unsigned long 
  6035 ;;  AuxCCP2CON      2   23[COMRAM] unsigned int 
  6036 ;;  prescalador     2   21[COMRAM] unsigned int 
  6037 ;; Return value:  Size  Location     Type
  6038 ;;		None               void
  6039 ;; Registers used:
  6040 ;;		wreg, status,2, status,0, cstack
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6046 ;;      Params:         4       0       0       0       0       0       0       0       0
  6047 ;;      Locals:        12       0       0       0       0       0       0       0       0
  6048 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6049 ;;      Totals:        20       0       0       0       0       0       0       0       0
  6050 ;;Total ram usage:       20 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; Hardware stack levels required when called:    1
  6053 ;; This function calls:
  6054 ;;		___lldiv
  6055 ;;		___lmul
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text11
  6062  006BB4                     __ptext11:
  6063                           	opt stack 0
  6064  006BB4                     _PWM_generar:
  6065                           	opt stack 29
  6066                           
  6067                           ;PWM.c: 16: TRISCbits.RC1=0;
  6068                           
  6069                           ;incstack = 0
  6070  006BB4  9294               	bcf	3988,1,c	;volatile
  6071                           
  6072                           ;PWM.c: 18: unsigned int prescalador=1;
  6073  006BB6  0E00               	movlw	0
  6074  006BB8  6E17               	movwf	PWM_generar@prescalador+1,c
  6075  006BBA  0E01               	movlw	1
  6076  006BBC  6E16               	movwf	PWM_generar@prescalador,c
  6077                           
  6078                           ;PWM.c: 19: unsigned long PR2cal=4000000;
  6079  006BBE  0E00               	movlw	0
  6080  006BC0  6E1A               	movwf	PWM_generar@PR2cal,c
  6081  006BC2  0E09               	movlw	9
  6082  006BC4  6E1B               	movwf	PWM_generar@PR2cal+1,c
  6083  006BC6  0E3D               	movlw	61
  6084  006BC8  6E1C               	movwf	PWM_generar@PR2cal+2,c
  6085  006BCA  0E00               	movlw	0
  6086  006BCC  6E1D               	movwf	PWM_generar@PR2cal+3,c
  6087                           
  6088                           ;PWM.c: 20: PR2cal=PR2cal/frecuencia;
  6089  006BCE  C01A  F001         	movff	PWM_generar@PR2cal,___lldiv@dividend
  6090  006BD2  C01B  F002         	movff	PWM_generar@PR2cal+1,___lldiv@dividend+1
  6091  006BD6  C01C  F003         	movff	PWM_generar@PR2cal+2,___lldiv@dividend+2
  6092  006BDA  C01D  F004         	movff	PWM_generar@PR2cal+3,___lldiv@dividend+3
  6093  006BDE  C010  F005         	movff	PWM_generar@frecuencia,___lldiv@divisor
  6094  006BE2  C011  F006         	movff	PWM_generar@frecuencia+1,___lldiv@divisor+1
  6095  006BE6  6A07               	clrf	___lldiv@divisor+2,c
  6096  006BE8  6A08               	clrf	___lldiv@divisor+3,c
  6097  006BEA  ECDF  F02D         	call	___lldiv	;wreg free
  6098  006BEE  C001  F01A         	movff	?___lldiv,PWM_generar@PR2cal
  6099  006BF2  C002  F01B         	movff	?___lldiv+1,PWM_generar@PR2cal+1
  6100  006BF6  C003  F01C         	movff	?___lldiv+2,PWM_generar@PR2cal+2
  6101  006BFA  C004  F01D         	movff	?___lldiv+3,PWM_generar@PR2cal+3
  6102                           
  6103                           ;PWM.c: 21: PR2cal=PR2cal/4;
  6104  006BFE  C01A  F012         	movff	PWM_generar@PR2cal,??_PWM_generar
  6105  006C02  C01B  F013         	movff	PWM_generar@PR2cal+1,??_PWM_generar+1
  6106  006C06  C01C  F014         	movff	PWM_generar@PR2cal+2,??_PWM_generar+2
  6107  006C0A  C01D  F015         	movff	PWM_generar@PR2cal+3,??_PWM_generar+3
  6108  006C0E  0E03               	movlw	3
  6109  006C10  D005               	goto	u2140
  6110  006C12                     u2145:
  6111  006C12  90D8               	bcf	status,0,c
  6112  006C14  3215               	rrcf	??_PWM_generar+3,f,c
  6113  006C16  3214               	rrcf	??_PWM_generar+2,f,c
  6114  006C18  3213               	rrcf	??_PWM_generar+1,f,c
  6115  006C1A  3212               	rrcf	??_PWM_generar,f,c
  6116  006C1C                     u2140:
  6117  006C1C  2EE8               	decfsz	wreg,f,c
  6118  006C1E  D7F9               	goto	u2145
  6119  006C20  C012  F01A         	movff	??_PWM_generar,PWM_generar@PR2cal
  6120  006C24  C013  F01B         	movff	??_PWM_generar+1,PWM_generar@PR2cal+1
  6121  006C28  C014  F01C         	movff	??_PWM_generar+2,PWM_generar@PR2cal+2
  6122  006C2C  C015  F01D         	movff	??_PWM_generar+3,PWM_generar@PR2cal+3
  6123                           
  6124                           ;PWM.c: 22: T2CON=0b00000000;
  6125  006C30  0E00               	movlw	0
  6126  006C32  6EBA               	movwf	4026,c	;volatile
  6127                           
  6128                           ;PWM.c: 23: while(PR2cal>256){
  6129  006C34  D028               	goto	l2746
  6130  006C36                     l2742:
  6131                           
  6132                           ;PWM.c: 24: prescalador=prescalador*4;
  6133  006C36  C016  F012         	movff	PWM_generar@prescalador,??_PWM_generar
  6134  006C3A  C017  F013         	movff	PWM_generar@prescalador+1,??_PWM_generar+1
  6135  006C3E  90D8               	bcf	status,0,c
  6136  006C40  3612               	rlcf	??_PWM_generar,f,c
  6137  006C42  3613               	rlcf	??_PWM_generar+1,f,c
  6138  006C44  90D8               	bcf	status,0,c
  6139  006C46  3612               	rlcf	??_PWM_generar,f,c
  6140  006C48  3613               	rlcf	??_PWM_generar+1,f,c
  6141  006C4A  C012  F016         	movff	??_PWM_generar,PWM_generar@prescalador
  6142  006C4E  C013  F017         	movff	??_PWM_generar+1,PWM_generar@prescalador+1
  6143                           
  6144                           ;PWM.c: 25: T2CON++;
  6145  006C52  2ABA               	incf	4026,f,c	;volatile
  6146                           
  6147                           ;PWM.c: 26: PR2cal=PR2cal/4;
  6148  006C54  C01A  F012         	movff	PWM_generar@PR2cal,??_PWM_generar
  6149  006C58  C01B  F013         	movff	PWM_generar@PR2cal+1,??_PWM_generar+1
  6150  006C5C  C01C  F014         	movff	PWM_generar@PR2cal+2,??_PWM_generar+2
  6151  006C60  C01D  F015         	movff	PWM_generar@PR2cal+3,??_PWM_generar+3
  6152  006C64  0E03               	movlw	3
  6153  006C66  D005               	goto	u2150
  6154  006C68                     u2155:
  6155  006C68  90D8               	bcf	status,0,c
  6156  006C6A  3215               	rrcf	??_PWM_generar+3,f,c
  6157  006C6C  3214               	rrcf	??_PWM_generar+2,f,c
  6158  006C6E  3213               	rrcf	??_PWM_generar+1,f,c
  6159  006C70  3212               	rrcf	??_PWM_generar,f,c
  6160  006C72                     u2150:
  6161  006C72  2EE8               	decfsz	wreg,f,c
  6162  006C74  D7F9               	goto	u2155
  6163  006C76  C012  F01A         	movff	??_PWM_generar,PWM_generar@PR2cal
  6164  006C7A  C013  F01B         	movff	??_PWM_generar+1,PWM_generar@PR2cal+1
  6165  006C7E  C014  F01C         	movff	??_PWM_generar+2,PWM_generar@PR2cal+2
  6166  006C82  C015  F01D         	movff	??_PWM_generar+3,PWM_generar@PR2cal+3
  6167  006C86                     l2746:
  6168  006C86  0E01               	movlw	1
  6169  006C88  6E12               	movwf	??_PWM_generar& (0+255),c
  6170  006C8A  0E01               	movlw	1
  6171  006C8C  6E13               	movwf	(??_PWM_generar+1)& (0+255),c
  6172  006C8E  0E00               	movlw	0
  6173  006C90  6E14               	movwf	(??_PWM_generar+2)& (0+255),c
  6174  006C92  0E00               	movlw	0
  6175  006C94  6E15               	movwf	(??_PWM_generar+3)& (0+255),c
  6176  006C96  5012               	movf	??_PWM_generar,w,c
  6177  006C98  5C1A               	subwf	PWM_generar@PR2cal,w,c
  6178  006C9A  5013               	movf	??_PWM_generar+1,w,c
  6179  006C9C  581B               	subwfb	PWM_generar@PR2cal+1,w,c
  6180  006C9E  5014               	movf	??_PWM_generar+2,w,c
  6181  006CA0  581C               	subwfb	PWM_generar@PR2cal+2,w,c
  6182  006CA2  5015               	movf	??_PWM_generar+3,w,c
  6183  006CA4  581D               	subwfb	PWM_generar@PR2cal+3,w,c
  6184  006CA6  B0D8               	btfsc	status,0,c
  6185  006CA8  D7C6               	goto	l2742
  6186                           
  6187                           ;PWM.c: 27: }
  6188                           ;PWM.c: 28: PR2cal--;
  6189  006CAA  061A               	decf	PWM_generar@PR2cal,f,c
  6190  006CAC  0E00               	movlw	0
  6191  006CAE  5A1B               	subwfb	PWM_generar@PR2cal+1,f,c
  6192  006CB0  5A1C               	subwfb	PWM_generar@PR2cal+2,f,c
  6193  006CB2  5A1D               	subwfb	PWM_generar@PR2cal+3,f,c
  6194                           
  6195                           ;PWM.c: 29: PR2=PR2cal;
  6196  006CB4  C01A  FFBB         	movff	PWM_generar@PR2cal,4027	;volatile
  6197                           
  6198                           ;PWM.c: 36: unsigned long AuxCCPR2L=PR2cal;
  6199  006CB8  C01A  F01E         	movff	PWM_generar@PR2cal,PWM_generar@AuxCCPR2L
  6200  006CBC  C01B  F01F         	movff	PWM_generar@PR2cal+1,PWM_generar@AuxCCPR2L+1
  6201  006CC0  C01C  F020         	movff	PWM_generar@PR2cal+2,PWM_generar@AuxCCPR2L+2
  6202  006CC4  C01D  F021         	movff	PWM_generar@PR2cal+3,PWM_generar@AuxCCPR2L+3
  6203                           
  6204                           ;PWM.c: 37: AuxCCPR2L++;
  6205  006CC8  0E01               	movlw	1
  6206  006CCA  261E               	addwf	PWM_generar@AuxCCPR2L,f,c
  6207  006CCC  0E00               	movlw	0
  6208  006CCE  221F               	addwfc	PWM_generar@AuxCCPR2L+1,f,c
  6209  006CD0  2220               	addwfc	PWM_generar@AuxCCPR2L+2,f,c
  6210  006CD2  2221               	addwfc	PWM_generar@AuxCCPR2L+3,f,c
  6211                           
  6212                           ;PWM.c: 38: AuxCCPR2L=AuxCCPR2L*ciclo;
  6213  006CD4  C00E  F001         	movff	PWM_generar@ciclo,___lmul@multiplier
  6214  006CD8  C00F  F002         	movff	PWM_generar@ciclo+1,___lmul@multiplier+1
  6215  006CDC  6A03               	clrf	___lmul@multiplier+2,c
  6216  006CDE  6A04               	clrf	___lmul@multiplier+3,c
  6217  006CE0  C01E  F005         	movff	PWM_generar@AuxCCPR2L,___lmul@multiplicand
  6218  006CE4  C01F  F006         	movff	PWM_generar@AuxCCPR2L+1,___lmul@multiplicand+1
  6219  006CE8  C020  F007         	movff	PWM_generar@AuxCCPR2L+2,___lmul@multiplicand+2
  6220  006CEC  C021  F008         	movff	PWM_generar@AuxCCPR2L+3,___lmul@multiplicand+3
  6221  006CF0  EC1E  F02D         	call	___lmul	;wreg free
  6222  006CF4  C001  F01E         	movff	?___lmul,PWM_generar@AuxCCPR2L
  6223  006CF8  C002  F01F         	movff	?___lmul+1,PWM_generar@AuxCCPR2L+1
  6224  006CFC  C003  F020         	movff	?___lmul+2,PWM_generar@AuxCCPR2L+2
  6225  006D00  C004  F021         	movff	?___lmul+3,PWM_generar@AuxCCPR2L+3
  6226                           
  6227                           ;PWM.c: 39: AuxCCPR2L=AuxCCPR2L*4;
  6228  006D04  C01E  F012         	movff	PWM_generar@AuxCCPR2L,??_PWM_generar
  6229  006D08  C01F  F013         	movff	PWM_generar@AuxCCPR2L+1,??_PWM_generar+1
  6230  006D0C  C020  F014         	movff	PWM_generar@AuxCCPR2L+2,??_PWM_generar+2
  6231  006D10  C021  F015         	movff	PWM_generar@AuxCCPR2L+3,??_PWM_generar+3
  6232  006D14  0E02               	movlw	2
  6233  006D16                     u2175:
  6234  006D16  90D8               	bcf	status,0,c
  6235  006D18  3612               	rlcf	??_PWM_generar,f,c
  6236  006D1A  3613               	rlcf	??_PWM_generar+1,f,c
  6237  006D1C  3614               	rlcf	??_PWM_generar+2,f,c
  6238  006D1E  3615               	rlcf	??_PWM_generar+3,f,c
  6239  006D20  2EE8               	decfsz	wreg,f,c
  6240  006D22  D7F9               	goto	u2175
  6241  006D24  C012  F01E         	movff	??_PWM_generar,PWM_generar@AuxCCPR2L
  6242  006D28  C013  F01F         	movff	??_PWM_generar+1,PWM_generar@AuxCCPR2L+1
  6243  006D2C  C014  F020         	movff	??_PWM_generar+2,PWM_generar@AuxCCPR2L+2
  6244  006D30  C015  F021         	movff	??_PWM_generar+3,PWM_generar@AuxCCPR2L+3
  6245                           
  6246                           ;PWM.c: 40: AuxCCPR2L=AuxCCPR2L/100;
  6247  006D34  C01E  F001         	movff	PWM_generar@AuxCCPR2L,___lldiv@dividend
  6248  006D38  C01F  F002         	movff	PWM_generar@AuxCCPR2L+1,___lldiv@dividend+1
  6249  006D3C  C020  F003         	movff	PWM_generar@AuxCCPR2L+2,___lldiv@dividend+2
  6250  006D40  C021  F004         	movff	PWM_generar@AuxCCPR2L+3,___lldiv@dividend+3
  6251  006D44  0E64               	movlw	100
  6252  006D46  6E05               	movwf	___lldiv@divisor,c
  6253  006D48  0E00               	movlw	0
  6254  006D4A  6E06               	movwf	___lldiv@divisor+1,c
  6255  006D4C  0E00               	movlw	0
  6256  006D4E  6E07               	movwf	___lldiv@divisor+2,c
  6257  006D50  0E00               	movlw	0
  6258  006D52  6E08               	movwf	___lldiv@divisor+3,c
  6259  006D54  ECDF  F02D         	call	___lldiv	;wreg free
  6260  006D58  C001  F01E         	movff	?___lldiv,PWM_generar@AuxCCPR2L
  6261  006D5C  C002  F01F         	movff	?___lldiv+1,PWM_generar@AuxCCPR2L+1
  6262  006D60  C003  F020         	movff	?___lldiv+2,PWM_generar@AuxCCPR2L+2
  6263  006D64  C004  F021         	movff	?___lldiv+3,PWM_generar@AuxCCPR2L+3
  6264                           
  6265                           ;PWM.c: 41: unsigned int AuxCCP2CON= AuxCCPR2L;
  6266  006D68  C01E  F018         	movff	PWM_generar@AuxCCPR2L,PWM_generar@AuxCCP2CON
  6267  006D6C  C01F  F019         	movff	PWM_generar@AuxCCPR2L+1,PWM_generar@AuxCCP2CON+1
  6268                           
  6269                           ;PWM.c: 42: AuxCCP2CON= AuxCCP2CON & 0b00000011 ;
  6270  006D70  0E03               	movlw	3
  6271  006D72  1418               	andwf	PWM_generar@AuxCCP2CON,w,c
  6272  006D74  6E18               	movwf	PWM_generar@AuxCCP2CON,c
  6273  006D76  6A19               	clrf	PWM_generar@AuxCCP2CON+1,c
  6274                           
  6275                           ;PWM.c: 43: AuxCCP2CON= AuxCCP2CON*16;
  6276  006D78  C018  F012         	movff	PWM_generar@AuxCCP2CON,??_PWM_generar
  6277  006D7C  C019  F013         	movff	PWM_generar@AuxCCP2CON+1,??_PWM_generar+1
  6278  006D80  3A12               	swapf	??_PWM_generar,f,c
  6279  006D82  3A13               	swapf	??_PWM_generar+1,f,c
  6280  006D84  0EF0               	movlw	240
  6281  006D86  1613               	andwf	??_PWM_generar+1,f,c
  6282  006D88  5012               	movf	??_PWM_generar,w,c
  6283  006D8A  0B0F               	andlw	15
  6284  006D8C  1213               	iorwf	??_PWM_generar+1,f,c
  6285  006D8E  0EF0               	movlw	240
  6286  006D90  1612               	andwf	??_PWM_generar,f,c
  6287  006D92  C012  F018         	movff	??_PWM_generar,PWM_generar@AuxCCP2CON
  6288  006D96  C013  F019         	movff	??_PWM_generar+1,PWM_generar@AuxCCP2CON+1
  6289                           
  6290                           ;PWM.c: 44: CCP2CON= 0b00001100;
  6291  006D9A  0E0C               	movlw	12
  6292  006D9C  6E97               	movwf	3991,c	;volatile
  6293                           
  6294                           ;PWM.c: 45: CCP2CON= CCP2CON|AuxCCP2CON;
  6295  006D9E  5097               	movf	3991,w,c
  6296  006DA0  1018               	iorwf	PWM_generar@AuxCCP2CON,w,c
  6297  006DA2  6E97               	movwf	3991,c	;volatile
  6298                           
  6299                           ;PWM.c: 46: AuxCCPR2L=AuxCCPR2L/4;
  6300  006DA4  C01E  F012         	movff	PWM_generar@AuxCCPR2L,??_PWM_generar
  6301  006DA8  C01F  F013         	movff	PWM_generar@AuxCCPR2L+1,??_PWM_generar+1
  6302  006DAC  C020  F014         	movff	PWM_generar@AuxCCPR2L+2,??_PWM_generar+2
  6303  006DB0  C021  F015         	movff	PWM_generar@AuxCCPR2L+3,??_PWM_generar+3
  6304  006DB4  0E03               	movlw	3
  6305  006DB6  D005               	goto	u2180
  6306  006DB8                     u2185:
  6307  006DB8  90D8               	bcf	status,0,c
  6308  006DBA  3215               	rrcf	??_PWM_generar+3,f,c
  6309  006DBC  3214               	rrcf	??_PWM_generar+2,f,c
  6310  006DBE  3213               	rrcf	??_PWM_generar+1,f,c
  6311  006DC0  3212               	rrcf	??_PWM_generar,f,c
  6312  006DC2                     u2180:
  6313  006DC2  2EE8               	decfsz	wreg,f,c
  6314  006DC4  D7F9               	goto	u2185
  6315  006DC6  C012  F01E         	movff	??_PWM_generar,PWM_generar@AuxCCPR2L
  6316  006DCA  C013  F01F         	movff	??_PWM_generar+1,PWM_generar@AuxCCPR2L+1
  6317  006DCE  C014  F020         	movff	??_PWM_generar+2,PWM_generar@AuxCCPR2L+2
  6318  006DD2  C015  F021         	movff	??_PWM_generar+3,PWM_generar@AuxCCPR2L+3
  6319                           
  6320                           ;PWM.c: 47: CCPR2L=AuxCCPR2L;
  6321  006DD6  C01E  FF90         	movff	PWM_generar@AuxCCPR2L,3984	;volatile
  6322                           
  6323                           ;PWM.c: 48: T2CONbits.TMR2ON=1;
  6324  006DDA  84BA               	bsf	4026,2,c	;volatile
  6325                           
  6326                           ;PWM.c: 49: TMR2=0;
  6327  006DDC  0E00               	movlw	0
  6328  006DDE  6EBC               	movwf	4028,c	;volatile
  6329  006DE0  0012               	return	
  6330  006DE2                     __end_of_PWM_generar:
  6331                           	opt stack 0
  6332                           tblptru	equ	0xFF8
  6333                           tblptrh	equ	0xFF7
  6334                           tblptrl	equ	0xFF6
  6335                           tablat	equ	0xFF5
  6336                           prodh	equ	0xFF4
  6337                           prodl	equ	0xFF3
  6338                           postinc0	equ	0xFEE
  6339                           wreg	equ	0xFE8
  6340                           postinc1	equ	0xFE6
  6341                           postdec1	equ	0xFE5
  6342                           fsr1l	equ	0xFE1
  6343                           postinc2	equ	0xFDE
  6344                           postdec2	equ	0xFDD
  6345                           fsr2h	equ	0xFDA
  6346                           fsr2l	equ	0xFD9
  6347                           status	equ	0xFD8
  6348                           
  6349 ;; *************** function ___lldiv *****************
  6350 ;; Defined at:
  6351 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/lldiv.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  dividend        4    0[COMRAM] unsigned long 
  6354 ;;  divisor         4    4[COMRAM] unsigned long 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  quotient        4    8[COMRAM] unsigned long 
  6357 ;;  counter         1   12[COMRAM] unsigned char 
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  4    0[COMRAM] unsigned long 
  6360 ;; Registers used:
  6361 ;;		wreg, status,2, status,0
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6367 ;;      Params:         8       0       0       0       0       0       0       0       0
  6368 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6370 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6371 ;;Total ram usage:       13 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_PWM_generar
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text12
  6381  005BBE                     __ptext12:
  6382                           	opt stack 0
  6383  005BBE                     ___lldiv:
  6384                           	opt stack 29
  6385                           
  6386                           ;incstack = 0
  6387  005BBE  0E00               	movlw	0
  6388  005BC0  6E09               	movwf	___lldiv@quotient,c
  6389  005BC2  0E00               	movlw	0
  6390  005BC4  6E0A               	movwf	___lldiv@quotient+1,c
  6391  005BC6  0E00               	movlw	0
  6392  005BC8  6E0B               	movwf	___lldiv@quotient+2,c
  6393  005BCA  0E00               	movlw	0
  6394  005BCC  6E0C               	movwf	___lldiv@quotient+3,c
  6395  005BCE  5008               	movf	___lldiv@divisor+3,w,c
  6396  005BD0  1005               	iorwf	___lldiv@divisor,w,c
  6397  005BD2  1006               	iorwf	___lldiv@divisor+1,w,c
  6398  005BD4  1007               	iorwf	___lldiv@divisor+2,w,c
  6399  005BD6  B4D8               	btfsc	status,2,c
  6400  005BD8  D02A               	goto	l836
  6401  005BDA  0E01               	movlw	1
  6402  005BDC  6E0D               	movwf	___lldiv@counter,c
  6403  005BDE  D006               	goto	l2578
  6404  005BE0                     l2576:
  6405  005BE0  90D8               	bcf	status,0,c
  6406  005BE2  3605               	rlcf	___lldiv@divisor,f,c
  6407  005BE4  3606               	rlcf	___lldiv@divisor+1,f,c
  6408  005BE6  3607               	rlcf	___lldiv@divisor+2,f,c
  6409  005BE8  3608               	rlcf	___lldiv@divisor+3,f,c
  6410  005BEA  2A0D               	incf	___lldiv@counter,f,c
  6411  005BEC                     l2578:
  6412  005BEC  AE08               	btfss	___lldiv@divisor+3,7,c
  6413  005BEE  D7F8               	goto	l2576
  6414  005BF0                     l2580:
  6415  005BF0  90D8               	bcf	status,0,c
  6416  005BF2  3609               	rlcf	___lldiv@quotient,f,c
  6417  005BF4  360A               	rlcf	___lldiv@quotient+1,f,c
  6418  005BF6  360B               	rlcf	___lldiv@quotient+2,f,c
  6419  005BF8  360C               	rlcf	___lldiv@quotient+3,f,c
  6420  005BFA  5005               	movf	___lldiv@divisor,w,c
  6421  005BFC  5C01               	subwf	___lldiv@dividend,w,c
  6422  005BFE  5006               	movf	___lldiv@divisor+1,w,c
  6423  005C00  5802               	subwfb	___lldiv@dividend+1,w,c
  6424  005C02  5007               	movf	___lldiv@divisor+2,w,c
  6425  005C04  5803               	subwfb	___lldiv@dividend+2,w,c
  6426  005C06  5008               	movf	___lldiv@divisor+3,w,c
  6427  005C08  5804               	subwfb	___lldiv@dividend+3,w,c
  6428  005C0A  A0D8               	btfss	status,0,c
  6429  005C0C  D009               	goto	l2588
  6430  005C0E  5005               	movf	___lldiv@divisor,w,c
  6431  005C10  5E01               	subwf	___lldiv@dividend,f,c
  6432  005C12  5006               	movf	___lldiv@divisor+1,w,c
  6433  005C14  5A02               	subwfb	___lldiv@dividend+1,f,c
  6434  005C16  5007               	movf	___lldiv@divisor+2,w,c
  6435  005C18  5A03               	subwfb	___lldiv@dividend+2,f,c
  6436  005C1A  5008               	movf	___lldiv@divisor+3,w,c
  6437  005C1C  5A04               	subwfb	___lldiv@dividend+3,f,c
  6438  005C1E  8009               	bsf	___lldiv@quotient,0,c
  6439  005C20                     l2588:
  6440  005C20  90D8               	bcf	status,0,c
  6441  005C22  3208               	rrcf	___lldiv@divisor+3,f,c
  6442  005C24  3207               	rrcf	___lldiv@divisor+2,f,c
  6443  005C26  3206               	rrcf	___lldiv@divisor+1,f,c
  6444  005C28  3205               	rrcf	___lldiv@divisor,f,c
  6445  005C2A  2E0D               	decfsz	___lldiv@counter,f,c
  6446  005C2C  D7E1               	goto	l2580
  6447  005C2E                     l836:
  6448  005C2E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6449  005C32  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6450  005C36  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6451  005C3A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6452  005C3E  0012               	return	
  6453  005C40                     __end_of___lldiv:
  6454                           	opt stack 0
  6455                           tblptru	equ	0xFF8
  6456                           tblptrh	equ	0xFF7
  6457                           tblptrl	equ	0xFF6
  6458                           tablat	equ	0xFF5
  6459                           prodh	equ	0xFF4
  6460                           prodl	equ	0xFF3
  6461                           postinc0	equ	0xFEE
  6462                           wreg	equ	0xFE8
  6463                           postinc1	equ	0xFE6
  6464                           postdec1	equ	0xFE5
  6465                           fsr1l	equ	0xFE1
  6466                           postinc2	equ	0xFDE
  6467                           postdec2	equ	0xFDD
  6468                           fsr2h	equ	0xFDA
  6469                           fsr2l	equ	0xFD9
  6470                           status	equ	0xFD8
  6471                           
  6472 ;; *************** function _Lcd_Out2 *****************
  6473 ;; Defined at:
  6474 ;;		line 113 in file "LCD.h"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  y               1    wreg     unsigned char 
  6477 ;;  x               1    3[COMRAM] unsigned char 
  6478 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  6479 ;;		 -> STR_91(8), STR_90(10), STR_89(8), STR_88(10), 
  6480 ;;		 -> STR_87(10), STR_86(8), STR_85(10), STR_84(10), 
  6481 ;;		 -> STR_83(14), STR_82(7), STR_81(9), STR_80(7), 
  6482 ;;		 -> STR_79(9), STR_78(9), STR_77(7), STR_76(9), 
  6483 ;;		 -> STR_75(9), STR_74(12), STR_73(7), STR_72(2), 
  6484 ;;		 -> STR_71(4), STR_70(11), STR_69(12), STR_68(12), 
  6485 ;;		 -> STR_67(6), STR_66(5), STR_65(5), STR_64(5), 
  6486 ;;		 -> STR_63(6), STR_62(5), STR_61(5), STR_60(5), 
  6487 ;;		 -> STR_59(6), STR_58(5), STR_57(5), STR_56(5), 
  6488 ;;		 -> STR_55(6), STR_54(5), STR_53(5), STR_52(6), 
  6489 ;;		 -> STR_51(5), STR_50(5), STR_49(5), STR_48(5), 
  6490 ;;		 -> STR_47(5), STR_46(5), STR_45(5), STR_44(5), 
  6491 ;;		 -> STR_43(5), STR_42(5), STR_41(5), STR_40(5), 
  6492 ;;		 -> STR_39(5), STR_38(5), STR_37(5), STR_36(5), 
  6493 ;;		 -> STR_35(5), STR_34(5), STR_33(5), STR_32(5), 
  6494 ;;		 -> STR_31(5), STR_30(5), STR_29(5), STR_28(5), 
  6495 ;;		 -> STR_27(5), STR_26(5), STR_25(5), STR_24(5), 
  6496 ;;		 -> STR_23(5), STR_22(5), STR_21(5), STR_20(5), 
  6497 ;;		 -> STR_19(5), STR_18(5), STR_17(5), STR_16(5), 
  6498 ;;		 -> STR_15(9), STR_14(14), STR_13(9), STR_12(9), 
  6499 ;;		 -> STR_11(14), STR_10(9), STR_9(14), STR_8(12), 
  6500 ;;		 -> STR_7(12), STR_6(12), STR_5(12), STR_4(12), 
  6501 ;;		 -> STR_3(7), STR_2(16), STR_1(11), 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;  y               1    6[COMRAM] unsigned char 
  6504 ;;  data            1    7[COMRAM] unsigned char 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;		None               void
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6514 ;;      Params:         3       0       0       0       0       0       0       0       0
  6515 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6517 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6518 ;;Total ram usage:        5 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    1
  6521 ;; This function calls:
  6522 ;;		_Lcd_Chr_CP
  6523 ;;		_Lcd_Cmd
  6524 ;; This function is called by:
  6525 ;;		_main
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text13
  6530  005B56                     __ptext13:
  6531                           	opt stack 0
  6532  005B56                     _Lcd_Out2:
  6533                           	opt stack 29
  6534                           
  6535                           ;incstack = 0
  6536                           ;Lcd_Out2@y stored from wreg
  6537  005B56  6E07               	movwf	Lcd_Out2@y,c
  6538                           
  6539                           ;LCD.h: 115: unsigned char data;
  6540                           ;LCD.h: 116: switch (y)
  6541  005B58  D00D               	goto	l2660
  6542  005B5A                     l2650:
  6543  005B5A  5004               	movf	Lcd_Out2@x,w,c
  6544  005B5C  0F80               	addlw	128
  6545  005B5E  D008               	goto	L26
  6546  005B60                     l2652:
  6547  005B60  5004               	movf	Lcd_Out2@x,w,c
  6548  005B62  0FC0               	addlw	192
  6549  005B64  D005               	goto	L26
  6550  005B66                     l2654:
  6551  005B66  5004               	movf	Lcd_Out2@x,w,c
  6552  005B68  0F94               	addlw	148
  6553  005B6A  D002               	goto	L26
  6554  005B6C                     l2656:
  6555  005B6C  5004               	movf	Lcd_Out2@x,w,c
  6556  005B6E  0FD4               	addlw	212
  6557  005B70                     L26:
  6558  005B70  6E08               	movwf	Lcd_Out2@data,c
  6559  005B72  D00D               	goto	l2662
  6560  005B74                     l2660:
  6561  005B74  5007               	movf	Lcd_Out2@y,w,c
  6562                           
  6563                           ; Switch size 1, requested type "space"
  6564                           ; Number of cases is 4, Range of values is 1 to 4
  6565                           ; switch strategies available:
  6566                           ; Name         Instructions Cycles
  6567                           ; simple_byte           13     7 (average)
  6568                           ;	Chosen strategy is simple_byte
  6569  005B76  0A01               	xorlw	1	; case 1
  6570  005B78  B4D8               	btfsc	status,2,c
  6571  005B7A  D7EF               	goto	l2650
  6572  005B7C  0A03               	xorlw	3	; case 2
  6573  005B7E  B4D8               	btfsc	status,2,c
  6574  005B80  D7EF               	goto	l2652
  6575  005B82  0A01               	xorlw	1	; case 3
  6576  005B84  B4D8               	btfsc	status,2,c
  6577  005B86  D7EF               	goto	l2654
  6578  005B88  0A07               	xorlw	7	; case 4
  6579  005B8A  B4D8               	btfsc	status,2,c
  6580  005B8C  D7EF               	goto	l2656
  6581  005B8E                     l2662:
  6582                           
  6583                           ;LCD.h: 124: Lcd_Cmd(data);
  6584  005B8E  5008               	movf	Lcd_Out2@data,w,c
  6585  005B90  ECE7  F031         	call	_Lcd_Cmd
  6586                           
  6587                           ;LCD.h: 125: while(*buffer)
  6588  005B94  D00A               	goto	l2668
  6589  005B96                     l2664:
  6590                           
  6591                           ;LCD.h: 126: {
  6592                           ;LCD.h: 127: Lcd_Chr_CP(*buffer);
  6593  005B96  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  6594  005B9A  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  6595  005B9E                     	if	0	;tblptru may be non-zero
  6596  005B9E                     	endif
  6597  005B9E                     	if	0	;tblptru may be non-zero
  6598  005B9E                     	endif
  6599  005B9E  0008               	tblrd		*
  6600  005BA0  50F5               	movf	tablat,w,c
  6601  005BA2  EC0E  F033         	call	_Lcd_Chr_CP
  6602                           
  6603                           ;LCD.h: 128: buffer++;
  6604  005BA6  4A05               	infsnz	Lcd_Out2@buffer,f,c
  6605  005BA8  2A06               	incf	Lcd_Out2@buffer+1,f,c
  6606  005BAA                     l2668:
  6607  005BAA  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  6608  005BAE  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  6609  005BB2                     	if	0	;tblptru may be non-zero
  6610  005BB2                     	endif
  6611  005BB2                     	if	0	;tblptru may be non-zero
  6612  005BB2                     	endif
  6613  005BB2  0008               	tblrd		*
  6614  005BB4  50F5               	movf	tablat,w,c
  6615  005BB6  0900               	iorlw	0
  6616  005BB8  B4D8               	btfsc	status,2,c
  6617                           
  6618                           ;LCD.h: 129: }
  6619                           ;LCD.h: 130: return;
  6620  005BBA  0012               	return	
  6621  005BBC  D7EC               	goto	l2664
  6622  005BBE                     __end_of_Lcd_Out2:
  6623                           	opt stack 0
  6624                           tblptru	equ	0xFF8
  6625                           tblptrh	equ	0xFF7
  6626                           tblptrl	equ	0xFF6
  6627                           tablat	equ	0xFF5
  6628                           prodh	equ	0xFF4
  6629                           prodl	equ	0xFF3
  6630                           postinc0	equ	0xFEE
  6631                           wreg	equ	0xFE8
  6632                           postinc1	equ	0xFE6
  6633                           postdec1	equ	0xFE5
  6634                           fsr1l	equ	0xFE1
  6635                           postinc2	equ	0xFDE
  6636                           postdec2	equ	0xFDD
  6637                           fsr2h	equ	0xFDA
  6638                           fsr2l	equ	0xFD9
  6639                           status	equ	0xFD8
  6640                           
  6641 ;; *************** function _Lcd_Out *****************
  6642 ;; Defined at:
  6643 ;;		line 92 in file "LCD.h"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  y               1    wreg     unsigned char 
  6646 ;;  x               1    3[COMRAM] unsigned char 
  6647 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  6648 ;;		 -> main@cadena(20), 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  y               1    6[COMRAM] unsigned char 
  6651 ;;  data            1    7[COMRAM] unsigned char 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;		None               void
  6654 ;; Registers used:
  6655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6661 ;;      Params:         3       0       0       0       0       0       0       0       0
  6662 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6664 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6665 ;;Total ram usage:        5 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    1
  6668 ;; This function calls:
  6669 ;;		_Lcd_Chr_CP
  6670 ;;		_Lcd_Cmd
  6671 ;; This function is called by:
  6672 ;;		_main
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text14
  6677  005A92                     __ptext14:
  6678                           	opt stack 0
  6679  005A92                     _Lcd_Out:
  6680                           	opt stack 29
  6681                           
  6682                           ;incstack = 0
  6683                           ;Lcd_Out@y stored from wreg
  6684  005A92  6E07               	movwf	Lcd_Out@y,c
  6685                           
  6686                           ;LCD.h: 94: unsigned char data;
  6687                           ;LCD.h: 95: switch (y)
  6688  005A94  D00D               	goto	l2638
  6689  005A96                     l2628:
  6690  005A96  5004               	movf	Lcd_Out@x,w,c
  6691  005A98  0F80               	addlw	128
  6692  005A9A  D008               	goto	L29
  6693  005A9C                     l2630:
  6694  005A9C  5004               	movf	Lcd_Out@x,w,c
  6695  005A9E  0FC0               	addlw	192
  6696  005AA0  D005               	goto	L29
  6697  005AA2                     l2632:
  6698  005AA2  5004               	movf	Lcd_Out@x,w,c
  6699  005AA4  0F94               	addlw	148
  6700  005AA6  D002               	goto	L29
  6701  005AA8                     l2634:
  6702  005AA8  5004               	movf	Lcd_Out@x,w,c
  6703  005AAA  0FD4               	addlw	212
  6704  005AAC                     L29:
  6705  005AAC  6E08               	movwf	Lcd_Out@data,c
  6706  005AAE  D00D               	goto	l2640
  6707  005AB0                     l2638:
  6708  005AB0  5007               	movf	Lcd_Out@y,w,c
  6709                           
  6710                           ; Switch size 1, requested type "space"
  6711                           ; Number of cases is 4, Range of values is 1 to 4
  6712                           ; switch strategies available:
  6713                           ; Name         Instructions Cycles
  6714                           ; simple_byte           13     7 (average)
  6715                           ;	Chosen strategy is simple_byte
  6716  005AB2  0A01               	xorlw	1	; case 1
  6717  005AB4  B4D8               	btfsc	status,2,c
  6718  005AB6  D7EF               	goto	l2628
  6719  005AB8  0A03               	xorlw	3	; case 2
  6720  005ABA  B4D8               	btfsc	status,2,c
  6721  005ABC  D7EF               	goto	l2630
  6722  005ABE  0A01               	xorlw	1	; case 3
  6723  005AC0  B4D8               	btfsc	status,2,c
  6724  005AC2  D7EF               	goto	l2632
  6725  005AC4  0A07               	xorlw	7	; case 4
  6726  005AC6  B4D8               	btfsc	status,2,c
  6727  005AC8  D7EF               	goto	l2634
  6728  005ACA                     l2640:
  6729                           
  6730                           ;LCD.h: 103: Lcd_Cmd(data);
  6731  005ACA  5008               	movf	Lcd_Out@data,w,c
  6732  005ACC  ECE7  F031         	call	_Lcd_Cmd
  6733                           
  6734                           ;LCD.h: 104: while(*buffer)
  6735  005AD0  D009               	goto	l2646
  6736  005AD2                     l2642:
  6737                           
  6738                           ;LCD.h: 105: {
  6739                           ;LCD.h: 106: Lcd_Chr_CP(*buffer);
  6740  005AD2  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  6741  005AD6  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  6742  005ADA  50DF               	movf	indf2,w,c
  6743  005ADC  EC0E  F033         	call	_Lcd_Chr_CP
  6744                           
  6745                           ;LCD.h: 107: buffer++;
  6746  005AE0  4A05               	infsnz	Lcd_Out@buffer,f,c
  6747  005AE2  2A06               	incf	Lcd_Out@buffer+1,f,c
  6748  005AE4                     l2646:
  6749  005AE4  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  6750  005AE8  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  6751  005AEC  50DF               	movf	indf2,w,c
  6752  005AEE  B4D8               	btfsc	status,2,c
  6753                           
  6754                           ;LCD.h: 108: }
  6755                           ;LCD.h: 109: return;
  6756  005AF0  0012               	return	
  6757  005AF2  D7EF               	goto	l2642
  6758  005AF4                     __end_of_Lcd_Out:
  6759                           	opt stack 0
  6760                           tblptru	equ	0xFF8
  6761                           tblptrh	equ	0xFF7
  6762                           tblptrl	equ	0xFF6
  6763                           tablat	equ	0xFF5
  6764                           prodh	equ	0xFF4
  6765                           prodl	equ	0xFF3
  6766                           postinc0	equ	0xFEE
  6767                           wreg	equ	0xFE8
  6768                           postinc1	equ	0xFE6
  6769                           postdec1	equ	0xFE5
  6770                           fsr1l	equ	0xFE1
  6771                           indf2	equ	0xFDF
  6772                           postinc2	equ	0xFDE
  6773                           postdec2	equ	0xFDD
  6774                           fsr2h	equ	0xFDA
  6775                           fsr2l	equ	0xFD9
  6776                           status	equ	0xFD8
  6777                           
  6778 ;; *************** function _Lcd_Chr_CP *****************
  6779 ;; Defined at:
  6780 ;;		line 134 in file "LCD.h"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  data            1    wreg     unsigned char 
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;  data            1    2[COMRAM] unsigned char 
  6785 ;; Return value:  Size  Location     Type
  6786 ;;		None               void
  6787 ;; Registers used:
  6788 ;;		wreg, status,2, status,0
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6794 ;;      Params:         0       0       0       0       0       0       0       0       0
  6795 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6796 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6797 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6798 ;;Total ram usage:        3 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; This function calls:
  6801 ;;		Nothing
  6802 ;; This function is called by:
  6803 ;;		_Lcd_Out
  6804 ;;		_Lcd_Out2
  6805 ;;		_main
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text15
  6810  00661C                     __ptext15:
  6811                           	opt stack 0
  6812  00661C                     _Lcd_Chr_CP:
  6813                           	opt stack 29
  6814                           
  6815                           ;incstack = 0
  6816                           ;Lcd_Chr_CP@data stored from wreg
  6817  00661C  6E03               	movwf	Lcd_Chr_CP@data,c
  6818                           
  6819                           ;LCD.h: 135: PORTDbits.RD2 = 0; PORTDbits.RD0 = 1;
  6820  00661E  9483               	bcf	3971,2,c	;volatile
  6821  006620  8083               	bsf	3971,0,c	;volatile
  6822                           
  6823                           ;LCD.h: 136: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  6824  006622  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  6825  006624  AE03               	btfss	Lcd_Chr_CP@data,7,c
  6826  006626  D001               	bra	u1805
  6827  006628  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  6828  00662A                     u1805:
  6829  00662A  0E01               	movlw	1
  6830  00662C  1601               	andwf	??_Lcd_Chr_CP,f,c
  6831  00662E  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6832  006630  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6833  006632  5083               	movf	3971,w,c	;volatile
  6834  006634  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6835  006636  0B7F               	andlw	-129
  6836  006638  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6837  00663A  6E83               	movwf	3971,c	;volatile
  6838  00663C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6839  006640  0E06               	movlw	6
  6840  006642  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6841  006644                     u1815:
  6842  006644  90D8               	bcf	status,0,c
  6843  006646  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6844  006648  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6845  00664A  D7FC               	goto	u1815
  6846  00664C  0E01               	movlw	1
  6847  00664E  1601               	andwf	??_Lcd_Chr_CP,f,c
  6848  006650  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6849  006652  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6850  006654  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6851  006656  5083               	movf	3971,w,c	;volatile
  6852  006658  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6853  00665A  0BBF               	andlw	-65
  6854  00665C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6855  00665E  6E83               	movwf	3971,c	;volatile
  6856                           
  6857                           ;LCD.h: 137: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  6858  006660  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6859  006664  0E05               	movlw	5
  6860  006666  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6861  006668                     u1825:
  6862  006668  90D8               	bcf	status,0,c
  6863  00666A  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6864  00666C  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6865  00666E  D7FC               	goto	u1825
  6866  006670  0E01               	movlw	1
  6867  006672  1601               	andwf	??_Lcd_Chr_CP,f,c
  6868  006674  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6869  006676  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6870  006678  5083               	movf	3971,w,c	;volatile
  6871  00667A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6872  00667C  0BDF               	andlw	-33
  6873  00667E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6874  006680  6E83               	movwf	3971,c	;volatile
  6875  006682  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6876  006686  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6877  006688  0E0F               	movlw	15
  6878  00668A  1601               	andwf	??_Lcd_Chr_CP,f,c
  6879  00668C  0E01               	movlw	1
  6880  00668E  1601               	andwf	??_Lcd_Chr_CP,f,c
  6881  006690  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6882  006692  5083               	movf	3971,w,c	;volatile
  6883  006694  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6884  006696  0BEF               	andlw	-17
  6885  006698  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6886  00669A  6E83               	movwf	3971,c	;volatile
  6887                           
  6888                           ;LCD.h: 138: _delay((unsigned long)((10)*(4000000/4000000.0)));
  6889  00669C  0E03               	movlw	3
  6890  00669E                     u3757:
  6891  00669E  2EE8               	decfsz	wreg,f,c
  6892  0066A0  D7FE               	goto	u3757
  6893  0066A2  F000               	nop	
  6894                           
  6895                           ;LCD.h: 139: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  6896  0066A4  8483               	bsf	3971,2,c	;volatile
  6897  0066A6  F000               	nop	
  6898  0066A8  D000               	nop2		;2 cycle nop
  6899  0066AA  D000               	nop2		;2 cycle nop
  6900  0066AC  9483               	bcf	3971,2,c	;volatile
  6901                           
  6902                           ;LCD.h: 140: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  6903  0066AE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6904  0066B2  90D8               	bcf	status,0,c
  6905  0066B4  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6906  0066B6  90D8               	bcf	status,0,c
  6907  0066B8  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6908  0066BA  90D8               	bcf	status,0,c
  6909  0066BC  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6910  0066BE  0E01               	movlw	1
  6911  0066C0  1601               	andwf	??_Lcd_Chr_CP,f,c
  6912  0066C2  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6913  0066C4  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6914  0066C6  5083               	movf	3971,w,c	;volatile
  6915  0066C8  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6916  0066CA  0B7F               	andlw	-129
  6917  0066CC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6918  0066CE  6E83               	movwf	3971,c	;volatile
  6919  0066D0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6920  0066D4  90D8               	bcf	status,0,c
  6921  0066D6  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6922  0066D8  90D8               	bcf	status,0,c
  6923  0066DA  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6924  0066DC  0E01               	movlw	1
  6925  0066DE  1601               	andwf	??_Lcd_Chr_CP,f,c
  6926  0066E0  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6927  0066E2  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6928  0066E4  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6929  0066E6  5083               	movf	3971,w,c	;volatile
  6930  0066E8  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6931  0066EA  0BBF               	andlw	-65
  6932  0066EC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6933  0066EE  6E83               	movwf	3971,c	;volatile
  6934                           
  6935                           ;LCD.h: 141: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  6936  0066F0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6937  0066F4  90D8               	bcf	status,0,c
  6938  0066F6  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6939  0066F8  0E01               	movlw	1
  6940  0066FA  1601               	andwf	??_Lcd_Chr_CP,f,c
  6941  0066FC  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6942  0066FE  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6943  006700  5083               	movf	3971,w,c	;volatile
  6944  006702  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6945  006704  0BDF               	andlw	-33
  6946  006706  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6947  006708  6E83               	movwf	3971,c	;volatile
  6948  00670A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6949  00670E  0E01               	movlw	1
  6950  006710  1601               	andwf	??_Lcd_Chr_CP,f,c
  6951  006712  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6952  006714  5083               	movf	3971,w,c	;volatile
  6953  006716  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6954  006718  0BEF               	andlw	-17
  6955  00671A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6956  00671C  6E83               	movwf	3971,c	;volatile
  6957                           
  6958                           ;LCD.h: 142: _delay((unsigned long)((10)*(4000000/4000000.0)));
  6959  00671E  0E03               	movlw	3
  6960  006720                     u3767:
  6961  006720  2EE8               	decfsz	wreg,f,c
  6962  006722  D7FE               	goto	u3767
  6963  006724  F000               	nop	
  6964                           
  6965                           ;LCD.h: 143: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  6966  006726  8483               	bsf	3971,2,c	;volatile
  6967  006728  F000               	nop	
  6968  00672A  D000               	nop2		;2 cycle nop
  6969  00672C  D000               	nop2		;2 cycle nop
  6970  00672E  9483               	bcf	3971,2,c	;volatile
  6971                           
  6972                           ;LCD.h: 144: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned long)((5
      +                          500)*(4000000/4000000.0)));
  6973  006730  F000               	nop	
  6974  006732  D000               	nop2		;2 cycle nop
  6975  006734  D000               	nop2		;2 cycle nop
  6976  006736  0E08               	movlw	8
  6977  006738  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  6978  00673A  0E23               	movlw	35
  6979  00673C                     u3777:
  6980  00673C  2EE8               	decfsz	wreg,f,c
  6981  00673E  D7FE               	goto	u3777
  6982  006740  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  6983  006742  D7FC               	goto	u3777
  6984  006744  F000               	nop	
  6985  006746  0012               	return	
  6986  006748                     __end_of_Lcd_Chr_CP:
  6987                           	opt stack 0
  6988                           tblptru	equ	0xFF8
  6989                           tblptrh	equ	0xFF7
  6990                           tblptrl	equ	0xFF6
  6991                           tablat	equ	0xFF5
  6992                           prodh	equ	0xFF4
  6993                           prodl	equ	0xFF3
  6994                           postinc0	equ	0xFEE
  6995                           wreg	equ	0xFE8
  6996                           postinc1	equ	0xFE6
  6997                           postdec1	equ	0xFE5
  6998                           fsr1l	equ	0xFE1
  6999                           indf2	equ	0xFDF
  7000                           postinc2	equ	0xFDE
  7001                           postdec2	equ	0xFDD
  7002                           fsr2h	equ	0xFDA
  7003                           fsr2l	equ	0xFD9
  7004                           status	equ	0xFD8
  7005                           
  7006 ;; *************** function _Lcd_Init *****************
  7007 ;; Defined at:
  7008 ;;		line 48 in file "LCD.h"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;		None
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  data            1    4[COMRAM] unsigned char 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;		None               void
  7015 ;; Registers used:
  7016 ;;		wreg, status,2, status,0, cstack
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7022 ;;      Params:         0       0       0       0       0       0       0       0       0
  7023 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7024 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7025 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7026 ;;Total ram usage:        2 bytes
  7027 ;; Hardware stack levels used:    1
  7028 ;; Hardware stack levels required when called:    1
  7029 ;; This function calls:
  7030 ;;		_Lcd_Cmd
  7031 ;; This function is called by:
  7032 ;;		_main
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text16
  7037  0064F4                     __ptext16:
  7038                           	opt stack 0
  7039  0064F4                     _Lcd_Init:
  7040                           	opt stack 29
  7041                           
  7042                           ;LCD.h: 49: unsigned char data;
  7043                           ;LCD.h: 50: TRISDbits.TRISD7 = 0;
  7044                           
  7045                           ;incstack = 0
  7046  0064F4  9E95               	bcf	3989,7,c	;volatile
  7047                           
  7048                           ;LCD.h: 51: TRISDbits.TRISD6 = 0;
  7049  0064F6  9C95               	bcf	3989,6,c	;volatile
  7050                           
  7051                           ;LCD.h: 52: TRISDbits.TRISD5 = 0;
  7052  0064F8  9A95               	bcf	3989,5,c	;volatile
  7053                           
  7054                           ;LCD.h: 53: TRISDbits.TRISD4 = 0;
  7055  0064FA  9895               	bcf	3989,4,c	;volatile
  7056                           
  7057                           ;LCD.h: 54: TRISDbits.TRISD2 = 0;
  7058  0064FC  9495               	bcf	3989,2,c	;volatile
  7059                           
  7060                           ;LCD.h: 55: TRISDbits.TRISD0 = 0;
  7061  0064FE  9095               	bcf	3989,0,c	;volatile
  7062                           
  7063                           ;LCD.h: 56: TRISDbits.TRISD1 = 0;
  7064  006500  9295               	bcf	3989,1,c	;volatile
  7065                           
  7066                           ;LCD.h: 57: PORTDbits.RD7 = 0;
  7067  006502  9E83               	bcf	3971,7,c	;volatile
  7068                           
  7069                           ;LCD.h: 58: PORTDbits.RD6 = 0;
  7070  006504  9C83               	bcf	3971,6,c	;volatile
  7071                           
  7072                           ;LCD.h: 59: PORTDbits.RD5 = 0;
  7073  006506  9A83               	bcf	3971,5,c	;volatile
  7074                           
  7075                           ;LCD.h: 60: PORTDbits.RD4 = 0;
  7076  006508  9883               	bcf	3971,4,c	;volatile
  7077                           
  7078                           ;LCD.h: 61: PORTDbits.RD2 = 0;
  7079  00650A  9483               	bcf	3971,2,c	;volatile
  7080                           
  7081                           ;LCD.h: 62: PORTDbits.RD0 = 0;
  7082  00650C  9083               	bcf	3971,0,c	;volatile
  7083                           
  7084                           ;LCD.h: 63: PORTDbits.RD1 = 0;
  7085  00650E  9283               	bcf	3971,1,c	;volatile
  7086                           
  7087                           ;LCD.h: 64: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7088  006510  0E08               	movlw	8
  7089  006512  6E04               	movwf	??_Lcd_Init& (0+255),c
  7090  006514  0E23               	movlw	35
  7091  006516                     u3787:
  7092  006516  2EE8               	decfsz	wreg,f,c
  7093  006518  D7FE               	goto	u3787
  7094  00651A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7095  00651C  D7FC               	goto	u3787
  7096  00651E  F000               	nop	
  7097                           
  7098                           ;LCD.h: 65: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7099  006520  0E08               	movlw	8
  7100  006522  6E04               	movwf	??_Lcd_Init& (0+255),c
  7101  006524  0E23               	movlw	35
  7102  006526                     u3797:
  7103  006526  2EE8               	decfsz	wreg,f,c
  7104  006528  D7FE               	goto	u3797
  7105  00652A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7106  00652C  D7FC               	goto	u3797
  7107  00652E  F000               	nop	
  7108                           
  7109                           ;LCD.h: 66: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7110  006530  0E08               	movlw	8
  7111  006532  6E04               	movwf	??_Lcd_Init& (0+255),c
  7112  006534  0E23               	movlw	35
  7113  006536                     u3807:
  7114  006536  2EE8               	decfsz	wreg,f,c
  7115  006538  D7FE               	goto	u3807
  7116  00653A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7117  00653C  D7FC               	goto	u3807
  7118  00653E  F000               	nop	
  7119                           
  7120                           ;LCD.h: 67: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7121  006540  0E08               	movlw	8
  7122  006542  6E04               	movwf	??_Lcd_Init& (0+255),c
  7123  006544  0E23               	movlw	35
  7124  006546                     u3817:
  7125  006546  2EE8               	decfsz	wreg,f,c
  7126  006548  D7FE               	goto	u3817
  7127  00654A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7128  00654C  D7FC               	goto	u3817
  7129  00654E  F000               	nop	
  7130                           
  7131                           ;LCD.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7132  006550  0E08               	movlw	8
  7133  006552  6E04               	movwf	??_Lcd_Init& (0+255),c
  7134  006554  0E23               	movlw	35
  7135  006556                     u3827:
  7136  006556  2EE8               	decfsz	wreg,f,c
  7137  006558  D7FE               	goto	u3827
  7138  00655A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7139  00655C  D7FC               	goto	u3827
  7140  00655E  F000               	nop	
  7141                           
  7142                           ;LCD.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7143  006560  0E08               	movlw	8
  7144  006562  6E04               	movwf	??_Lcd_Init& (0+255),c
  7145  006564  0E23               	movlw	35
  7146  006566                     u3837:
  7147  006566  2EE8               	decfsz	wreg,f,c
  7148  006568  D7FE               	goto	u3837
  7149  00656A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7150  00656C  D7FC               	goto	u3837
  7151  00656E  F000               	nop	
  7152                           
  7153                           ;LCD.h: 70: for(data = 1; data < 4; data ++)
  7154  006570  0E01               	movlw	1
  7155  006572  6E05               	movwf	Lcd_Init@data,c
  7156  006574  D01E               	goto	L30
  7157  006576                     l37:
  7158                           
  7159                           ;LCD.h: 71: {
  7160                           ;LCD.h: 72: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD2 = 0;
  7161  006576  9E83               	bcf	3971,7,c	;volatile
  7162  006578  9C83               	bcf	3971,6,c	;volatile
  7163  00657A  8A83               	bsf	3971,5,c	;volatile
  7164  00657C  8883               	bsf	3971,4,c	;volatile
  7165  00657E  9483               	bcf	3971,2,c	;volatile
  7166                           
  7167                           ;LCD.h: 73: PORTDbits.RD0 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; 
      +                          PORTDbits.RD4 = 1;
  7168  006580  9083               	bcf	3971,0,c	;volatile
  7169  006582  9E83               	bcf	3971,7,c	;volatile
  7170  006584  9C83               	bcf	3971,6,c	;volatile
  7171  006586  8A83               	bsf	3971,5,c	;volatile
  7172  006588  8883               	bsf	3971,4,c	;volatile
  7173                           
  7174                           ;LCD.h: 74: PORTDbits.RD2 = 1; PORTDbits.RD0 = 0;
  7175  00658A  8483               	bsf	3971,2,c	;volatile
  7176  00658C  9083               	bcf	3971,0,c	;volatile
  7177                           
  7178                           ;LCD.h: 75: _delay((unsigned long)((5)*(4000000/4000000.0)));
  7179  00658E  F000               	nop	
  7180  006590  D000               	nop2		;2 cycle nop
  7181  006592  D000               	nop2		;2 cycle nop
  7182                           
  7183                           ;LCD.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD2 = 0;
  7184  006594  9E83               	bcf	3971,7,c	;volatile
  7185  006596  9C83               	bcf	3971,6,c	;volatile
  7186  006598  8A83               	bsf	3971,5,c	;volatile
  7187  00659A  8883               	bsf	3971,4,c	;volatile
  7188  00659C  9483               	bcf	3971,2,c	;volatile
  7189                           
  7190                           ;LCD.h: 77: PORTDbits.RD0 = 0;
  7191  00659E  9083               	bcf	3971,0,c	;volatile
  7192                           
  7193                           ;LCD.h: 78: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7194  0065A0  0E08               	movlw	8
  7195  0065A2  6E04               	movwf	??_Lcd_Init& (0+255),c
  7196  0065A4  0E23               	movlw	35
  7197  0065A6                     u3847:
  7198  0065A6  2EE8               	decfsz	wreg,f,c
  7199  0065A8  D7FE               	goto	u3847
  7200  0065AA  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7201  0065AC  D7FC               	goto	u3847
  7202  0065AE  F000               	nop	
  7203  0065B0  2A05               	incf	Lcd_Init@data,f,c
  7204  0065B2                     L30:
  7205  0065B2  0E03               	movlw	3
  7206  0065B4  6405               	cpfsgt	Lcd_Init@data,c
  7207  0065B6  D7DF               	goto	l37
  7208                           
  7209                           ;LCD.h: 79: }
  7210                           ;LCD.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  7211  0065B8  9E83               	bcf	3971,7,c	;volatile
  7212  0065BA  9C83               	bcf	3971,6,c	;volatile
  7213  0065BC  8A83               	bsf	3971,5,c	;volatile
  7214  0065BE  9883               	bcf	3971,4,c	;volatile
  7215  0065C0  9483               	bcf	3971,2,c	;volatile
  7216  0065C2  9083               	bcf	3971,0,c	;volatile
  7217                           
  7218                           ;LCD.h: 81: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 1; PORTDbits.RD0 = 0;
  7219  0065C4  9E83               	bcf	3971,7,c	;volatile
  7220  0065C6  9C83               	bcf	3971,6,c	;volatile
  7221  0065C8  8A83               	bsf	3971,5,c	;volatile
  7222  0065CA  9883               	bcf	3971,4,c	;volatile
  7223  0065CC  8483               	bsf	3971,2,c	;volatile
  7224  0065CE  9083               	bcf	3971,0,c	;volatile
  7225                           
  7226                           ;LCD.h: 82: _delay((unsigned long)((5)*(4000000/4000000.0)));
  7227  0065D0  F000               	nop	
  7228  0065D2  D000               	nop2		;2 cycle nop
  7229  0065D4  D000               	nop2		;2 cycle nop
  7230                           
  7231                           ;LCD.h: 83: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  7232  0065D6  9E83               	bcf	3971,7,c	;volatile
  7233  0065D8  9C83               	bcf	3971,6,c	;volatile
  7234  0065DA  8A83               	bsf	3971,5,c	;volatile
  7235  0065DC  9883               	bcf	3971,4,c	;volatile
  7236  0065DE  9483               	bcf	3971,2,c	;volatile
  7237  0065E0  9083               	bcf	3971,0,c	;volatile
  7238                           
  7239                           ;LCD.h: 84: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7240  0065E2  0E08               	movlw	8
  7241  0065E4  6E04               	movwf	??_Lcd_Init& (0+255),c
  7242  0065E6  0E23               	movlw	35
  7243  0065E8                     u3857:
  7244  0065E8  2EE8               	decfsz	wreg,f,c
  7245  0065EA  D7FE               	goto	u3857
  7246  0065EC  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7247  0065EE  D7FC               	goto	u3857
  7248  0065F0  F000               	nop	
  7249                           
  7250                           ;LCD.h: 85: data = 40; Lcd_Cmd(data);
  7251  0065F2  0E28               	movlw	40
  7252  0065F4  6E05               	movwf	Lcd_Init@data,c
  7253  0065F6  5005               	movf	Lcd_Init@data,w,c
  7254  0065F8  ECE7  F031         	call	_Lcd_Cmd
  7255                           
  7256                           ;LCD.h: 86: data = 16; Lcd_Cmd(data);
  7257  0065FC  0E10               	movlw	16
  7258  0065FE  6E05               	movwf	Lcd_Init@data,c
  7259  006600  5005               	movf	Lcd_Init@data,w,c
  7260  006602  ECE7  F031         	call	_Lcd_Cmd
  7261                           
  7262                           ;LCD.h: 87: data = 1; Lcd_Cmd(data);
  7263  006606  0E01               	movlw	1
  7264  006608  6E05               	movwf	Lcd_Init@data,c
  7265  00660A  5005               	movf	Lcd_Init@data,w,c
  7266  00660C  ECE7  F031         	call	_Lcd_Cmd
  7267                           
  7268                           ;LCD.h: 88: data = 15; Lcd_Cmd(data);
  7269  006610  0E0F               	movlw	15
  7270  006612  6E05               	movwf	Lcd_Init@data,c
  7271  006614  5005               	movf	Lcd_Init@data,w,c
  7272  006616  ECE7  F031         	call	_Lcd_Cmd
  7273  00661A  0012               	return	
  7274  00661C                     __end_of_Lcd_Init:
  7275                           	opt stack 0
  7276                           tblptru	equ	0xFF8
  7277                           tblptrh	equ	0xFF7
  7278                           tblptrl	equ	0xFF6
  7279                           tablat	equ	0xFF5
  7280                           prodh	equ	0xFF4
  7281                           prodl	equ	0xFF3
  7282                           postinc0	equ	0xFEE
  7283                           wreg	equ	0xFE8
  7284                           postinc1	equ	0xFE6
  7285                           postdec1	equ	0xFE5
  7286                           fsr1l	equ	0xFE1
  7287                           indf2	equ	0xFDF
  7288                           postinc2	equ	0xFDE
  7289                           postdec2	equ	0xFDD
  7290                           fsr2h	equ	0xFDA
  7291                           fsr2l	equ	0xFD9
  7292                           status	equ	0xFD8
  7293                           
  7294 ;; *************** function _Lcd_Cmd *****************
  7295 ;; Defined at:
  7296 ;;		line 148 in file "LCD.h"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  data            1    wreg     unsigned char 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  data            1    2[COMRAM] unsigned char 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;		None               void
  7303 ;; Registers used:
  7304 ;;		wreg, status,2, status,0
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7310 ;;      Params:         0       0       0       0       0       0       0       0       0
  7311 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7312 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7313 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7314 ;;Total ram usage:        3 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		_Lcd_Init
  7320 ;;		_Lcd_Out
  7321 ;;		_Lcd_Out2
  7322 ;;		_lcd_goto
  7323 ;;		_main
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text17
  7328  0063CE                     __ptext17:
  7329                           	opt stack 0
  7330  0063CE                     _Lcd_Cmd:
  7331                           	opt stack 29
  7332                           
  7333                           ;incstack = 0
  7334                           ;Lcd_Cmd@data stored from wreg
  7335  0063CE  6E03               	movwf	Lcd_Cmd@data,c
  7336                           
  7337                           ;LCD.h: 149: PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  7338  0063D0  9483               	bcf	3971,2,c	;volatile
  7339  0063D2  9083               	bcf	3971,0,c	;volatile
  7340                           
  7341                           ;LCD.h: 150: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  7342  0063D4  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  7343  0063D6  AE03               	btfss	Lcd_Cmd@data,7,c
  7344  0063D8  D001               	bra	u1775
  7345  0063DA  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  7346  0063DC                     u1775:
  7347  0063DC  0E01               	movlw	1
  7348  0063DE  1601               	andwf	??_Lcd_Cmd,f,c
  7349  0063E0  3201               	rrcf	??_Lcd_Cmd,f,c
  7350  0063E2  3201               	rrcf	??_Lcd_Cmd,f,c
  7351  0063E4  5083               	movf	3971,w,c	;volatile
  7352  0063E6  1801               	xorwf	??_Lcd_Cmd,w,c
  7353  0063E8  0B7F               	andlw	-129
  7354  0063EA  1801               	xorwf	??_Lcd_Cmd,w,c
  7355  0063EC  6E83               	movwf	3971,c	;volatile
  7356  0063EE  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7357  0063F2  0E06               	movlw	6
  7358  0063F4  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7359  0063F6                     u1785:
  7360  0063F6  90D8               	bcf	status,0,c
  7361  0063F8  3201               	rrcf	??_Lcd_Cmd,f,c
  7362  0063FA  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7363  0063FC  D7FC               	goto	u1785
  7364  0063FE  0E01               	movlw	1
  7365  006400  1601               	andwf	??_Lcd_Cmd,f,c
  7366  006402  3A01               	swapf	??_Lcd_Cmd,f,c
  7367  006404  4601               	rlncf	??_Lcd_Cmd,f,c
  7368  006406  4601               	rlncf	??_Lcd_Cmd,f,c
  7369  006408  5083               	movf	3971,w,c	;volatile
  7370  00640A  1801               	xorwf	??_Lcd_Cmd,w,c
  7371  00640C  0BBF               	andlw	-65
  7372  00640E  1801               	xorwf	??_Lcd_Cmd,w,c
  7373  006410  6E83               	movwf	3971,c	;volatile
  7374                           
  7375                           ;LCD.h: 151: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  7376  006412  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7377  006416  0E05               	movlw	5
  7378  006418  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7379  00641A                     u1795:
  7380  00641A  90D8               	bcf	status,0,c
  7381  00641C  3201               	rrcf	??_Lcd_Cmd,f,c
  7382  00641E  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7383  006420  D7FC               	goto	u1795
  7384  006422  0E01               	movlw	1
  7385  006424  1601               	andwf	??_Lcd_Cmd,f,c
  7386  006426  3A01               	swapf	??_Lcd_Cmd,f,c
  7387  006428  4601               	rlncf	??_Lcd_Cmd,f,c
  7388  00642A  5083               	movf	3971,w,c	;volatile
  7389  00642C  1801               	xorwf	??_Lcd_Cmd,w,c
  7390  00642E  0BDF               	andlw	-33
  7391  006430  1801               	xorwf	??_Lcd_Cmd,w,c
  7392  006432  6E83               	movwf	3971,c	;volatile
  7393  006434  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7394  006438  3A01               	swapf	??_Lcd_Cmd,f,c
  7395  00643A  0E0F               	movlw	15
  7396  00643C  1601               	andwf	??_Lcd_Cmd,f,c
  7397  00643E  0E01               	movlw	1
  7398  006440  1601               	andwf	??_Lcd_Cmd,f,c
  7399  006442  3A01               	swapf	??_Lcd_Cmd,f,c
  7400  006444  5083               	movf	3971,w,c	;volatile
  7401  006446  1801               	xorwf	??_Lcd_Cmd,w,c
  7402  006448  0BEF               	andlw	-17
  7403  00644A  1801               	xorwf	??_Lcd_Cmd,w,c
  7404  00644C  6E83               	movwf	3971,c	;volatile
  7405                           
  7406                           ;LCD.h: 152: _delay((unsigned long)((10)*(4000000/4000000.0)));
  7407  00644E  0E03               	movlw	3
  7408  006450                     u3867:
  7409  006450  2EE8               	decfsz	wreg,f,c
  7410  006452  D7FE               	goto	u3867
  7411  006454  F000               	nop	
  7412                           
  7413                           ;LCD.h: 153: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  7414  006456  8483               	bsf	3971,2,c	;volatile
  7415  006458  F000               	nop	
  7416  00645A  D000               	nop2		;2 cycle nop
  7417  00645C  D000               	nop2		;2 cycle nop
  7418  00645E  9483               	bcf	3971,2,c	;volatile
  7419                           
  7420                           ;LCD.h: 154: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  7421  006460  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7422  006464  90D8               	bcf	status,0,c
  7423  006466  3201               	rrcf	??_Lcd_Cmd,f,c
  7424  006468  90D8               	bcf	status,0,c
  7425  00646A  3201               	rrcf	??_Lcd_Cmd,f,c
  7426  00646C  90D8               	bcf	status,0,c
  7427  00646E  3201               	rrcf	??_Lcd_Cmd,f,c
  7428  006470  0E01               	movlw	1
  7429  006472  1601               	andwf	??_Lcd_Cmd,f,c
  7430  006474  3201               	rrcf	??_Lcd_Cmd,f,c
  7431  006476  3201               	rrcf	??_Lcd_Cmd,f,c
  7432  006478  5083               	movf	3971,w,c	;volatile
  7433  00647A  1801               	xorwf	??_Lcd_Cmd,w,c
  7434  00647C  0B7F               	andlw	-129
  7435  00647E  1801               	xorwf	??_Lcd_Cmd,w,c
  7436  006480  6E83               	movwf	3971,c	;volatile
  7437  006482  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7438  006486  90D8               	bcf	status,0,c
  7439  006488  3201               	rrcf	??_Lcd_Cmd,f,c
  7440  00648A  90D8               	bcf	status,0,c
  7441  00648C  3201               	rrcf	??_Lcd_Cmd,f,c
  7442  00648E  0E01               	movlw	1
  7443  006490  1601               	andwf	??_Lcd_Cmd,f,c
  7444  006492  3A01               	swapf	??_Lcd_Cmd,f,c
  7445  006494  4601               	rlncf	??_Lcd_Cmd,f,c
  7446  006496  4601               	rlncf	??_Lcd_Cmd,f,c
  7447  006498  5083               	movf	3971,w,c	;volatile
  7448  00649A  1801               	xorwf	??_Lcd_Cmd,w,c
  7449  00649C  0BBF               	andlw	-65
  7450  00649E  1801               	xorwf	??_Lcd_Cmd,w,c
  7451  0064A0  6E83               	movwf	3971,c	;volatile
  7452                           
  7453                           ;LCD.h: 155: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  7454  0064A2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7455  0064A6  90D8               	bcf	status,0,c
  7456  0064A8  3201               	rrcf	??_Lcd_Cmd,f,c
  7457  0064AA  0E01               	movlw	1
  7458  0064AC  1601               	andwf	??_Lcd_Cmd,f,c
  7459  0064AE  3A01               	swapf	??_Lcd_Cmd,f,c
  7460  0064B0  4601               	rlncf	??_Lcd_Cmd,f,c
  7461  0064B2  5083               	movf	3971,w,c	;volatile
  7462  0064B4  1801               	xorwf	??_Lcd_Cmd,w,c
  7463  0064B6  0BDF               	andlw	-33
  7464  0064B8  1801               	xorwf	??_Lcd_Cmd,w,c
  7465  0064BA  6E83               	movwf	3971,c	;volatile
  7466  0064BC  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7467  0064C0  0E01               	movlw	1
  7468  0064C2  1601               	andwf	??_Lcd_Cmd,f,c
  7469  0064C4  3A01               	swapf	??_Lcd_Cmd,f,c
  7470  0064C6  5083               	movf	3971,w,c	;volatile
  7471  0064C8  1801               	xorwf	??_Lcd_Cmd,w,c
  7472  0064CA  0BEF               	andlw	-17
  7473  0064CC  1801               	xorwf	??_Lcd_Cmd,w,c
  7474  0064CE  6E83               	movwf	3971,c	;volatile
  7475                           
  7476                           ;LCD.h: 156: _delay((unsigned long)((10)*(4000000/4000000.0)));
  7477  0064D0  0E03               	movlw	3
  7478  0064D2                     u3877:
  7479  0064D2  2EE8               	decfsz	wreg,f,c
  7480  0064D4  D7FE               	goto	u3877
  7481  0064D6  F000               	nop	
  7482                           
  7483                           ;LCD.h: 157: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  7484  0064D8  8483               	bsf	3971,2,c	;volatile
  7485  0064DA  F000               	nop	
  7486  0064DC  D000               	nop2		;2 cycle nop
  7487  0064DE  D000               	nop2		;2 cycle nop
  7488  0064E0  9483               	bcf	3971,2,c	;volatile
  7489                           
  7490                           ;LCD.h: 158: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7491  0064E2  0E08               	movlw	8
  7492  0064E4  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  7493  0064E6  0E23               	movlw	35
  7494  0064E8                     u3887:
  7495  0064E8  2EE8               	decfsz	wreg,f,c
  7496  0064EA  D7FE               	goto	u3887
  7497  0064EC  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  7498  0064EE  D7FC               	goto	u3887
  7499  0064F0  F000               	nop	
  7500  0064F2  0012               	return	
  7501  0064F4                     __end_of_Lcd_Cmd:
  7502                           	opt stack 0
  7503                           tblptru	equ	0xFF8
  7504                           tblptrh	equ	0xFF7
  7505                           tblptrl	equ	0xFF6
  7506                           tablat	equ	0xFF5
  7507                           prodh	equ	0xFF4
  7508                           prodl	equ	0xFF3
  7509                           postinc0	equ	0xFEE
  7510                           wreg	equ	0xFE8
  7511                           postinc1	equ	0xFE6
  7512                           postdec1	equ	0xFE5
  7513                           fsr1l	equ	0xFE1
  7514                           indf2	equ	0xFDF
  7515                           postinc2	equ	0xFDE
  7516                           postdec2	equ	0xFDD
  7517                           fsr2h	equ	0xFDA
  7518                           fsr2l	equ	0xFD9
  7519                           status	equ	0xFD8
  7520                           
  7521 ;; *************** function _Conv_Entero *****************
  7522 ;; Defined at:
  7523 ;;		line 1 in file "Convertir.h"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  numero          4   14[COMRAM] long 
  7526 ;;  conv            2   18[COMRAM] PTR unsigned char 
  7527 ;;		 -> main@cadena(20), main@cad(20), 
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;  convTemp       21   25[COMRAM] unsigned char [21]
  7530 ;;  numeroReg       4   51[COMRAM] long 
  7531 ;;  punteroActua    2   49[COMRAM] PTR unsigned char 
  7532 ;;		 -> Conv_Entero@convTemp(21), 
  7533 ;;  num             2   46[COMRAM] int 
  7534 ;;  i               1   48[COMRAM] unsigned char 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  2   14[COMRAM] int 
  7537 ;; Registers used:
  7538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7544 ;;      Params:         6       0       0       0       0       0       0       0       0
  7545 ;;      Locals:        30       0       0       0       0       0       0       0       0
  7546 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7547 ;;      Totals:        41       0       0       0       0       0       0       0       0
  7548 ;;Total ram usage:       41 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; Hardware stack levels required when called:    1
  7551 ;; This function calls:
  7552 ;;		___aldiv
  7553 ;;		___almod
  7554 ;;		___lmul
  7555 ;; This function is called by:
  7556 ;;		_main
  7557 ;; This function uses a non-reentrant model
  7558 ;;
  7559                           
  7560                           	psect	text18
  7561  0069DC                     __ptext18:
  7562                           	opt stack 0
  7563  0069DC                     _Conv_Entero:
  7564                           	opt stack 29
  7565                           
  7566                           ;Convertir.h: 3: char convTemp[21];
  7567                           ;Convertir.h: 4: register char *punteroActual;
  7568                           ;Convertir.h: 5: register int num=0;
  7569                           
  7570                           ;incstack = 0
  7571  0069DC  0E00               	movlw	0
  7572  0069DE  6E30               	movwf	Conv_Entero@num+1,c
  7573  0069E0  0E00               	movlw	0
  7574  0069E2  6E2F               	movwf	Conv_Entero@num,c
  7575                           
  7576                           ;Convertir.h: 6: register char i=0;
  7577  0069E4  0E00               	movlw	0
  7578  0069E6  6E31               	movwf	Conv_Entero@i,c
  7579                           
  7580                           ;Convertir.h: 7: register long long numeroReg = numero;
  7581  0069E8  C00F  F034         	movff	Conv_Entero@numero,Conv_Entero@numeroReg
  7582  0069EC  C010  F035         	movff	Conv_Entero@numero+1,Conv_Entero@numeroReg+1
  7583  0069F0  C011  F036         	movff	Conv_Entero@numero+2,Conv_Entero@numeroReg+2
  7584  0069F4  C012  F037         	movff	Conv_Entero@numero+3,Conv_Entero@numeroReg+3
  7585                           
  7586                           ;Convertir.h: 9: punteroActual = &convTemp[21 - 1];
  7587  0069F8  0E00               	movlw	high (Conv_Entero@convTemp+20)
  7588  0069FA  6E33               	movwf	Conv_Entero@punteroActual+1,c
  7589  0069FC  0E2E               	movlw	low (Conv_Entero@convTemp+20)
  7590  0069FE  6E32               	movwf	Conv_Entero@punteroActual,c
  7591                           
  7592                           ;Convertir.h: 10: *punteroActual = 0;
  7593  006A00  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7594  006A04  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7595  006A08  0E00               	movlw	0
  7596  006A0A  6EDF               	movwf	indf2,c
  7597                           
  7598                           ;Convertir.h: 12: if( numeroReg < 0)
  7599  006A0C  5037               	movf	Conv_Entero@numeroReg+3,w,c
  7600  006A0E  0A80               	xorlw	128
  7601  006A10  0F80               	addlw	128
  7602  006A12  E108               	bnz	u2105
  7603  006A14  0E00               	movlw	0
  7604  006A16  5C36               	subwf	Conv_Entero@numeroReg+2,w,c
  7605  006A18  E105               	bnz	u2105
  7606  006A1A  0E00               	movlw	0
  7607  006A1C  5C35               	subwf	Conv_Entero@numeroReg+1,w,c
  7608  006A1E  E102               	bnz	u2105
  7609  006A20  0E00               	movlw	0
  7610  006A22  5C34               	subwf	Conv_Entero@numeroReg,w,c
  7611  006A24                     u2105:
  7612  006A24  B0D8               	btfsc	status,0,c
  7613  006A26  D01A               	goto	l2702
  7614                           
  7615                           ;Convertir.h: 13: {
  7616                           ;Convertir.h: 14: numeroReg*=-1;
  7617  006A28  C034  F001         	movff	Conv_Entero@numeroReg,___lmul@multiplier
  7618  006A2C  C035  F002         	movff	Conv_Entero@numeroReg+1,___lmul@multiplier+1
  7619  006A30  C036  F003         	movff	Conv_Entero@numeroReg+2,___lmul@multiplier+2
  7620  006A34  C037  F004         	movff	Conv_Entero@numeroReg+3,___lmul@multiplier+3
  7621  006A38  0EFF               	movlw	255
  7622  006A3A  6E05               	movwf	___lmul@multiplicand,c
  7623  006A3C  0EFF               	movlw	255
  7624  006A3E  6E06               	movwf	___lmul@multiplicand+1,c
  7625  006A40  0EFF               	movlw	255
  7626  006A42  6E07               	movwf	___lmul@multiplicand+2,c
  7627  006A44  0EFF               	movlw	255
  7628  006A46  6E08               	movwf	___lmul@multiplicand+3,c
  7629  006A48  EC1E  F02D         	call	___lmul	;wreg free
  7630  006A4C  C001  F034         	movff	?___lmul,Conv_Entero@numeroReg
  7631  006A50  C002  F035         	movff	?___lmul+1,Conv_Entero@numeroReg+1
  7632  006A54  C003  F036         	movff	?___lmul+2,Conv_Entero@numeroReg+2
  7633  006A58  C004  F037         	movff	?___lmul+3,Conv_Entero@numeroReg+3
  7634  006A5C                     l2702:
  7635                           
  7636                           ;Convertir.h: 18: punteroActual--;
  7637  006A5C  0632               	decf	Conv_Entero@punteroActual,f,c
  7638  006A5E  A0D8               	btfss	status,0,c
  7639  006A60  0633               	decf	Conv_Entero@punteroActual+1,f,c
  7640                           
  7641                           ;Convertir.h: 19: num=numeroReg % 10;
  7642  006A62  C034  F001         	movff	Conv_Entero@numeroReg,___almod@dividend
  7643  006A66  C035  F002         	movff	Conv_Entero@numeroReg+1,___almod@dividend+1
  7644  006A6A  C036  F003         	movff	Conv_Entero@numeroReg+2,___almod@dividend+2
  7645  006A6E  C037  F004         	movff	Conv_Entero@numeroReg+3,___almod@dividend+3
  7646  006A72  0E0A               	movlw	10
  7647  006A74  6E05               	movwf	___almod@divisor,c
  7648  006A76  0E00               	movlw	0
  7649  006A78  6E06               	movwf	___almod@divisor+1,c
  7650  006A7A  0E00               	movlw	0
  7651  006A7C  6E07               	movwf	___almod@divisor+2,c
  7652  006A7E  0E00               	movlw	0
  7653  006A80  6E08               	movwf	___almod@divisor+3,c
  7654  006A82  EC09  F02F         	call	___almod	;wreg free
  7655  006A86  C001  F015         	movff	?___almod,??_Conv_Entero
  7656  006A8A  C002  F016         	movff	?___almod+1,??_Conv_Entero+1
  7657  006A8E  C003  F017         	movff	?___almod+2,??_Conv_Entero+2
  7658  006A92  C004  F018         	movff	?___almod+3,??_Conv_Entero+3
  7659  006A96  C015  F02F         	movff	??_Conv_Entero,Conv_Entero@num
  7660  006A9A  C016  F030         	movff	??_Conv_Entero+1,Conv_Entero@num+1
  7661                           
  7662                           ;Convertir.h: 21: *punteroActual = num + '0';
  7663  006A9E  502F               	movf	Conv_Entero@num,w,c
  7664  006AA0  0F30               	addlw	48
  7665  006AA2  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7666  006AA6  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7667  006AAA  6EDF               	movwf	indf2,c
  7668                           
  7669                           ;Convertir.h: 22: } while(numeroReg /= 10);
  7670  006AAC  C034  F001         	movff	Conv_Entero@numeroReg,___aldiv@dividend
  7671  006AB0  C035  F002         	movff	Conv_Entero@numeroReg+1,___aldiv@dividend+1
  7672  006AB4  C036  F003         	movff	Conv_Entero@numeroReg+2,___aldiv@dividend+2
  7673  006AB8  C037  F004         	movff	Conv_Entero@numeroReg+3,___aldiv@dividend+3
  7674  006ABC  0E0A               	movlw	10
  7675  006ABE  6E05               	movwf	___aldiv@divisor,c
  7676  006AC0  0E00               	movlw	0
  7677  006AC2  6E06               	movwf	___aldiv@divisor+1,c
  7678  006AC4  0E00               	movlw	0
  7679  006AC6  6E07               	movwf	___aldiv@divisor+2,c
  7680  006AC8  0E00               	movlw	0
  7681  006ACA  6E08               	movwf	___aldiv@divisor+3,c
  7682  006ACC  EC69  F031         	call	___aldiv	;wreg free
  7683  006AD0  C001  F034         	movff	?___aldiv,Conv_Entero@numeroReg
  7684  006AD4  C002  F035         	movff	?___aldiv+1,Conv_Entero@numeroReg+1
  7685  006AD8  C003  F036         	movff	?___aldiv+2,Conv_Entero@numeroReg+2
  7686  006ADC  C004  F037         	movff	?___aldiv+3,Conv_Entero@numeroReg+3
  7687  006AE0  5037               	movf	(Conv_Entero@numeroReg+3)& (0+255),w,c
  7688  006AE2  1034               	iorwf	Conv_Entero@numeroReg& (0+255),w,c
  7689  006AE4  1035               	iorwf	(Conv_Entero@numeroReg+1)& (0+255),w,c
  7690  006AE6  1036               	iorwf	(Conv_Entero@numeroReg+2)& (0+255),w,c
  7691  006AE8  A4D8               	btfss	status,2,c
  7692  006AEA  D7B8               	goto	l2702
  7693                           
  7694                           ;Convertir.h: 24: if ( numero < 0)
  7695  006AEC  5012               	movf	Conv_Entero@numero+3,w,c
  7696  006AEE  0A80               	xorlw	128
  7697  006AF0  0F80               	addlw	128
  7698  006AF2  E108               	bnz	u2125
  7699  006AF4  0E00               	movlw	0
  7700  006AF6  5C11               	subwf	Conv_Entero@numero+2,w,c
  7701  006AF8  E105               	bnz	u2125
  7702  006AFA  0E00               	movlw	0
  7703  006AFC  5C10               	subwf	Conv_Entero@numero+1,w,c
  7704  006AFE  E102               	bnz	u2125
  7705  006B00  0E00               	movlw	0
  7706  006B02  5C0F               	subwf	Conv_Entero@numero,w,c
  7707  006B04                     u2125:
  7708  006B04  B0D8               	btfsc	status,0,c
  7709  006B06  D009               	goto	l2716
  7710                           
  7711                           ;Convertir.h: 25: {
  7712                           ;Convertir.h: 26: punteroActual--;
  7713  006B08  0632               	decf	Conv_Entero@punteroActual,f,c
  7714  006B0A  A0D8               	btfss	status,0,c
  7715  006B0C  0633               	decf	Conv_Entero@punteroActual+1,f,c
  7716                           
  7717                           ;Convertir.h: 27: *punteroActual = '-';
  7718  006B0E  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7719  006B12  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7720  006B16  0E2D               	movlw	45
  7721  006B18  6EDF               	movwf	indf2,c
  7722  006B1A                     l2716:
  7723                           
  7724                           ;Convertir.h: 28: }
  7725                           ;Convertir.h: 30: numeroReg=convTemp+21-punteroActual;
  7726  006B1A  C032  F015         	movff	Conv_Entero@punteroActual,??_Conv_Entero
  7727  006B1E  C033  F016         	movff	Conv_Entero@punteroActual+1,??_Conv_Entero+1
  7728  006B22  1E15               	comf	??_Conv_Entero,f,c
  7729  006B24  1E16               	comf	??_Conv_Entero+1,f,c
  7730  006B26  4A15               	infsnz	??_Conv_Entero,f,c
  7731  006B28  2A16               	incf	??_Conv_Entero+1,f,c
  7732  006B2A  0E15               	movlw	21
  7733  006B2C  2615               	addwf	??_Conv_Entero,f,c
  7734  006B2E  0E00               	movlw	0
  7735  006B30  2216               	addwfc	??_Conv_Entero+1,f,c
  7736  006B32  0E1A               	movlw	low Conv_Entero@convTemp
  7737  006B34  6E17               	movwf	(??_Conv_Entero+2)& (0+255),c
  7738  006B36  0E00               	movlw	high Conv_Entero@convTemp
  7739  006B38  6E18               	movwf	(??_Conv_Entero+3)& (0+255),c
  7740  006B3A  5015               	movf	??_Conv_Entero,w,c
  7741  006B3C  2617               	addwf	??_Conv_Entero+2,f,c
  7742  006B3E  5016               	movf	??_Conv_Entero+1,w,c
  7743  006B40  2218               	addwfc	??_Conv_Entero+3,f,c
  7744  006B42  C017  F034         	movff	??_Conv_Entero+2,Conv_Entero@numeroReg
  7745  006B46  C018  F035         	movff	??_Conv_Entero+3,Conv_Entero@numeroReg+1
  7746  006B4A  0E00               	movlw	0
  7747  006B4C  BE35               	btfsc	Conv_Entero@numeroReg+1,7,c
  7748  006B4E  0EFF               	movlw	-1
  7749  006B50  6E36               	movwf	Conv_Entero@numeroReg+2,c
  7750  006B52  6E37               	movwf	Conv_Entero@numeroReg+3,c
  7751                           
  7752                           ;Convertir.h: 31: for (i = 0; i< numeroReg; i++)
  7753  006B54  0E00               	movlw	0
  7754  006B56  6E31               	movwf	Conv_Entero@i,c
  7755  006B58  D013               	goto	l2724
  7756  006B5A                     l2720:
  7757                           
  7758                           ;Convertir.h: 32: {
  7759                           ;Convertir.h: 38: ((unsigned char *)conv)[i] = ((const unsigned char *)punteroActual)[i]
      +                          ;
  7760  006B5A  5031               	movf	Conv_Entero@i,w,c
  7761  006B5C  0D01               	mullw	1
  7762  006B5E  50F3               	movf	prodl,w,c
  7763  006B60  2432               	addwf	Conv_Entero@punteroActual,w,c
  7764  006B62  6ED9               	movwf	fsr2l,c
  7765  006B64  50F4               	movf	prodh,w,c
  7766  006B66  2033               	addwfc	Conv_Entero@punteroActual+1,w,c
  7767  006B68  6EDA               	movwf	fsr2h,c
  7768  006B6A  5031               	movf	Conv_Entero@i,w,c
  7769  006B6C  0D01               	mullw	1
  7770  006B6E  50F3               	movf	prodl,w,c
  7771  006B70  2413               	addwf	Conv_Entero@conv,w,c
  7772  006B72  6EE1               	movwf	fsr1l,c
  7773  006B74  50F4               	movf	prodh,w,c
  7774  006B76  2014               	addwfc	Conv_Entero@conv+1,w,c
  7775  006B78  6EE2               	movwf	fsr1h,c
  7776  006B7A  CFDF FFE7          	movff	indf2,indf1
  7777  006B7E  2A31               	incf	Conv_Entero@i,f,c
  7778  006B80                     l2724:
  7779  006B80  C031  F015         	movff	Conv_Entero@i,??_Conv_Entero
  7780  006B84  6A16               	clrf	(??_Conv_Entero+1)& (0+255),c
  7781  006B86  6A17               	clrf	(??_Conv_Entero+2)& (0+255),c
  7782  006B88  6A18               	clrf	(??_Conv_Entero+3)& (0+255),c
  7783  006B8A  5018               	movf	??_Conv_Entero+3,w,c
  7784  006B8C  0A80               	xorlw	128
  7785  006B8E  6E19               	movwf	(??_Conv_Entero+4)& (0+255),c
  7786  006B90  5034               	movf	Conv_Entero@numeroReg,w,c
  7787  006B92  5C15               	subwf	??_Conv_Entero,w,c
  7788  006B94  5035               	movf	Conv_Entero@numeroReg+1,w,c
  7789  006B96  5816               	subwfb	??_Conv_Entero+1,w,c
  7790  006B98  5036               	movf	Conv_Entero@numeroReg+2,w,c
  7791  006B9A  5817               	subwfb	??_Conv_Entero+2,w,c
  7792  006B9C  5037               	movf	Conv_Entero@numeroReg+3,w,c
  7793  006B9E  0A80               	xorlw	128
  7794  006BA0  5819               	subwfb	(??_Conv_Entero+4)& (0+255),w,c
  7795  006BA2  A0D8               	btfss	status,0,c
  7796  006BA4  D7DA               	goto	l2720
  7797                           
  7798                           ;Convertir.h: 39: }
  7799                           ;Convertir.h: 41: return numeroReg - 1;
  7800  006BA6  0EFF               	movlw	255
  7801  006BA8  2434               	addwf	Conv_Entero@numeroReg,w,c
  7802  006BAA  6E0F               	movwf	?_Conv_Entero,c
  7803  006BAC  0EFF               	movlw	255
  7804  006BAE  2035               	addwfc	Conv_Entero@numeroReg+1,w,c
  7805  006BB0  6E10               	movwf	?_Conv_Entero+1,c
  7806  006BB2  0012               	return	
  7807  006BB4                     __end_of_Conv_Entero:
  7808                           	opt stack 0
  7809                           tblptru	equ	0xFF8
  7810                           tblptrh	equ	0xFF7
  7811                           tblptrl	equ	0xFF6
  7812                           tablat	equ	0xFF5
  7813                           prodh	equ	0xFF4
  7814                           prodl	equ	0xFF3
  7815                           postinc0	equ	0xFEE
  7816                           wreg	equ	0xFE8
  7817                           indf1	equ	0xFE7
  7818                           postinc1	equ	0xFE6
  7819                           postdec1	equ	0xFE5
  7820                           fsr1h	equ	0xFE2
  7821                           fsr1l	equ	0xFE1
  7822                           indf2	equ	0xFDF
  7823                           postinc2	equ	0xFDE
  7824                           postdec2	equ	0xFDD
  7825                           fsr2h	equ	0xFDA
  7826                           fsr2l	equ	0xFD9
  7827                           status	equ	0xFD8
  7828                           
  7829 ;; *************** function ___lmul *****************
  7830 ;; Defined at:
  7831 ;;		line 15 in file "/opt/microchip/xc8/v1.32/sources/common/Umul32.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  multiplier      4    0[COMRAM] unsigned long 
  7834 ;;  multiplicand    4    4[COMRAM] unsigned long 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  product         4    8[COMRAM] unsigned long 
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  4    0[COMRAM] unsigned long 
  7839 ;; Registers used:
  7840 ;;		wreg, status,2, status,0
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7846 ;;      Params:         8       0       0       0       0       0       0       0       0
  7847 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7849 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7850 ;;Total ram usage:       12 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; This function calls:
  7853 ;;		Nothing
  7854 ;; This function is called by:
  7855 ;;		_Conv_Entero
  7856 ;;		_PWM_generar
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           	psect	text19
  7861  005A3C                     __ptext19:
  7862                           	opt stack 0
  7863  005A3C                     ___lmul:
  7864                           	opt stack 29
  7865                           
  7866                           ;incstack = 0
  7867  005A3C  0E00               	movlw	0
  7868  005A3E  6E09               	movwf	___lmul@product,c
  7869  005A40  0E00               	movlw	0
  7870  005A42  6E0A               	movwf	___lmul@product+1,c
  7871  005A44  0E00               	movlw	0
  7872  005A46  6E0B               	movwf	___lmul@product+2,c
  7873  005A48  0E00               	movlw	0
  7874  005A4A  6E0C               	movwf	___lmul@product+3,c
  7875  005A4C                     l2438:
  7876  005A4C  A001               	btfss	___lmul@multiplier,0,c
  7877  005A4E  D008               	goto	l2442
  7878  005A50  5005               	movf	___lmul@multiplicand,w,c
  7879  005A52  2609               	addwf	___lmul@product,f,c
  7880  005A54  5006               	movf	___lmul@multiplicand+1,w,c
  7881  005A56  220A               	addwfc	___lmul@product+1,f,c
  7882  005A58  5007               	movf	___lmul@multiplicand+2,w,c
  7883  005A5A  220B               	addwfc	___lmul@product+2,f,c
  7884  005A5C  5008               	movf	___lmul@multiplicand+3,w,c
  7885  005A5E  220C               	addwfc	___lmul@product+3,f,c
  7886  005A60                     l2442:
  7887  005A60  90D8               	bcf	status,0,c
  7888  005A62  3605               	rlcf	___lmul@multiplicand,f,c
  7889  005A64  3606               	rlcf	___lmul@multiplicand+1,f,c
  7890  005A66  3607               	rlcf	___lmul@multiplicand+2,f,c
  7891  005A68  3608               	rlcf	___lmul@multiplicand+3,f,c
  7892  005A6A  90D8               	bcf	status,0,c
  7893  005A6C  3204               	rrcf	___lmul@multiplier+3,f,c
  7894  005A6E  3203               	rrcf	___lmul@multiplier+2,f,c
  7895  005A70  3202               	rrcf	___lmul@multiplier+1,f,c
  7896  005A72  3201               	rrcf	___lmul@multiplier,f,c
  7897  005A74  5004               	movf	___lmul@multiplier+3,w,c
  7898  005A76  1001               	iorwf	___lmul@multiplier,w,c
  7899  005A78  1002               	iorwf	___lmul@multiplier+1,w,c
  7900  005A7A  1003               	iorwf	___lmul@multiplier+2,w,c
  7901  005A7C  A4D8               	btfss	status,2,c
  7902  005A7E  D7E6               	goto	l2438
  7903  005A80  C009  F001         	movff	___lmul@product,?___lmul
  7904  005A84  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  7905  005A88  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  7906  005A8C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  7907  005A90  0012               	return	
  7908  005A92                     __end_of___lmul:
  7909                           	opt stack 0
  7910                           tblptru	equ	0xFF8
  7911                           tblptrh	equ	0xFF7
  7912                           tblptrl	equ	0xFF6
  7913                           tablat	equ	0xFF5
  7914                           prodh	equ	0xFF4
  7915                           prodl	equ	0xFF3
  7916                           postinc0	equ	0xFEE
  7917                           wreg	equ	0xFE8
  7918                           indf1	equ	0xFE7
  7919                           postinc1	equ	0xFE6
  7920                           postdec1	equ	0xFE5
  7921                           fsr1h	equ	0xFE2
  7922                           fsr1l	equ	0xFE1
  7923                           indf2	equ	0xFDF
  7924                           postinc2	equ	0xFDE
  7925                           postdec2	equ	0xFDD
  7926                           fsr2h	equ	0xFDA
  7927                           fsr2l	equ	0xFD9
  7928                           status	equ	0xFD8
  7929                           
  7930 ;; *************** function ___almod *****************
  7931 ;; Defined at:
  7932 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/almod.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  dividend        4    0[COMRAM] long 
  7935 ;;  divisor         4    4[COMRAM] long 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;  sign            1    9[COMRAM] unsigned char 
  7938 ;;  counter         1    8[COMRAM] unsigned char 
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  4    0[COMRAM] long 
  7941 ;; Registers used:
  7942 ;;		wreg, status,2, status,0
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7948 ;;      Params:         8       0       0       0       0       0       0       0       0
  7949 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7951 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7952 ;;Total ram usage:       10 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_Conv_Entero
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text20
  7962  005E12                     __ptext20:
  7963                           	opt stack 0
  7964  005E12                     ___almod:
  7965                           	opt stack 29
  7966                           
  7967                           ;incstack = 0
  7968  005E12  0E00               	movlw	0
  7969  005E14  6E0A               	movwf	___almod@sign,c
  7970  005E16  5004               	movf	___almod@dividend+3,w,c
  7971  005E18  0A80               	xorlw	128
  7972  005E1A  0F80               	addlw	128
  7973  005E1C  E108               	bnz	u1915
  7974  005E1E  0E00               	movlw	0
  7975  005E20  5C03               	subwf	___almod@dividend+2,w,c
  7976  005E22  E105               	bnz	u1915
  7977  005E24  0E00               	movlw	0
  7978  005E26  5C02               	subwf	___almod@dividend+1,w,c
  7979  005E28  E102               	bnz	u1915
  7980  005E2A  0E00               	movlw	0
  7981  005E2C  5C01               	subwf	___almod@dividend,w,c
  7982  005E2E                     u1915:
  7983  005E2E  B0D8               	btfsc	status,0,c
  7984  005E30  D00A               	goto	l2498
  7985  005E32  1E04               	comf	___almod@dividend+3,f,c
  7986  005E34  1E03               	comf	___almod@dividend+2,f,c
  7987  005E36  1E02               	comf	___almod@dividend+1,f,c
  7988  005E38  6C01               	negf	___almod@dividend,c
  7989  005E3A  0E00               	movlw	0
  7990  005E3C  2202               	addwfc	___almod@dividend+1,f,c
  7991  005E3E  2203               	addwfc	___almod@dividend+2,f,c
  7992  005E40  2204               	addwfc	___almod@dividend+3,f,c
  7993  005E42  0E01               	movlw	1
  7994  005E44  6E0A               	movwf	___almod@sign,c
  7995  005E46                     l2498:
  7996  005E46  5008               	movf	___almod@divisor+3,w,c
  7997  005E48  0A80               	xorlw	128
  7998  005E4A  0F80               	addlw	128
  7999  005E4C  E108               	bnz	u1925
  8000  005E4E  0E00               	movlw	0
  8001  005E50  5C07               	subwf	___almod@divisor+2,w,c
  8002  005E52  E105               	bnz	u1925
  8003  005E54  0E00               	movlw	0
  8004  005E56  5C06               	subwf	___almod@divisor+1,w,c
  8005  005E58  E102               	bnz	u1925
  8006  005E5A  0E00               	movlw	0
  8007  005E5C  5C05               	subwf	___almod@divisor,w,c
  8008  005E5E                     u1925:
  8009  005E5E  B0D8               	btfsc	status,0,c
  8010  005E60  D008               	goto	l2502
  8011  005E62  1E08               	comf	___almod@divisor+3,f,c
  8012  005E64  1E07               	comf	___almod@divisor+2,f,c
  8013  005E66  1E06               	comf	___almod@divisor+1,f,c
  8014  005E68  6C05               	negf	___almod@divisor,c
  8015  005E6A  0E00               	movlw	0
  8016  005E6C  2206               	addwfc	___almod@divisor+1,f,c
  8017  005E6E  2207               	addwfc	___almod@divisor+2,f,c
  8018  005E70  2208               	addwfc	___almod@divisor+3,f,c
  8019  005E72                     l2502:
  8020  005E72  5008               	movf	___almod@divisor+3,w,c
  8021  005E74  1005               	iorwf	___almod@divisor,w,c
  8022  005E76  1006               	iorwf	___almod@divisor+1,w,c
  8023  005E78  1007               	iorwf	___almod@divisor+2,w,c
  8024  005E7A  B4D8               	btfsc	status,2,c
  8025  005E7C  D024               	goto	l2518
  8026  005E7E  0E01               	movlw	1
  8027  005E80  6E09               	movwf	___almod@counter,c
  8028  005E82  D006               	goto	l2508
  8029  005E84                     l2506:
  8030  005E84  90D8               	bcf	status,0,c
  8031  005E86  3605               	rlcf	___almod@divisor,f,c
  8032  005E88  3606               	rlcf	___almod@divisor+1,f,c
  8033  005E8A  3607               	rlcf	___almod@divisor+2,f,c
  8034  005E8C  3608               	rlcf	___almod@divisor+3,f,c
  8035  005E8E  2A09               	incf	___almod@counter,f,c
  8036  005E90                     l2508:
  8037  005E90  AE08               	btfss	___almod@divisor+3,7,c
  8038  005E92  D7F8               	goto	l2506
  8039  005E94                     l2510:
  8040  005E94  5005               	movf	___almod@divisor,w,c
  8041  005E96  5C01               	subwf	___almod@dividend,w,c
  8042  005E98  5006               	movf	___almod@divisor+1,w,c
  8043  005E9A  5802               	subwfb	___almod@dividend+1,w,c
  8044  005E9C  5007               	movf	___almod@divisor+2,w,c
  8045  005E9E  5803               	subwfb	___almod@dividend+2,w,c
  8046  005EA0  5008               	movf	___almod@divisor+3,w,c
  8047  005EA2  5804               	subwfb	___almod@dividend+3,w,c
  8048  005EA4  A0D8               	btfss	status,0,c
  8049  005EA6  D008               	goto	l2514
  8050  005EA8  5005               	movf	___almod@divisor,w,c
  8051  005EAA  5E01               	subwf	___almod@dividend,f,c
  8052  005EAC  5006               	movf	___almod@divisor+1,w,c
  8053  005EAE  5A02               	subwfb	___almod@dividend+1,f,c
  8054  005EB0  5007               	movf	___almod@divisor+2,w,c
  8055  005EB2  5A03               	subwfb	___almod@dividend+2,f,c
  8056  005EB4  5008               	movf	___almod@divisor+3,w,c
  8057  005EB6  5A04               	subwfb	___almod@dividend+3,f,c
  8058  005EB8                     l2514:
  8059  005EB8  90D8               	bcf	status,0,c
  8060  005EBA  3208               	rrcf	___almod@divisor+3,f,c
  8061  005EBC  3207               	rrcf	___almod@divisor+2,f,c
  8062  005EBE  3206               	rrcf	___almod@divisor+1,f,c
  8063  005EC0  3205               	rrcf	___almod@divisor,f,c
  8064  005EC2  2E09               	decfsz	___almod@counter,f,c
  8065  005EC4  D7E7               	goto	l2510
  8066  005EC6                     l2518:
  8067  005EC6  500A               	movf	___almod@sign,w,c
  8068  005EC8  B4D8               	btfsc	status,2,c
  8069  005ECA  D008               	goto	l2522
  8070  005ECC  1E04               	comf	___almod@dividend+3,f,c
  8071  005ECE  1E03               	comf	___almod@dividend+2,f,c
  8072  005ED0  1E02               	comf	___almod@dividend+1,f,c
  8073  005ED2  6C01               	negf	___almod@dividend,c
  8074  005ED4  0E00               	movlw	0
  8075  005ED6  2202               	addwfc	___almod@dividend+1,f,c
  8076  005ED8  2203               	addwfc	___almod@dividend+2,f,c
  8077  005EDA  2204               	addwfc	___almod@dividend+3,f,c
  8078  005EDC                     l2522:
  8079  005EDC  C001  F001         	movff	___almod@dividend,?___almod
  8080  005EE0  C002  F002         	movff	___almod@dividend+1,?___almod+1
  8081  005EE4  C003  F003         	movff	___almod@dividend+2,?___almod+2
  8082  005EE8  C004  F004         	movff	___almod@dividend+3,?___almod+3
  8083  005EEC  0012               	return	
  8084  005EEE                     __end_of___almod:
  8085                           	opt stack 0
  8086                           tblptru	equ	0xFF8
  8087                           tblptrh	equ	0xFF7
  8088                           tblptrl	equ	0xFF6
  8089                           tablat	equ	0xFF5
  8090                           prodh	equ	0xFF4
  8091                           prodl	equ	0xFF3
  8092                           postinc0	equ	0xFEE
  8093                           wreg	equ	0xFE8
  8094                           indf1	equ	0xFE7
  8095                           postinc1	equ	0xFE6
  8096                           postdec1	equ	0xFE5
  8097                           fsr1h	equ	0xFE2
  8098                           fsr1l	equ	0xFE1
  8099                           indf2	equ	0xFDF
  8100                           postinc2	equ	0xFDE
  8101                           postdec2	equ	0xFDD
  8102                           fsr2h	equ	0xFDA
  8103                           fsr2l	equ	0xFD9
  8104                           status	equ	0xFD8
  8105                           
  8106 ;; *************** function ___aldiv *****************
  8107 ;; Defined at:
  8108 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/aldiv.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  dividend        4    0[COMRAM] long 
  8111 ;;  divisor         4    4[COMRAM] long 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  quotient        4   10[COMRAM] long 
  8114 ;;  sign            1    9[COMRAM] unsigned char 
  8115 ;;  counter         1    8[COMRAM] unsigned char 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  4    0[COMRAM] long 
  8118 ;; Registers used:
  8119 ;;		wreg, status,2, status,0
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8125 ;;      Params:         8       0       0       0       0       0       0       0       0
  8126 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8128 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8129 ;;Total ram usage:       14 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_Conv_Entero
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text21
  8139  0062D2                     __ptext21:
  8140                           	opt stack 0
  8141  0062D2                     ___aldiv:
  8142                           	opt stack 29
  8143                           
  8144                           ;incstack = 0
  8145  0062D2  0E00               	movlw	0
  8146  0062D4  6E0A               	movwf	___aldiv@sign,c
  8147  0062D6  5008               	movf	___aldiv@divisor+3,w,c
  8148  0062D8  0A80               	xorlw	128
  8149  0062DA  0F80               	addlw	128
  8150  0062DC  E108               	bnz	u1855
  8151  0062DE  0E00               	movlw	0
  8152  0062E0  5C07               	subwf	___aldiv@divisor+2,w,c
  8153  0062E2  E105               	bnz	u1855
  8154  0062E4  0E00               	movlw	0
  8155  0062E6  5C06               	subwf	___aldiv@divisor+1,w,c
  8156  0062E8  E102               	bnz	u1855
  8157  0062EA  0E00               	movlw	0
  8158  0062EC  5C05               	subwf	___aldiv@divisor,w,c
  8159  0062EE                     u1855:
  8160  0062EE  B0D8               	btfsc	status,0,c
  8161  0062F0  D00A               	goto	l2454
  8162  0062F2  1E08               	comf	___aldiv@divisor+3,f,c
  8163  0062F4  1E07               	comf	___aldiv@divisor+2,f,c
  8164  0062F6  1E06               	comf	___aldiv@divisor+1,f,c
  8165  0062F8  6C05               	negf	___aldiv@divisor,c
  8166  0062FA  0E00               	movlw	0
  8167  0062FC  2206               	addwfc	___aldiv@divisor+1,f,c
  8168  0062FE  2207               	addwfc	___aldiv@divisor+2,f,c
  8169  006300  2208               	addwfc	___aldiv@divisor+3,f,c
  8170  006302  0E01               	movlw	1
  8171  006304  6E0A               	movwf	___aldiv@sign,c
  8172  006306                     l2454:
  8173  006306  5004               	movf	___aldiv@dividend+3,w,c
  8174  006308  0A80               	xorlw	128
  8175  00630A  0F80               	addlw	128
  8176  00630C  E108               	bnz	u1865
  8177  00630E  0E00               	movlw	0
  8178  006310  5C03               	subwf	___aldiv@dividend+2,w,c
  8179  006312  E105               	bnz	u1865
  8180  006314  0E00               	movlw	0
  8181  006316  5C02               	subwf	___aldiv@dividend+1,w,c
  8182  006318  E102               	bnz	u1865
  8183  00631A  0E00               	movlw	0
  8184  00631C  5C01               	subwf	___aldiv@dividend,w,c
  8185  00631E                     u1865:
  8186  00631E  B0D8               	btfsc	status,0,c
  8187  006320  D00A               	goto	l2460
  8188  006322  1E04               	comf	___aldiv@dividend+3,f,c
  8189  006324  1E03               	comf	___aldiv@dividend+2,f,c
  8190  006326  1E02               	comf	___aldiv@dividend+1,f,c
  8191  006328  6C01               	negf	___aldiv@dividend,c
  8192  00632A  0E00               	movlw	0
  8193  00632C  2202               	addwfc	___aldiv@dividend+1,f,c
  8194  00632E  2203               	addwfc	___aldiv@dividend+2,f,c
  8195  006330  2204               	addwfc	___aldiv@dividend+3,f,c
  8196  006332  0E01               	movlw	1
  8197  006334  1A0A               	xorwf	___aldiv@sign,f,c
  8198  006336                     l2460:
  8199  006336  0E00               	movlw	0
  8200  006338  6E0B               	movwf	___aldiv@quotient,c
  8201  00633A  0E00               	movlw	0
  8202  00633C  6E0C               	movwf	___aldiv@quotient+1,c
  8203  00633E  0E00               	movlw	0
  8204  006340  6E0D               	movwf	___aldiv@quotient+2,c
  8205  006342  0E00               	movlw	0
  8206  006344  6E0E               	movwf	___aldiv@quotient+3,c
  8207  006346  5008               	movf	___aldiv@divisor+3,w,c
  8208  006348  1005               	iorwf	___aldiv@divisor,w,c
  8209  00634A  1006               	iorwf	___aldiv@divisor+1,w,c
  8210  00634C  1007               	iorwf	___aldiv@divisor+2,w,c
  8211  00634E  B4D8               	btfsc	status,2,c
  8212  006350  D02A               	goto	l2482
  8213  006352  0E01               	movlw	1
  8214  006354  6E09               	movwf	___aldiv@counter,c
  8215  006356  D006               	goto	l2468
  8216  006358                     l2466:
  8217  006358  90D8               	bcf	status,0,c
  8218  00635A  3605               	rlcf	___aldiv@divisor,f,c
  8219  00635C  3606               	rlcf	___aldiv@divisor+1,f,c
  8220  00635E  3607               	rlcf	___aldiv@divisor+2,f,c
  8221  006360  3608               	rlcf	___aldiv@divisor+3,f,c
  8222  006362  2A09               	incf	___aldiv@counter,f,c
  8223  006364                     l2468:
  8224  006364  AE08               	btfss	___aldiv@divisor+3,7,c
  8225  006366  D7F8               	goto	l2466
  8226  006368                     l2470:
  8227  006368  90D8               	bcf	status,0,c
  8228  00636A  360B               	rlcf	___aldiv@quotient,f,c
  8229  00636C  360C               	rlcf	___aldiv@quotient+1,f,c
  8230  00636E  360D               	rlcf	___aldiv@quotient+2,f,c
  8231  006370  360E               	rlcf	___aldiv@quotient+3,f,c
  8232  006372  5005               	movf	___aldiv@divisor,w,c
  8233  006374  5C01               	subwf	___aldiv@dividend,w,c
  8234  006376  5006               	movf	___aldiv@divisor+1,w,c
  8235  006378  5802               	subwfb	___aldiv@dividend+1,w,c
  8236  00637A  5007               	movf	___aldiv@divisor+2,w,c
  8237  00637C  5803               	subwfb	___aldiv@dividend+2,w,c
  8238  00637E  5008               	movf	___aldiv@divisor+3,w,c
  8239  006380  5804               	subwfb	___aldiv@dividend+3,w,c
  8240  006382  A0D8               	btfss	status,0,c
  8241  006384  D009               	goto	l2478
  8242  006386  5005               	movf	___aldiv@divisor,w,c
  8243  006388  5E01               	subwf	___aldiv@dividend,f,c
  8244  00638A  5006               	movf	___aldiv@divisor+1,w,c
  8245  00638C  5A02               	subwfb	___aldiv@dividend+1,f,c
  8246  00638E  5007               	movf	___aldiv@divisor+2,w,c
  8247  006390  5A03               	subwfb	___aldiv@dividend+2,f,c
  8248  006392  5008               	movf	___aldiv@divisor+3,w,c
  8249  006394  5A04               	subwfb	___aldiv@dividend+3,f,c
  8250  006396  800B               	bsf	___aldiv@quotient,0,c
  8251  006398                     l2478:
  8252  006398  90D8               	bcf	status,0,c
  8253  00639A  3208               	rrcf	___aldiv@divisor+3,f,c
  8254  00639C  3207               	rrcf	___aldiv@divisor+2,f,c
  8255  00639E  3206               	rrcf	___aldiv@divisor+1,f,c
  8256  0063A0  3205               	rrcf	___aldiv@divisor,f,c
  8257  0063A2  2E09               	decfsz	___aldiv@counter,f,c
  8258  0063A4  D7E1               	goto	l2470
  8259  0063A6                     l2482:
  8260  0063A6  500A               	movf	___aldiv@sign,w,c
  8261  0063A8  B4D8               	btfsc	status,2,c
  8262  0063AA  D008               	goto	l2486
  8263  0063AC  1E0E               	comf	___aldiv@quotient+3,f,c
  8264  0063AE  1E0D               	comf	___aldiv@quotient+2,f,c
  8265  0063B0  1E0C               	comf	___aldiv@quotient+1,f,c
  8266  0063B2  6C0B               	negf	___aldiv@quotient,c
  8267  0063B4  0E00               	movlw	0
  8268  0063B6  220C               	addwfc	___aldiv@quotient+1,f,c
  8269  0063B8  220D               	addwfc	___aldiv@quotient+2,f,c
  8270  0063BA  220E               	addwfc	___aldiv@quotient+3,f,c
  8271  0063BC                     l2486:
  8272  0063BC  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  8273  0063C0  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  8274  0063C4  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  8275  0063C8  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  8276  0063CC  0012               	return	
  8277  0063CE                     __end_of___aldiv:
  8278                           	opt stack 0
  8279                           tblptru	equ	0xFF8
  8280                           tblptrh	equ	0xFF7
  8281                           tblptrl	equ	0xFF6
  8282                           tablat	equ	0xFF5
  8283                           prodh	equ	0xFF4
  8284                           prodl	equ	0xFF3
  8285                           postinc0	equ	0xFEE
  8286                           wreg	equ	0xFE8
  8287                           indf1	equ	0xFE7
  8288                           postinc1	equ	0xFE6
  8289                           postdec1	equ	0xFE5
  8290                           fsr1h	equ	0xFE2
  8291                           fsr1l	equ	0xFE1
  8292                           indf2	equ	0xFDF
  8293                           postinc2	equ	0xFDE
  8294                           postdec2	equ	0xFDD
  8295                           fsr2h	equ	0xFDA
  8296                           fsr2l	equ	0xFD9
  8297                           status	equ	0xFD8
  8298                           tblptru	equ	0xFF8
  8299                           tblptrh	equ	0xFF7
  8300                           tblptrl	equ	0xFF6
  8301                           tablat	equ	0xFF5
  8302                           prodh	equ	0xFF4
  8303                           prodl	equ	0xFF3
  8304                           postinc0	equ	0xFEE
  8305                           wreg	equ	0xFE8
  8306                           indf1	equ	0xFE7
  8307                           postinc1	equ	0xFE6
  8308                           postdec1	equ	0xFE5
  8309                           fsr1h	equ	0xFE2
  8310                           fsr1l	equ	0xFE1
  8311                           indf2	equ	0xFDF
  8312                           postinc2	equ	0xFDE
  8313                           postdec2	equ	0xFDD
  8314                           fsr2h	equ	0xFDA
  8315                           fsr2l	equ	0xFD9
  8316                           status	equ	0xFD8
  8317                           
  8318                           	psect	rparam
  8319  0000                     tblptru	equ	0xFF8
  8320                           tblptrh	equ	0xFF7
  8321                           tblptrl	equ	0xFF6
  8322                           tablat	equ	0xFF5
  8323                           prodh	equ	0xFF4
  8324                           prodl	equ	0xFF3
  8325                           postinc0	equ	0xFEE
  8326                           wreg	equ	0xFE8
  8327                           indf1	equ	0xFE7
  8328                           postinc1	equ	0xFE6
  8329                           postdec1	equ	0xFE5
  8330                           fsr1h	equ	0xFE2
  8331                           fsr1l	equ	0xFE1
  8332                           indf2	equ	0xFDF
  8333                           postinc2	equ	0xFDE
  8334                           postdec2	equ	0xFDD
  8335                           fsr2h	equ	0xFDA
  8336                           fsr2l	equ	0xFD9
  8337                           status	equ	0xFD8


Data Sizes:
    Strings     395
    Constant    0
    Data        226
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     60      66
    BANK0           160     50     132
    BANK1           256      0     160
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Conv_Entero@conv	PTR unsigned char  size(2) Largest target is 20
		 -> main@cadena(BANK0[20]), main@cad(BANK0[20]), 

    Conv_Entero@punteroActual	PTR unsigned char  size(2) Largest target is 21
		 -> Conv_Entero@convTemp(COMRAM[21]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 16
		 -> STR_91(CODE[8]), STR_90(CODE[10]), STR_89(CODE[8]), STR_88(CODE[10]), 
		 -> STR_87(CODE[10]), STR_86(CODE[8]), STR_85(CODE[10]), STR_84(CODE[10]), 
		 -> STR_83(CODE[14]), STR_82(CODE[7]), STR_81(CODE[9]), STR_80(CODE[7]), 
		 -> STR_79(CODE[9]), STR_78(CODE[9]), STR_77(CODE[7]), STR_76(CODE[9]), 
		 -> STR_75(CODE[9]), STR_74(CODE[12]), STR_73(CODE[7]), STR_72(CODE[2]), 
		 -> STR_71(CODE[4]), STR_70(CODE[11]), STR_69(CODE[12]), STR_68(CODE[12]), 
		 -> STR_67(CODE[6]), STR_66(CODE[5]), STR_65(CODE[5]), STR_64(CODE[5]), 
		 -> STR_63(CODE[6]), STR_62(CODE[5]), STR_61(CODE[5]), STR_60(CODE[5]), 
		 -> STR_59(CODE[6]), STR_58(CODE[5]), STR_57(CODE[5]), STR_56(CODE[5]), 
		 -> STR_55(CODE[6]), STR_54(CODE[5]), STR_53(CODE[5]), STR_52(CODE[6]), 
		 -> STR_51(CODE[5]), STR_50(CODE[5]), STR_49(CODE[5]), STR_48(CODE[5]), 
		 -> STR_47(CODE[5]), STR_46(CODE[5]), STR_45(CODE[5]), STR_44(CODE[5]), 
		 -> STR_43(CODE[5]), STR_42(CODE[5]), STR_41(CODE[5]), STR_40(CODE[5]), 
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_37(CODE[5]), STR_36(CODE[5]), 
		 -> STR_35(CODE[5]), STR_34(CODE[5]), STR_33(CODE[5]), STR_32(CODE[5]), 
		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[5]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), 
		 -> STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[9]), STR_14(CODE[14]), STR_13(CODE[9]), STR_12(CODE[9]), 
		 -> STR_11(CODE[14]), STR_10(CODE[9]), STR_9(CODE[14]), STR_8(CODE[12]), 
		 -> STR_7(CODE[12]), STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[12]), 
		 -> STR_3(CODE[7]), STR_2(CODE[16]), STR_1(CODE[11]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 20
		 -> main@cadena(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_TRI_2
    _main->_TRI_3
    _lcd_goto->_Lcd_Cmd
    _TRI_3->___awdiv
    _TRI_2->___awdiv
    _PWM_generar->___lldiv
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Conv_Entero->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0   20876
                                             59 COMRAM     1     1      0
                                              0 BANK0     50    50      0
                        _Conv_Entero
                         _Lcd_Chr_CP
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                        _PWM_generar
                             _SENO_1
                             _SENO_2
                             _SENO_3
                              _TRI_1
                              _TRI_2
                              _TRI_3
                             ___wmul
                           _lcd_goto
                              _tm_1s
 ---------------------------------------------------------------------------------
 (1) _tm_1s                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             7     3      4     568
                                              3 COMRAM     7     3      4
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TRI_3                                               51    51      0     901
                                              8 COMRAM    51    51      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _TRI_2                                               51    51      0     901
                                              8 COMRAM    51    51      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     556
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TRI_1                                               51    51      0     254
                                              0 COMRAM    51    51      0
 ---------------------------------------------------------------------------------
 (1) _SENO_3                                              41    41      0     254
                                              0 COMRAM    41    41      0
 ---------------------------------------------------------------------------------
 (1) _SENO_2                                              47    47      0     254
                                              0 COMRAM    47    47      0
 ---------------------------------------------------------------------------------
 (1) _SENO_1                                              51    51      0     254
                                              0 COMRAM    51    51      0
 ---------------------------------------------------------------------------------
 (1) _PWM_generar                                         20    16      4    1408
                                             13 COMRAM    20    16      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     2      3   12181
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     661
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Conv_Entero                                         41    35      6    2017
                                             14 COMRAM    41    35      6
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     450
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     424
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Conv_Entero
     ___aldiv
     ___almod
     ___lmul
   _Lcd_Chr_CP
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PWM_generar
     ___lldiv
     ___lmul
   _SENO_1
   _SENO_2
   _SENO_3
   _TRI_1
   _TRI_2
     ___awdiv
   _TRI_3
     ___awdiv
   ___wmul
   _lcd_goto
     _Lcd_Cmd
   _tm_1s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      A0       8       62.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      84       5       82.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3C      42       1       69.5%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     166       6        0.0%
DATA                 0      0     166       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu May 23 19:36:11 2019

                       _B 00D4                         _C 003D                         _D 003F  
                       _M 00D6                         _e 00D8                         _p 00DA  
                       _q 00DC                         _r 00DE                         _t 00E0  
                       _w 00E2                        l37 6576              ___awdiv@sign 0006  
     ___wmul@multiplicand 0003              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000         PWM_generar@PR2cal 001A  
                     l121 6E66                       l204 7BC6                       l222 7DE6  
                     l313 6138                       l163 7720                       l316 61B6  
                     l228 7E18                       l341 6232                       l181 7972  
                     l149 7758                       l175 792E                       l280 60BC  
                     l344 62B0                       l169 778A                       l362 6870  
                     l380 69BA                       l277 603E                       l198 7B94  
                     l295 5F44                       l359 67F2                       l377 693C  
                     l298 5FC2                       l836 5C2E              __CFG_CPB$OFF 000000  
                     _PR2 000FBB              __CFG_CPD$OFF 000000                       wreg 000FE8  
            __CFG_LVP$OFF 000000                      l3004 691A                      l3022 69C2  
                    l3014 6944                      l3104 6F8A                      l3130 702A  
                    l3116 6FD8                      l2510 5E94                      l2502 5E72  
                    l3150 707A                      l3054 6E4C                      l3160 70AC  
                    l3152 7084                      l3080 6EF2                      l3048 6E34  
                    l2522 5EDC                      l2514 5EB8                      l2506 5E84  
                    l2442 5A60                      l3410 7770                      l3218 7226  
                    l3162 70B6                      l3154 708E                      l3170 70D8  
                    l2460 6336                      l2508 5E90                      l2540 5DB2  
                    l3420 77A6                      l3404 774E                      l3164 70C0  
                    l3156 7098                      l3172 7112                      l3092 6F40  
                    l3500 799A                      l3068 6EA8                      l2470 6368  
                    l2454 6306                      l2518 5EC6                      l2438 5A4C  
                    l2702 6A5C                      l2630 5A9C                      l2550 5DD4  
                    l2534 5D92                      l3350 7606                      l3334 7592  
                    l3318 751E                      l3238 72BE                      l3182 7132  
                    l3166 70CA                      l3158 70A2                      l2720 6B5A  
                    l2632 5AA2                      l2640 5ACA                      l3600 7B8A  
                    l3176 7120                      l3184 713C                      l2466 6358  
                    l2482 63A6                      l2642 5AD2                      l2634 5AA8  
                    l2650 5B5A                      l2546 5DC8                      l2562 5DFA  
                    l3514 79EE                      l3426 77B8                      l3258 7356  
                    l2468 6364                      l2724 6B80                      l2716 6B1A  
                    l2628 5A96                      l2652 5B60                      l2660 5B74  
                    l2580 5BF0                      l2812 60C4                      l2804 6046  
                    l2548 5DD0                      l3196 7184                      l3428 77C4  
                    l2486 63BC                      l2478 6398                      l2646 5AE4  
                    l2638 5AB0                      l2654 5B66                      l2662 5B8E  
                    l2742 6C36                      l2566 5E08                      l2558 5DF0  
                    l3622 7BF4                      l3606 7BAC                      l3542 7A76  
                    l3470 7912                      l3438 7808                      l3382 76EE  
                    l3366 767A                      l3278 73EE                      l2664 5B96  
                    l2656 5B6C                      l2576 5BE0                      l2832 5F22  
                    l2672 59F0                      l3616 7BE2                      l3536 7A62  
                    l3544 7A80                      l3624 7BFE                      l2498 5E46  
                    l2578 5BEC                      l2746 6C86                      l2850 5FCA  
                    l2842 5F4C                      l2674 59F6                      l2682 5A0A  
                    l3722 7DDC                      l3482 7940                      l3298 7486  
                    l2668 5BAA                      l2588 5C20                      l2916 6210  
                    l2676 59FC                      l2684 5A34                      l3716 7DC8  
                    l3636 7C40                      l3572 7B08                      l3476 7924  
                    l3388 7706                      l2934 62B8                      l2926 623A  
                    l2678 5A02                      l3566 7AF4                      l3574 7B12  
                    l3398 773C                      l2960 67D0                      l3744 7E46  
                    l3728 7DFE                      l3664 7CC8                      l3488 7958  
                    l2794 601C                      l2874 6116                      l2970 67FA  
                    l3738 7E34                      l3658 7CB4                      l3666 7CD2  
                    l3746 7E50                      l3594 7B76                      l3498 798E  
                    l2892 61BE                      l2884 6140                      l3694 7D5A  
                    l3688 7D46                      l3696 7D64                      l2978 6878  
                    STR_1 7EF5                      STR_2 7E73                      STR_3 7F8C  
                    STR_4 7EAD                      STR_5 7EC5                      STR_6 7EDD  
                    STR_7 7ED1                      STR_8 7EDD                      STR_9 7E83  
                    u2105 6A24                      u2140 6C1C                      u2125 6B04  
                    u2150 6C72                      u2145 6C12                      u2401 61EA  
                    u2155 6C68                      u2331 60F0                      u2180 6DC2  
                    u2261 5EFC                      u2175 6D16                      u2191 5FF6  
                    u2185 6DB8                      u1805 662A                      u2541 68A4  
                    u1815 6644                      u2471 675A                      u1825 6668  
                    u1915 5E2E                      u1925 5E5E                      u1855 62EE  
                    u1775 63DC                      u3607 796A                      u1865 631E  
                    u1785 63F6                      u3617 7BA4                      u3537 6E44  
                    u1795 641A                      u3707 5C8C                      u3627 7BBE  
                    u3547 6E5E                      u3717 5C9A                      u3637 7DF6  
                    u3557 76FE                      u3807 6536                      u3727 5CA8  
                    u3647 7E10                      u3567 7718                      u3817 6546  
                    u3737 5CB6                      u3657 5C46                      u3577 7768  
                    u3827 6556                      u3747 5CC4                      u3667 5C54  
                    u3587 7782                      u3837 6566                      u3757 669E  
                    u3677 5C62                      u3597 7950                      u3847 65A6  
                    u3767 6720                      u3687 5C70                      u3857 65E8  
                    u3777 673C                      u3697 5C7E                      u3867 6450  
                    u3787 6516                      u3877 64D2                      u3797 6526  
                    u3887 64E8                      _TMR2 000FBC               _PWM_generar 6BB4  
                    _main 6DE2                      fsr2h 000FDA                      indf1 000FE7  
                    fsr1l 000FE1                      indf2 000FDF                      fsr2l 000FD9  
           __CFG_BORV$190 000000              lcd_goto@data 000A                      prodh 000FF4  
                    prodl 000FF3                      start 0000             __CFG_IESO$OFF 000000  
         __end_of_Lcd_Cmd 64F4           __end_of_Lcd_Out 5AF4             __CFG_MCLRE$ON 000000  
            main@cantidad 00CD                _Lcd_Chr_CP 661C            Lcd_Out2@buffer 0005  
     __end_of_Conv_Entero 6BB4           __end_of___aldiv 63CE           __end_of___almod 5EEE  
                   ?_main 0001           __end_of___awdiv 5E12                     STR_10 7F6A  
                   STR_11 7E91                     STR_12 7F6A                     STR_20 7FCD  
                   STR_21 7FD7                     STR_13 7F7C                     STR_14 7E83  
                   STR_30 7FBE                     STR_22 7FA5                     STR_31 7FC3  
                   STR_23 7FB4                     STR_15 7F73                     STR_40 7FA5  
                   STR_24 7FB9                     STR_32 7FCD                     STR_16 7FAA  
                   STR_41 7FAF                     STR_25 7FC3                     STR_33 7FD7  
                   STR_17 7FAF                     STR_34 7FA5                     STR_42 7FB9  
                   STR_50 7FCD                     STR_26 7FCD                     STR_18 7FB9  
                   STR_35 7FAF                     STR_43 7FC3                     STR_27 7FD7  
                   STR_51 7FDC                     STR_19 7FC3                     STR_28 7FA5  
                   STR_36 7FB9                     STR_60 7FE1                     STR_44 7FD2  
                   STR_52 7F9F                     STR_29 7FAF                     STR_45 7FD7  
                   STR_61 7FE6                     STR_53 7FE6                     STR_37 7FC8  
                   STR_46 7FA5                     STR_38 7FCD                     STR_62 7FF5  
                   STR_54 7FF0                     STR_70 7F00                     STR_63 7F93  
                   STR_47 7FAF                     STR_39 7FD7                     STR_71 7FFA  
                   STR_55 7F93                     STR_72 7F97                     STR_48 7FB9  
                   STR_64 7FE1                     STR_80 7F51                     STR_56 7FE1  
                   STR_49 7FC3                     STR_65 7FE6                     STR_57 7FEB  
                   STR_73 7F85                     STR_81 7F61                     STR_66 7FF0  
                   STR_58 7FF0                     STR_82 7F63                     STR_90 7F33  
                   STR_74 7EB9                     STR_59 7F93                     STR_91 7F35  
                   STR_67 7F99                     STR_75 7F46                     STR_83 7E9F  
                   STR_68 7EC5                     STR_76 7F4F                     STR_84 7F15  
                   STR_77 7F3F                     STR_85 7F1F                     STR_69 7EE9  
                   STR_86 7F0D                     STR_78 7F3D                     STR_79 7F58  
                   STR_87 7F0B                     STR_88 7F29                     STR_89 7F21  
         __end_of___lldiv 5C40           ___awdiv@divisor 0003                     _T2CON 000FBA  
         ___awdiv@counter 0005                     _TRI_1 61D8                     _TRI_2 6748  
                   _TRI_3 6892             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000       ___lmul@multiplicand 0005             __CFG_WRT3$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
                   _tm_1s 5C40                     main@A 00D3                     main@V 00CA  
                   main@X 00CF                     main@Z 00D1                     tablat 000FF5  
                   status 000FD8            __CFG_T3CMX$RC0 000000            __CFG_ICPRT$OFF 000000  
          __CFG_PBADEN$ON 000000          __end_of_Lcd_Init 661C          __end_of_Lcd_Out2 5BBE  
         __initialization 5AF4              __end_of_main 7E72                    ??_main 003C  
           __activetblptr 000002                    ?_TRI_1 0001                    ?_TRI_2 0001  
                  ?_TRI_3 0001            __CFG_SDOMX$RB3 000000           __CFG_CCP2MX$RC1 000000  
                  TRI_1@i 0032                    TRI_1@j 0030                    TRI_1@k 002E  
                  TRI_2@i 003A                    TRI_2@j 0038                    TRI_2@k 0036  
                  TRI_3@i 003A                    TRI_3@j 0038                    TRI_3@k 0036  
                  ?_tm_1s 0001                    _CCPR2L 000F90          ___awdiv@dividend 0001  
                  _ANSELA 000F5B                    _ANSELD 000F5E            __CFG_WDTEN$OFF 000000  
                  _OSCCON 000FD3                    _SENO_1 5FE4                    _SENO_2 5EEE  
                  _SENO_3 60DE                 ??_Lcd_Cmd 0001                 ??_Lcd_Out 0007  
          __CFG_XINST$OFF 000000               _Conv_Entero 69DC          __end_of_lcd_goto 5A3C  
                  ___lmul 5A3C               ?_Lcd_Chr_CP 0001                 ??___aldiv 0009  
               ??___almod 0009                    ___wmul 5986                 ??___awdiv 0005  
          __CFG_STVREN$ON 000000                 ??___lldiv 0009      PWM_generar@AuxCCPR2L 001E  
                  clear_0 5AFA          ___awdiv@quotient 0007              __mediumconst 7E72  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
    __CFG_LS48MHZ$SYS24X4 000000                __accesstop 0060   __end_of__initialization 5B4C  
           __end_of_TRI_1 62D2             __end_of_TRI_2 6892             __end_of_TRI_3 69DC  
          __pcstackCOMRAM 0001              __pidataBANK0 59AC              __pidataBANK1 5CCE  
           __end_of_tm_1s 5CCE          TRI_1@valoresSeno 0006           __CFG_PCLKEN$OFF 000000  
             SENO_1@F7354 0100                   ??_TRI_1 0001                   ??_TRI_2 0009  
                 ??_TRI_3 0009               SENO_2@F7359 0060               SENO_3@F7364 0084  
               ?_Lcd_Init 0001                 ?_Lcd_Out2 0004                   ??_tm_1s 0001  
     __size_of_Lcd_Chr_CP 012C                __pbssBANK0 00D4                   ?_SENO_1 0001  
                 ?_SENO_2 0001                   ?_SENO_3 0001              ?_PWM_generar 000E  
       SENO_1@valoresSeno 0006                   SENO_1@i 0032                   SENO_1@j 0030  
                 SENO_1@k 002E                   SENO_2@i 002E                   SENO_2@j 002C  
                 SENO_2@k 002A                   SENO_3@i 0028                   SENO_3@j 0026  
                 SENO_3@k 0024         __CFG_PLLSEL$PLL4X 000000                   ?___lmul 0001  
                 ?___wmul 0001                   _CCP2CON 000F97            ___lmul@product 0009  
        TRI_2@valoresSeno 000E                ??_Lcd_Init 0004                ??_Lcd_Out2 0007  
               ?_lcd_goto 0004                   _Lcd_Cmd 63CE                   _Lcd_Out 5A92  
         __size_of_SENO_1 00FA           __size_of_SENO_2 00F6           __size_of_SENO_3 00FA  
              _frecuencia 0041         SENO_2@valoresSeno 0006                   __Hparam 0000  
                 __Lparam 0000                   ___aldiv 62D2                   ___almod 5E12  
                 ___awdiv 5D6E           __size_of___lmul 0056                   ___lldiv 5BBE  
         __size_of___wmul 0026                   __pcinit 5AF4     PWM_generar@AuxCCP2CON 0018  
        TRI_3@valoresSeno 000E                   __ramtop 0800                   __ptext0 6DE2  
                 __ptext1 5C40                   __ptext2 59EE                   __ptext3 5986  
                 __ptext4 6892                   __ptext5 6748                   __ptext6 5D6E  
                 __ptext7 61D8                   __ptext8 60DE                   __ptext9 5EEE  
               _T2CONbits 000FBA          ___aldiv@dividend 0001                   main@cad 00A2  
                 main@fre 00CC                ??_lcd_goto 0008      end_of_initialization 5B4C  
           __Lmediumconst 7E72           ___lldiv@divisor 0005         SENO_3@valoresSeno 0006  
         ___lldiv@counter 000D              ?_Conv_Entero 000F          ___aldiv@quotient 000B  
            ??_Lcd_Chr_CP 0001                 Lcd_Out2@x 0004                 Lcd_Out2@y 0007  
                 postdec1 000FE5                   postdec2 000FDD                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE                 _PORTAbits 000F80  
               _PORTCbits 000F82           Conv_Entero@conv 0013                 _PORTDbits 000F83  
               _TRISAbits 000F92                 _TRISCbits 000F94                 _TRISDbits 000F95  
      __end_of_Lcd_Chr_CP 6748                main@cadena 00B6          PWM_generar@ciclo 000E  
          __end_of_SENO_1 60DE            __end_of_SENO_2 5FE4            __end_of_SENO_3 61D8  
    __size_of_PWM_generar 022E            __end_of___lmul 5A92            __end_of___wmul 59AC  
     start_initialization 5AF4             Lcd_Out@buffer 0005         __size_of_Lcd_Init 0128  
       __size_of_Lcd_Out2 0068                  ??_SENO_1 0001                  ??_SENO_2 0001  
                ??_SENO_3 0001           __CFG_nLPBOR$OFF 000000                  ??___lmul 0009  
    Conv_Entero@numeroReg 0034                  ??___wmul 0005               __pdataBANK0 0060  
             __pdataBANK1 0100               __pbssCOMRAM 003D             __pcstackBANK0 00A2  
     __end_of__stringdata 7FFE           __CFG_nPWRTEN$ON 000000                  ?_Lcd_Cmd 0001  
       __size_of_lcd_goto 004E                  ?_Lcd_Out 0004             __pmediumconst 7E72  
                ?___aldiv 0001                  ?___almod 0001                  ?___awdiv 0001  
                ?___lldiv 0001      __size_of_Conv_Entero 01D8          ___almod@dividend 0001  
  PWM_generar@prescalador 0016            __size_of_TRI_1 00FA            __size_of_TRI_2 014A  
          __size_of_TRI_3 014A            __size_of_tm_1s 008E           ___aldiv@divisor 0005  
         ___aldiv@counter 0009            ___wmul@product 0005                  Lcd_Out@x 0004  
        __CFG_WDTPS$32768 000000                  Lcd_Out@y 0007            Conv_Entero@num 002F  
              TRI_1@F7354 0128                TRI_2@F7359 0150                TRI_3@F7364 0178  
            Lcd_Init@data 0005     PWM_generar@frecuencia 0010               __stringdata 7E73  
       ___wmul@multiplier 0001                 lcd_goto@x 0004                 lcd_goto@y 0006  
       __CFG_CFGPLLEN$OFF 000000              Lcd_Out2@data 0008                  _Lcd_Init 64F4  
                _Lcd_Out2 5B56       Conv_Entero@convTemp 001A         ___lmul@multiplier 0001  
               copy_data0 5B20                 copy_data1 5B40          __size_of_Lcd_Cmd 0126  
        __size_of_Lcd_Out 0062                  __Hrparam 0000                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000          __size_of___aldiv 00FC          __size_of___almod 00DC  
        __size_of___awdiv 00A4          __size_of___lldiv 0082            Lcd_Chr_CP@data 0003  
                __ptext10 5FE4                  __ptext11 6BB4                  __ptext20 5E12  
                __ptext12 5BBE                  __ptext21 62D2                  __ptext13 5B56  
                __ptext14 5A92                  __ptext15 661C                  __ptext16 64F4  
                __ptext17 63CE                  __ptext18 69DC                  __ptext19 5A3C  
                _lcd_goto 59EE           ___almod@divisor 0005           ___almod@counter 0009  
           ??_PWM_generar 0012               Lcd_Cmd@data 0003             __size_of_main 1090  
                main@cant 00CE               Lcd_Out@data 0008          ___lldiv@dividend 0001  
Conv_Entero@punteroActual 0032       __end_of_PWM_generar 6DE2              Conv_Entero@i 0031  
    __CFG_CPUDIV$NOCLKDIV 000000         Conv_Entero@numero 000F          ___lldiv@quotient 0009  
            ___aldiv@sign 000A        __CFG_FOSC$INTOSCIO 000000              ___almod@sign 000A  
           ??_Conv_Entero 0015  
