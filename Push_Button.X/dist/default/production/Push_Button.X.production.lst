

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon May 13 20:25:36 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	idataBANK1
    33  006434                     __pidataBANK1:
    34                           	opt stack 0
    35                           
    36                           ;initializer for main@F7724
    37  006434  0004               	dw	4
    38  006436  0008               	dw	8
    39  006438  000C               	dw	12
    40  00643A  0010               	dw	16
    41  00643C  0014               	dw	20
    42  00643E  0018               	dw	24
    43  006440  001C               	dw	28
    44  006442  0020               	dw	32
    45  006444  0024               	dw	36
    46  006446  0028               	dw	40
    47  006448  002C               	dw	44
    48  00644A  0030               	dw	48
    49  00644C  0034               	dw	52
    50  00644E  0038               	dw	56
    51  006450  003C               	dw	60
    52  006452  0040               	dw	64
    53  006454  0044               	dw	68
    54  006456  0048               	dw	72
    55  006458  004C               	dw	76
    56  00645A  0050               	dw	80
    57  00645C  0054               	dw	84
    58  00645E  0058               	dw	88
    59  006460  005C               	dw	92
    60  006462  0060               	dw	96
    61  006464  0064               	dw	100
    62  006466  0060               	dw	96
    63  006468  005C               	dw	92
    64  00646A  0058               	dw	88
    65  00646C  0054               	dw	84
    66  00646E  0050               	dw	80
    67  006470  004C               	dw	76
    68  006472  0048               	dw	72
    69  006474  0044               	dw	68
    70  006476  0040               	dw	64
    71  006478  003C               	dw	60
    72  00647A  0038               	dw	56
    73  00647C  0034               	dw	52
    74  00647E  0030               	dw	48
    75  006480  002C               	dw	44
    76  006482  0028               	dw	40
    77  006484  0024               	dw	36
    78  006486  0020               	dw	32
    79  006488  001C               	dw	28
    80  00648A  0018               	dw	24
    81  00648C  0014               	dw	20
    82  00648E  0010               	dw	16
    83  006490  000C               	dw	12
    84  006492  0008               	dw	8
    85  006494  0004               	dw	4
    86  006496  0000               	dw	0
    87  006498  FFFC               	dw	65532
    88                           
    89                           ;initializer for SENO_100@F7355
    90  00649A  0032               	dw	50
    91  00649C  0023               	dw	35
    92  00649E  0015               	dw	21
    93  0064A0  000A               	dw	10
    94  0064A2  0002               	dw	2
    95  0064A4  0000               	dw	0
    96  0064A6  0002               	dw	2
    97  0064A8  000A               	dw	10
    98  0064AA  0015               	dw	21
    99  0064AC  0023               	dw	35
   100  0064AE  0032               	dw	50
   101  0064B0  0041               	dw	65
   102  0064B2  004F               	dw	79
   103  0064B4  005A               	dw	90
   104  0064B6  0062               	dw	98
   105  0064B8  0064               	dw	100
   106  0064BA  0062               	dw	98
   107  0064BC  005A               	dw	90
   108  0064BE  004F               	dw	79
   109  0064C0  0041               	dw	65
   110                           
   111                           ;initializer for SENO_20@F7367
   112  0064C2  0032               	dw	50
   113  0064C4  0023               	dw	35
   114  0064C6  0015               	dw	21
   115  0064C8  000A               	dw	10
   116  0064CA  0002               	dw	2
   117  0064CC  0000               	dw	0
   118  0064CE  0002               	dw	2
   119  0064D0  000A               	dw	10
   120  0064D2  0015               	dw	21
   121  0064D4  0023               	dw	35
   122  0064D6  0032               	dw	50
   123  0064D8  0041               	dw	65
   124  0064DA  004F               	dw	79
   125  0064DC  005A               	dw	90
   126  0064DE  0062               	dw	98
   127  0064E0  0064               	dw	100
   128  0064E2  0062               	dw	98
   129  0064E4  005A               	dw	90
   130  0064E6  004F               	dw	79
   131  0064E8  0041               	dw	65
   132                           
   133                           ;initializer for SENO_50@F7361
   134  0064EA  0032               	dw	50
   135  0064EC  0023               	dw	35
   136  0064EE  0015               	dw	21
   137  0064F0  000A               	dw	10
   138  0064F2  0002               	dw	2
   139  0064F4  0000               	dw	0
   140  0064F6  0002               	dw	2
   141  0064F8  000A               	dw	10
   142  0064FA  0015               	dw	21
   143  0064FC  0023               	dw	35
   144  0064FE  0032               	dw	50
   145  006500  0041               	dw	65
   146  006502  004F               	dw	79
   147  006504  005A               	dw	90
   148  006506  0062               	dw	98
   149  006508  0064               	dw	100
   150  00650A  0062               	dw	98
   151  00650C  005A               	dw	90
   152  00650E  004F               	dw	79
   153  006510  0041               	dw	65
   154  0000                     _ANSELA	set	3931
   155  0000                     _ANSELB	set	3932
   156  0000                     _ANSELD	set	3934
   157  0000                     _CCP2CON	set	3991
   158  0000                     _CCPR2L	set	3984
   159  0000                     _INTCON2bits	set	4081
   160  0000                     _PORTAbits	set	3968
   161  0000                     _PORTB	set	3969
   162  0000                     _PORTBbits	set	3969
   163  0000                     _PORTCbits	set	3970
   164  0000                     _PORTDbits	set	3971
   165  0000                     _PR2	set	4027
   166  0000                     _T2CON	set	4026
   167  0000                     _T2CONbits	set	4026
   168  0000                     _TMR2	set	4028
   169  0000                     _TRISAbits	set	3986
   170  0000                     _TRISB	set	3987
   171  0000                     _TRISCbits	set	3988
   172  0000                     _TRISDbits	set	3989
   173                           
   174                           	psect	mediumconst
   175  007EC8                     __pmediumconst:
   176                           	opt stack 0
   177  007EC8  00                 	db	0
   178  007EC9                     __stringdata:
   179                           	opt stack 0
   180  007EC9                     STR_1:
   181  007EC9  55                 	db	85	;'U'
   182  007ECA  6E                 	db	110	;'n'
   183  007ECB  69                 	db	105	;'i'
   184  007ECC  76                 	db	118	;'v'
   185  007ECD  65                 	db	101	;'e'
   186  007ECE  72                 	db	114	;'r'
   187  007ECF  73                 	db	115	;'s'
   188  007ED0  69                 	db	105	;'i'
   189  007ED1  64                 	db	100	;'d'
   190  007ED2  61                 	db	97	;'a'
   191  007ED3  64                 	db	100	;'d'
   192  007ED4  20                 	db	32
   193  007ED5  64                 	db	100	;'d'
   194  007ED6  65                 	db	101	;'e'
   195  007ED7  20                 	db	32
   196  007ED8  00                 	db	0
   197  007ED9                     STR_2:
   198  007ED9  50                 	db	80	;'P'
   199  007EDA  72                 	db	114	;'r'
   200  007EDB  6F                 	db	111	;'o'
   201  007EDC  79                 	db	121	;'y'
   202  007EDD  65                 	db	101	;'e'
   203  007EDE  63                 	db	99	;'c'
   204  007EDF  74                 	db	116	;'t'
   205  007EE0  6F                 	db	111	;'o'
   206  007EE1  20                 	db	32
   207  007EE2  46                 	db	70	;'F'
   208  007EE3  69                 	db	105	;'i'
   209  007EE4  6E                 	db	110	;'n'
   210  007EE5  61                 	db	97	;'a'
   211  007EE6  6C                 	db	108	;'l'
   212  007EE7  20                 	db	32
   213  007EE8  00                 	db	0
   214  007EE9                     STR_9:
   215  007EE9  20                 	db	32
   216  007EEA  20                 	db	32
   217  007EEB  20                 	db	32
   218  007EEC  46                 	db	70	;'F'
   219  007EED  72                 	db	114	;'r'
   220  007EEE  65                 	db	101	;'e'
   221  007EEF  63                 	db	99	;'c'
   222  007EF0  75                 	db	117	;'u'
   223  007EF1  65                 	db	101	;'e'
   224  007EF2  6E                 	db	110	;'n'
   225  007EF3  63                 	db	99	;'c'
   226  007EF4  69                 	db	105	;'i'
   227  007EF5  61                 	db	97	;'a'
   228  007EF6  00                 	db	0
   229  007EF7                     STR_11:
   230  007EF7  3D                 	db	61	;'='
   231  007EF8  3E                 	db	62	;'>'
   232  007EF9  20                 	db	32
   233  007EFA  46                 	db	70	;'F'
   234  007EFB  72                 	db	114	;'r'
   235  007EFC  65                 	db	101	;'e'
   236  007EFD  63                 	db	99	;'c'
   237  007EFE  75                 	db	117	;'u'
   238  007EFF  65                 	db	101	;'e'
   239  007F00  6E                 	db	110	;'n'
   240  007F01  63                 	db	99	;'c'
   241  007F02  69                 	db	105	;'i'
   242  007F03  61                 	db	97	;'a'
   243  007F04  00                 	db	0
   244  007F05                     STR_76:
   245  007F05  3D                 	db	61	;'='
   246  007F06  3E                 	db	62	;'>'
   247  007F07  20                 	db	32
   248  007F08  54                 	db	84	;'T'
   249  007F09  72                 	db	114	;'r'
   250  007F0A  69                 	db	105	;'i'
   251  007F0B  61                 	db	97	;'a'
   252  007F0C  6E                 	db	110	;'n'
   253  007F0D  67                 	db	103	;'g'
   254  007F0E  75                 	db	117	;'u'
   255  007F0F  6C                 	db	108	;'l'
   256  007F10  61                 	db	97	;'a'
   257  007F11  72                 	db	114	;'r'
   258  007F12  00                 	db	0
   259  007F13                     STR_4:
   260  007F13  20                 	db	32
   261  007F14  20                 	db	32
   262  007F15  20                 	db	32
   263  007F16  53                 	db	83	;'S'
   264  007F17  65                 	db	101	;'e'
   265  007F18  6E                 	db	110	;'n'
   266  007F19  6F                 	db	111	;'o'
   267  007F1A  69                 	db	105	;'i'
   268  007F1B  64                 	db	100	;'d'
   269  007F1C  61                 	db	97	;'a'
   270  007F1D  6C                 	db	108	;'l'
   271  007F1E  00                 	db	0
   272  007F1F                     STR_74:
   273  007F1F  3D                 	db	61	;'='
   274  007F20  3E                 	db	62	;'>'
   275  007F21  20                 	db	32
   276  007F22  53                 	db	83	;'S'
   277  007F23  65                 	db	101	;'e'
   278  007F24  6E                 	db	110	;'n'
   279  007F25  6F                 	db	111	;'o'
   280  007F26  69                 	db	105	;'i'
   281  007F27  64                 	db	100	;'d'
   282  007F28  61                 	db	97	;'a'
   283  007F29  6C                 	db	108	;'l'
   284  007F2A  00                 	db	0
   285  007F2B                     STR_5:
   286  007F2B  20                 	db	32
   287  007F2C  20                 	db	32
   288  007F2D  20                 	db	32
   289  007F2E  49                 	db	73	;'I'
   290  007F2F  6E                 	db	110	;'n'
   291  007F30  67                 	db	103	;'g'
   292  007F31  72                 	db	114	;'r'
   293  007F32  65                 	db	101	;'e'
   294  007F33  73                 	db	115	;'s'
   295  007F34  61                 	db	97	;'a'
   296  007F35  72                 	db	114	;'r'
   297  007F36  00                 	db	0
   298  007F37                     STR_7:
   299  007F37  3D                 	db	61	;'='
   300  007F38  3E                 	db	62	;'>'
   301  007F39  20                 	db	32
   302  007F3A  49                 	db	73	;'I'
   303  007F3B  6E                 	db	110	;'n'
   304  007F3C  67                 	db	103	;'g'
   305  007F3D  72                 	db	114	;'r'
   306  007F3E  65                 	db	101	;'e'
   307  007F3F  73                 	db	115	;'s'
   308  007F40  61                 	db	97	;'a'
   309  007F41  72                 	db	114	;'r'
   310  007F42  00                 	db	0
   311  007F43                     STR_6:
   312  007F43  20                 	db	32
   313  007F44  20                 	db	32
   314  007F45  20                 	db	32
   315  007F46  43                 	db	67	;'C'
   316  007F47  6F                 	db	111	;'o'
   317  007F48  6D                 	db	109	;'m'
   318  007F49  65                 	db	101	;'e'
   319  007F4A  6E                 	db	110	;'n'
   320  007F4B  7A                 	db	122	;'z'
   321  007F4C  61                 	db	97	;'a'
   322  007F4D  72                 	db	114	;'r'
   323  007F4E  00                 	db	0
   324  007F4F                     STR_69:
   325  007F4F  3D                 	db	61	;'='
   326  007F50  3E                 	db	62	;'>'
   327  007F51  20                 	db	32
   328  007F52  43                 	db	67	;'C'
   329  007F53  6F                 	db	111	;'o'
   330  007F54  6D                 	db	109	;'m'
   331  007F55  65                 	db	101	;'e'
   332  007F56  6E                 	db	110	;'n'
   333  007F57  7A                 	db	122	;'z'
   334  007F58  61                 	db	97	;'a'
   335  007F59  72                 	db	114	;'r'
   336  007F5A  00                 	db	0
   337  007F5B                     STR_70:
   338  007F5B  46                 	db	70	;'F'
   339  007F5C  3A                 	db	58	;':'
   340  007F5D  20                 	db	32
   341  007F5E  20                 	db	32
   342  007F5F  30                 	db	48	;'0'
   343  007F60  30                 	db	48	;'0'
   344  007F61  30                 	db	48	;'0'
   345  007F62  68                 	db	104	;'h'
   346  007F63  7A                 	db	122	;'z'
   347  007F64  00                 	db	0
   348  007F65                     STR_10:
   349  007F65  20                 	db	32
   350  007F66  20                 	db	32
   351  007F67  20                 	db	32
   352  007F68  43                 	db	67	;'C'
   353  007F69  69                 	db	105	;'i'
   354  007F6A  63                 	db	99	;'c'
   355  007F6B  6C                 	db	108	;'l'
   356  007F6C  6F                 	db	111	;'o'
   357  007F6D  00                 	db	0
   358  007F6E                     STR_15:
   359  007F6E  3D                 	db	61	;'='
   360  007F6F  3E                 	db	62	;'>'
   361  007F70  20                 	db	32
   362  007F71  43                 	db	67	;'C'
   363  007F72  69                 	db	105	;'i'
   364  007F73  63                 	db	99	;'c'
   365  007F74  6C                 	db	108	;'l'
   366  007F75  6F                 	db	111	;'o'
   367  007F76  00                 	db	0
   368  007F77                     STR_13:
   369  007F77  20                 	db	32
   370  007F78  20                 	db	32
   371  007F79  30                 	db	48	;'0'
   372  007F7A  30                 	db	48	;'0'
   373  007F7B  30                 	db	48	;'0'
   374  007F7C  20                 	db	32
   375  007F7D  48                 	db	72	;'H'
   376  007F7E  7A                 	db	122	;'z'
   377  007F7F  00                 	db	0
   378  007F80                     STR_73:
   379  007F80  20                 	db	32
   380  007F81  20                 	db	32
   381  007F82  20                 	db	32
   382  007F83  50                 	db	80	;'P'
   383  007F84  57                 	db	87	;'W'
   384  007F85  4D                 	db	77	;'M'
   385  007F86  00                 	db	0
   386  007F87                     STR_3:
   387  007F87  3D                 	db	61	;'='
   388  007F88  3E                 	db	62	;'>'
   389  007F89  20                 	db	32
   390  007F8A  50                 	db	80	;'P'
   391  007F8B  57                 	db	87	;'W'
   392  007F8C  4D                 	db	77	;'M'
   393  007F8D  00                 	db	0
   394  007F8E                     STR_55:
   395  007F8E  20                 	db	32
   396  007F8F  31                 	db	49	;'1'
   397  007F90  30                 	db	48	;'0'
   398  007F91  30                 	db	48	;'0'
   399  007F92  25                 	db	37
   400  007F93  00                 	db	0
   401  007F94                     STR_67:
   402  007F94  2A                 	db	42
   403  007F95  31                 	db	49	;'1'
   404  007F96  30                 	db	48	;'0'
   405  007F97  30                 	db	48	;'0'
   406  007F98  25                 	db	37
   407  007F99  00                 	db	0
   408  007F9A                     STR_52:
   409  007F9A  20                 	db	32
   410  007F9B  2A                 	db	42
   411  007F9C  37                 	db	55	;'7'
   412  007F9D  30                 	db	48	;'0'
   413  007F9E  25                 	db	37
   414  007F9F  00                 	db	0
   415  007FA0                     STR_22:
   416  007FA0  20                 	db	32
   417  007FA1  31                 	db	49	;'1'
   418  007FA2  30                 	db	48	;'0'
   419  007FA3  25                 	db	37
   420  007FA4  00                 	db	0
   421  007FA5                     STR_16:
   422  007FA5  2A                 	db	42
   423  007FA6  31                 	db	49	;'1'
   424  007FA7  30                 	db	48	;'0'
   425  007FA8  25                 	db	37
   426  007FA9  00                 	db	0
   427  007FAA                     STR_17:
   428  007FAA  20                 	db	32
   429  007FAB  32                 	db	50	;'2'
   430  007FAC  30                 	db	48	;'0'
   431  007FAD  25                 	db	37
   432  007FAE  00                 	db	0
   433  007FAF                     STR_23:
   434  007FAF  2A                 	db	42
   435  007FB0  32                 	db	50	;'2'
   436  007FB1  30                 	db	48	;'0'
   437  007FB2  25                 	db	37
   438  007FB3  00                 	db	0
   439  007FB4                     STR_18:
   440  007FB4  20                 	db	32
   441  007FB5  33                 	db	51	;'3'
   442  007FB6  30                 	db	48	;'0'
   443  007FB7  25                 	db	37
   444  007FB8  00                 	db	0
   445  007FB9                     STR_30:
   446  007FB9  2A                 	db	42
   447  007FBA  33                 	db	51	;'3'
   448  007FBB  30                 	db	48	;'0'
   449  007FBC  25                 	db	37
   450  007FBD  00                 	db	0
   451  007FBE                     STR_19:
   452  007FBE  20                 	db	32
   453  007FBF  34                 	db	52	;'4'
   454  007FC0  30                 	db	48	;'0'
   455  007FC1  25                 	db	37
   456  007FC2  00                 	db	0
   457  007FC3                     STR_37:
   458  007FC3  2A                 	db	42
   459  007FC4  34                 	db	52	;'4'
   460  007FC5  30                 	db	48	;'0'
   461  007FC6  25                 	db	37
   462  007FC7  00                 	db	0
   463  007FC8                     STR_20:
   464  007FC8  20                 	db	32
   465  007FC9  35                 	db	53	;'5'
   466  007FCA  30                 	db	48	;'0'
   467  007FCB  25                 	db	37
   468  007FCC  00                 	db	0
   469  007FCD                     STR_44:
   470  007FCD  2A                 	db	42
   471  007FCE  35                 	db	53	;'5'
   472  007FCF  30                 	db	48	;'0'
   473  007FD0  25                 	db	37
   474  007FD1  00                 	db	0
   475  007FD2                     STR_21:
   476  007FD2  20                 	db	32
   477  007FD3  36                 	db	54	;'6'
   478  007FD4  30                 	db	48	;'0'
   479  007FD5  25                 	db	37
   480  007FD6  00                 	db	0
   481  007FD7                     STR_51:
   482  007FD7  2A                 	db	42
   483  007FD8  36                 	db	54	;'6'
   484  007FD9  30                 	db	48	;'0'
   485  007FDA  25                 	db	37
   486  007FDB  00                 	db	0
   487  007FDC                     STR_56:
   488  007FDC  20                 	db	32
   489  007FDD  37                 	db	55	;'7'
   490  007FDE  30                 	db	48	;'0'
   491  007FDF  25                 	db	37
   492  007FE0  00                 	db	0
   493  007FE1                     STR_53:
   494  007FE1  20                 	db	32
   495  007FE2  38                 	db	56	;'8'
   496  007FE3  30                 	db	48	;'0'
   497  007FE4  25                 	db	37
   498  007FE5  00                 	db	0
   499  007FE6                     STR_57:
   500  007FE6  2A                 	db	42
   501  007FE7  38                 	db	56	;'8'
   502  007FE8  30                 	db	48	;'0'
   503  007FE9  25                 	db	37
   504  007FEA  00                 	db	0
   505  007FEB                     STR_54:
   506  007FEB  20                 	db	32
   507  007FEC  39                 	db	57	;'9'
   508  007FED  30                 	db	48	;'0'
   509  007FEE  25                 	db	37
   510  007FEF  00                 	db	0
   511  007FF0                     STR_62:
   512  007FF0  2A                 	db	42
   513  007FF1  39                 	db	57	;'9'
   514  007FF2  30                 	db	48	;'0'
   515  007FF3  25                 	db	37
   516  007FF4  00                 	db	0
   517  007FF5                     STR_75:
   518  007FF5  68                 	db	104	;'h'
   519  007FF6  6F                 	db	111	;'o'
   520  007FF7  6C                 	db	108	;'l'
   521  007FF8  6F                 	db	111	;'o'
   522  007FF9  00                 	db	0
   523  007FFA                     STR_71:
   524  007FFA  43                 	db	67	;'C'
   525  007FFB  3A                 	db	58	;':'
   526  007FFC  20                 	db	32
   527  007FFD  00                 	db	0
   528  007FFE                     __end_of__stringdata:
   529                           	opt stack 0
   530                           
   531                           ; #config settings
   532  007FFE  00                 	db	0	; dummy byte at the end
   533  0000                     
   534                           	psect	cinit
   535  006126                     __pcinit:
   536                           	opt stack 0
   537  006126                     start_initialization:
   538                           	opt stack 0
   539  006126                     __initialization:
   540                           	opt stack 0
   541                           
   542                           ; Clear objects allocated to BANK0 (8 bytes)
   543  006126  EE00  F0F8         	lfsr	0,__pbssBANK0
   544  00612A  0E08               	movlw	8
   545  00612C                     clear_0:
   546  00612C  6AEE               	clrf	postinc0,c
   547  00612E  06E8               	decf	wreg,f,c
   548  006130  E1FD               	bnz	clear_0
   549                           
   550                           ; Clear objects allocated to COMRAM (12 bytes)
   551  006132  EE00  F03B         	lfsr	0,__pbssCOMRAM
   552  006136  0E0C               	movlw	12
   553  006138                     clear_1:
   554  006138  6AEE               	clrf	postinc0,c
   555  00613A  06E8               	decf	wreg,f,c
   556  00613C  E1FD               	bnz	clear_1
   557                           
   558                           ; Initialize objects allocated to BANK1 (222 bytes)
   559                           ; load TBLPTR registers with __pidataBANK1
   560  00613E  0E34               	movlw	low __pidataBANK1
   561  006140  6EF6               	movwf	tblptrl,c
   562  006142  0E64               	movlw	high __pidataBANK1
   563  006144  6EF7               	movwf	tblptrh,c
   564  006146  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   565  006148  6EF8               	movwf	tblptru,c
   566  00614A  EE01  F000         	lfsr	0,__pdataBANK1
   567  00614E  EE10 F0DE          	lfsr	1,222
   568  006152                     copy_data0:
   569  006152  0009               	tblrd		*+
   570  006154  CFF5 FFEE          	movff	tablat,postinc0
   571  006158  50E5               	movf	postdec1,w,c
   572  00615A  50E1               	movf	fsr1l,w,c
   573  00615C  E1FA               	bnz	copy_data0
   574  00615E                     end_of_initialization:
   575                           	opt stack 0
   576  00615E                     __end_of__initialization:
   577                           	opt stack 0
   578  00615E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   579  006160  6EF8               	movwf	tblptru,c
   580  006162  0100               	movlb	0
   581  006164  EF48  F037         	goto	_main	;jump to C main() function
   582                           tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           postdec1	equ	0xFE5
   589                           fsr1l	equ	0xFE1
   590                           
   591                           	psect	bssCOMRAM
   592  00003B                     __pbssCOMRAM:
   593                           	opt stack 0
   594  00003B                     _C:
   595                           	opt stack 0
   596  00003B                     	ds	2
   597  00003D                     _D:
   598                           	opt stack 0
   599  00003D                     	ds	2
   600  00003F                     _frecuencia:
   601                           	opt stack 0
   602  00003F                     	ds	2
   603  000041                     _p:
   604                           	opt stack 0
   605  000041                     	ds	2
   606  000043                     _q:
   607                           	opt stack 0
   608  000043                     	ds	2
   609  000045                     _t:
   610                           	opt stack 0
   611  000045                     	ds	2
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           postdec1	equ	0xFE5
   619                           fsr1l	equ	0xFE1
   620                           
   621                           	psect	bssBANK0
   622  0000F8                     __pbssBANK0:
   623                           	opt stack 0
   624  0000F8                     _B:
   625                           	opt stack 0
   626  0000F8                     	ds	2
   627  0000FA                     _e:
   628                           	opt stack 0
   629  0000FA                     	ds	2
   630  0000FC                     _r:
   631                           	opt stack 0
   632  0000FC                     	ds	2
   633  0000FE                     _w:
   634                           	opt stack 0
   635  0000FE                     	ds	2
   636                           tblptru	equ	0xFF8
   637                           tblptrh	equ	0xFF7
   638                           tblptrl	equ	0xFF6
   639                           tablat	equ	0xFF5
   640                           postinc0	equ	0xFEE
   641                           wreg	equ	0xFE8
   642                           postdec1	equ	0xFE5
   643                           fsr1l	equ	0xFE1
   644                           
   645                           	psect	dataBANK1
   646  000100                     __pdataBANK1:
   647                           	opt stack 0
   648  000100                     main@F7724:
   649                           	opt stack 0
   650  000100                     	ds	102
   651  000166                     SENO_100@F7355:
   652                           	opt stack 0
   653  000166                     	ds	40
   654  00018E                     SENO_20@F7367:
   655                           	opt stack 0
   656  00018E                     	ds	40
   657  0001B6                     SENO_50@F7361:
   658                           	opt stack 0
   659  0001B6                     	ds	40
   660                           tblptru	equ	0xFF8
   661                           tblptrh	equ	0xFF7
   662                           tblptrl	equ	0xFF6
   663                           tablat	equ	0xFF5
   664                           postinc0	equ	0xFEE
   665                           wreg	equ	0xFE8
   666                           postdec1	equ	0xFE5
   667                           fsr1l	equ	0xFE1
   668                           
   669                           	psect	cstackBANK0
   670  000060                     __pcstackBANK0:
   671                           	opt stack 0
   672  000060                     main@valoresSeno:
   673                           	opt stack 0
   674                           
   675                           ; 102 bytes @ 0x0
   676  000060                     	ds	102
   677  0000C6                     main@cad:
   678                           	opt stack 0
   679                           
   680                           ; 20 bytes @ 0x66
   681  0000C6                     	ds	20
   682  0000DA                     main@cadena:
   683                           	opt stack 0
   684                           
   685                           ; 20 bytes @ 0x7A
   686  0000DA                     	ds	20
   687  0000EE                     main@fre:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x8E
   691  0000EE                     	ds	1
   692  0000EF                     main@cantidad:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x8F
   696  0000EF                     	ds	1
   697  0000F0                     main@cant:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x90
   701  0000F0                     	ds	1
   702  0000F1                     main@X:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x91
   706  0000F1                     	ds	2
   707  0000F3                     main@V:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x93
   711  0000F3                     	ds	2
   712  0000F5                     main@Z:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x95
   716  0000F5                     	ds	2
   717  0000F7                     main@A:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x97
   721  0000F7                     	ds	1
   722                           tblptru	equ	0xFF8
   723                           tblptrh	equ	0xFF7
   724                           tblptrl	equ	0xFF6
   725                           tablat	equ	0xFF5
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           postdec1	equ	0xFE5
   729                           fsr1l	equ	0xFE1
   730                           
   731                           	psect	cstackCOMRAM
   732  000001                     __pcstackCOMRAM:
   733                           	opt stack 0
   734  000001                     ??_Lcd_Cmd:
   735  000001                     ??_Lcd_Chr_CP:
   736  000001                     ??_isdigit:
   737  000001                     ?___wmul:
   738                           	opt stack 0
   739  000001                     ?___lmul:
   740                           	opt stack 0
   741  000001                     ?___aldiv:
   742                           	opt stack 0
   743  000001                     ?___almod:
   744                           	opt stack 0
   745  000001                     ?___lldiv:
   746                           	opt stack 0
   747  000001                     ___wmul@multiplier:
   748                           	opt stack 0
   749  000001                     ___lmul@multiplier:
   750                           	opt stack 0
   751  000001                     ___aldiv@dividend:
   752                           	opt stack 0
   753  000001                     ___almod@dividend:
   754                           	opt stack 0
   755  000001                     ___lldiv@dividend:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x0
   759  000001                     	ds	1
   760  000002                     _isdigit$1038:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x1
   764  000002                     	ds	1
   765  000003                     Lcd_Chr_CP@data:
   766                           	opt stack 0
   767  000003                     Lcd_Cmd@data:
   768                           	opt stack 0
   769  000003                     isdigit@c:
   770                           	opt stack 0
   771  000003                     ___wmul@multiplicand:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x2
   775  000003                     	ds	1
   776  000004                     ??_Lcd_Init:
   777  000004                     Lcd_Out@x:
   778                           	opt stack 0
   779  000004                     Lcd_Out2@x:
   780                           	opt stack 0
   781  000004                     lcd_goto@x:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x3
   785  000004                     	ds	1
   786  000005                     Lcd_Init@data:
   787                           	opt stack 0
   788  000005                     Lcd_Out@buffer:
   789                           	opt stack 0
   790  000005                     Lcd_Out2@buffer:
   791                           	opt stack 0
   792  000005                     ___wmul@product:
   793                           	opt stack 0
   794  000005                     ___lmul@multiplicand:
   795                           	opt stack 0
   796  000005                     ___aldiv@divisor:
   797                           	opt stack 0
   798  000005                     ___almod@divisor:
   799                           	opt stack 0
   800  000005                     ___lldiv@divisor:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x4
   804  000005                     	ds	1
   805  000006                     lcd_goto@y:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x5
   809  000006                     	ds	1
   810  000007                     ?_atoi:
   811                           	opt stack 0
   812  000007                     Lcd_Out@y:
   813                           	opt stack 0
   814  000007                     Lcd_Out2@y:
   815                           	opt stack 0
   816  000007                     atoi@s:
   817                           	opt stack 0
   818                           
   819                           ; 3 bytes @ 0x6
   820  000007                     	ds	1
   821  000008                     ??_lcd_goto:
   822  000008                     Lcd_Out@data:
   823                           	opt stack 0
   824  000008                     Lcd_Out2@data:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x7
   828  000008                     	ds	1
   829  000009                     ___aldiv@counter:
   830                           	opt stack 0
   831  000009                     ___almod@counter:
   832                           	opt stack 0
   833  000009                     ___lmul@product:
   834                           	opt stack 0
   835  000009                     ___lldiv@quotient:
   836                           	opt stack 0
   837                           
   838                           ; 4 bytes @ 0x8
   839  000009                     	ds	1
   840  00000A                     ??_atoi:
   841  00000A                     lcd_goto@data:
   842                           	opt stack 0
   843  00000A                     ___aldiv@sign:
   844                           	opt stack 0
   845  00000A                     ___almod@sign:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x9
   849  00000A                     	ds	1
   850  00000B                     ___aldiv@quotient:
   851                           	opt stack 0
   852                           
   853                           ; 4 bytes @ 0xA
   854  00000B                     	ds	1
   855  00000C                     atoi@sign:
   856                           	opt stack 0
   857                           
   858                           ; 1 bytes @ 0xB
   859  00000C                     	ds	1
   860  00000D                     ___lldiv@counter:
   861                           	opt stack 0
   862  00000D                     atoi@a:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0xC
   866  00000D                     	ds	1
   867  00000E                     PWM_generar@ciclo:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0xD
   871  00000E                     	ds	1
   872  00000F                     ?_Conv_Entero:
   873                           	opt stack 0
   874  00000F                     Conv_Entero@numero:
   875                           	opt stack 0
   876                           
   877                           ; 4 bytes @ 0xE
   878  00000F                     	ds	1
   879  000010                     PWM_generar@frecuencia:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0xF
   883  000010                     	ds	2
   884  000012                     ??_PWM_generar:
   885                           
   886                           ; 0 bytes @ 0x11
   887  000012                     	ds	1
   888  000013                     Conv_Entero@conv:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x12
   892  000013                     	ds	2
   893  000015                     ??_Conv_Entero:
   894                           
   895                           ; 0 bytes @ 0x14
   896  000015                     	ds	1
   897  000016                     PWM_generar@prescalador:
   898                           	opt stack 0
   899                           
   900                           ; 2 bytes @ 0x15
   901  000016                     	ds	2
   902  000018                     PWM_generar@AuxCCP2CON:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x17
   906  000018                     	ds	2
   907  00001A                     PWM_generar@PR2cal:
   908                           	opt stack 0
   909  00001A                     Conv_Entero@convTemp:
   910                           	opt stack 0
   911                           
   912                           ; 21 bytes @ 0x19
   913  00001A                     	ds	4
   914  00001E                     PWM_generar@AuxCCPR2L:
   915                           	opt stack 0
   916                           
   917                           ; 4 bytes @ 0x1D
   918  00001E                     	ds	17
   919  00002F                     Conv_Entero@num:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x2E
   923  00002F                     	ds	2
   924  000031                     Conv_Entero@i:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x30
   928  000031                     	ds	1
   929  000032                     Conv_Entero@punteroActual:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x31
   933  000032                     	ds	2
   934  000034                     Conv_Entero@numeroReg:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x33
   938  000034                     	ds	4
   939  000038                     ??_main:
   940                           
   941                           ; 0 bytes @ 0x37
   942  000038                     	ds	3
   943                           tblptru	equ	0xFF8
   944                           tblptrh	equ	0xFF7
   945                           tblptrl	equ	0xFF6
   946                           tablat	equ	0xFF5
   947                           postinc0	equ	0xFEE
   948                           wreg	equ	0xFE8
   949                           postdec1	equ	0xFE5
   950                           fsr1l	equ	0xFE1
   951                           
   952 ;;
   953 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   954 ;;
   955 ;; *************** function _main *****************
   956 ;; Defined at:
   957 ;;		line 22 in file "Main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  fre             1  142[BANK0 ] unsigned char 
   962 ;;  valoresSeno   102    0[BANK0 ] int [51]
   963 ;;  cadena         20  122[BANK0 ] unsigned char [20]
   964 ;;  cad            20  102[BANK0 ] unsigned char [20]
   965 ;;  Z               2  149[BANK0 ] unsigned int 
   966 ;;  V               2  147[BANK0 ] unsigned int 
   967 ;;  X               2  145[BANK0 ] unsigned int 
   968 ;;  A               1  151[BANK0 ] unsigned char 
   969 ;;  cant            1  144[BANK0 ] unsigned char 
   970 ;;  cantidad        1  143[BANK0 ] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;		None               void
   973 ;; Registers used:
   974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   980 ;;      Params:         0       0       0       0       0       0       0       0       0
   981 ;;      Locals:         0     152       0       0       0       0       0       0       0
   982 ;;      Temps:          3       0       0       0       0       0       0       0       0
   983 ;;      Totals:         3     152       0       0       0       0       0       0       0
   984 ;;Total ram usage:      155 bytes
   985 ;; Hardware stack levels required when called:    2
   986 ;; This function calls:
   987 ;;		_Conv_Entero
   988 ;;		_Lcd_Chr_CP
   989 ;;		_Lcd_Cmd
   990 ;;		_Lcd_Init
   991 ;;		_Lcd_Out
   992 ;;		_Lcd_Out2
   993 ;;		_PWM_generar
   994 ;;		_atoi
   995 ;;		_lcd_goto
   996 ;; This function is called by:
   997 ;;		Startup code after reset
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text0
  1002  006E90                     __ptext0:
  1003                           	opt stack 0
  1004  006E90                     _main:
  1005                           	opt stack 29
  1006                           
  1007                           ;Main.c: 24: unsigned char A=49,cantidad=0,cant=0;
  1008                           
  1009                           ;incstack = 0
  1010  006E90  0E31               	movlw	49
  1011  006E92  0100               	movlb	0	; () banked
  1012  006E94  6FF7               	movwf	main@A& (0+255),b
  1013  006E96  0E00               	movlw	0
  1014  006E98  0100               	movlb	0	; () banked
  1015  006E9A  6FEF               	movwf	main@cantidad& (0+255),b
  1016  006E9C  0E00               	movlw	0
  1017  006E9E  0100               	movlb	0	; () banked
  1018  006EA0  6FF0               	movwf	main@cant& (0+255),b
  1019                           
  1020                           ;Main.c: 25: char cadena[20],cad[20];
  1021                           ;Main.c: 26: unsigned int Z=0,X=0,V=0;
  1022  006EA2  0E00               	movlw	0
  1023  006EA4  0100               	movlb	0	; () banked
  1024  006EA6  6FF6               	movwf	(main@Z+1)& (0+255),b
  1025  006EA8  0E00               	movlw	0
  1026  006EAA  0100               	movlb	0	; () banked
  1027  006EAC  6FF5               	movwf	main@Z& (0+255),b
  1028  006EAE  0E00               	movlw	0
  1029  006EB0  0100               	movlb	0	; () banked
  1030  006EB2  6FF2               	movwf	(main@X+1)& (0+255),b
  1031  006EB4  0E00               	movlw	0
  1032  006EB6  0100               	movlb	0	; () banked
  1033  006EB8  6FF1               	movwf	main@X& (0+255),b
  1034  006EBA  0E00               	movlw	0
  1035  006EBC  0100               	movlb	0	; () banked
  1036  006EBE  6FF4               	movwf	(main@V+1)& (0+255),b
  1037  006EC0  0E00               	movlw	0
  1038  006EC2  0100               	movlb	0	; () banked
  1039  006EC4  6FF3               	movwf	main@V& (0+255),b
  1040                           
  1041                           ;Main.c: 27: ANSELD=0;
  1042  006EC6  0E00               	movlw	0
  1043  006EC8  010F               	movlb	15	; () banked
  1044  006ECA  6F5E               	movwf	94,b	;volatile
  1045                           
  1046                           ; BSR set to: 15
  1047                           ;Main.c: 28: Lcd_Init();
  1048  006ECC  EC1B  F034         	call	_Lcd_Init	;wreg free
  1049                           
  1050                           ;Main.c: 30: TRISAbits.RA0=1;
  1051  006ED0  8092               	bsf	3986,0,c	;volatile
  1052                           
  1053                           ;Main.c: 31: TRISAbits.RA1=1;
  1054  006ED2  8292               	bsf	3986,1,c	;volatile
  1055                           
  1056                           ;Main.c: 32: TRISAbits.RA2=1;
  1057  006ED4  8492               	bsf	3986,2,c	;volatile
  1058                           
  1059                           ;Main.c: 33: TRISAbits.RA3=1;
  1060  006ED6  8692               	bsf	3986,3,c	;volatile
  1061                           
  1062                           ;Main.c: 34: ANSELA=0;
  1063  006ED8  0E00               	movlw	0
  1064  006EDA  010F               	movlb	15	; () banked
  1065  006EDC  6F5B               	movwf	91,b	;volatile
  1066  006EDE                     l2575:
  1067                           
  1068                           ;Main.c: 37: if(PORTAbits.RA0==1)
  1069  006EDE  A080               	btfss	3968,0,c	;volatile
  1070  006EE0  D00A               	goto	l2581
  1071                           
  1072                           ;Main.c: 38: {
  1073                           ;Main.c: 39: B++;
  1074  006EE2  0100               	movlb	0	; () banked
  1075  006EE4  4BF8               	infsnz	_B& (0+255),f,b
  1076  006EE6  2BF9               	incf	(_B+1)& (0+255),f,b
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;Main.c: 40: _delay((unsigned long)((10)*(4000000/4000.0)));
  1080  006EE8  0E0D               	movlw	13
  1081  006EEA  6E38               	movwf	??_main& (0+255),c
  1082  006EEC  0EFC               	movlw	252
  1083  006EEE                     u2717:
  1084  006EEE  2EE8               	decfsz	wreg,f,c
  1085  006EF0  D7FE               	goto	u2717
  1086  006EF2  2E38               	decfsz	??_main& (0+255),f,c
  1087  006EF4  D7FC               	goto	u2717
  1088  006EF6                     l2581:
  1089                           
  1090                           ;Main.c: 41: }
  1091                           ;Main.c: 43: if(PORTAbits.RA1==1)
  1092  006EF6  A280               	btfss	3968,1,c	;volatile
  1093  006EF8  D00B               	goto	l118
  1094                           
  1095                           ;Main.c: 44: {
  1096                           ;Main.c: 45: B--;
  1097  006EFA  0100               	movlb	0	; () banked
  1098  006EFC  07F8               	decf	_B& (0+255),f,b
  1099  006EFE  A0D8               	btfss	status,0,c
  1100  006F00  07F9               	decf	(_B+1)& (0+255),f,b
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;Main.c: 46: _delay((unsigned long)((10)*(4000000/4000.0)));
  1104  006F02  0E0D               	movlw	13
  1105  006F04  6E38               	movwf	??_main& (0+255),c
  1106  006F06  0EFC               	movlw	252
  1107  006F08                     u2727:
  1108  006F08  2EE8               	decfsz	wreg,f,c
  1109  006F0A  D7FE               	goto	u2727
  1110  006F0C  2E38               	decfsz	??_main& (0+255),f,c
  1111  006F0E  D7FC               	goto	u2727
  1112  006F10                     l118:
  1113                           
  1114                           ;Main.c: 47: }
  1115                           ;Main.c: 49: if(B==0){
  1116  006F10  0100               	movlb	0	; () banked
  1117  006F12  51F9               	movf	(_B+1)& (0+255),w,b
  1118  006F14  11F8               	iorwf	_B& (0+255),w,b
  1119  006F16  A4D8               	btfss	status,2,c
  1120  006F18  D02F               	goto	l2599
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;Main.c: 50: Lcd_Init();
  1124  006F1A  EC1B  F034         	call	_Lcd_Init	;wreg free
  1125                           
  1126                           ;Main.c: 51: Lcd_Cmd(1);
  1127  006F1E  0E01               	movlw	1
  1128  006F20  EC88  F033         	call	_Lcd_Cmd
  1129                           
  1130                           ;Main.c: 52: Lcd_Cmd(12);
  1131  006F24  0E0C               	movlw	12
  1132  006F26  EC88  F033         	call	_Lcd_Cmd
  1133                           
  1134                           ;Main.c: 53: Lcd_Out2(1,1,"Universidad de ");
  1135  006F2A  0E01               	movlw	1
  1136  006F2C  6E04               	movwf	Lcd_Out2@x,c
  1137  006F2E  0E7E               	movlw	high STR_1
  1138  006F30  6E06               	movwf	Lcd_Out2@buffer+1,c
  1139  006F32  0EC9               	movlw	low STR_1
  1140  006F34  6E05               	movwf	Lcd_Out2@buffer,c
  1141  006F36  0E01               	movlw	1
  1142  006F38  EC37  F031         	call	_Lcd_Out2
  1143                           
  1144                           ;Main.c: 54: Lcd_Out2(2,1,"Proyecto Final ");
  1145  006F3C  0E01               	movlw	1
  1146  006F3E  6E04               	movwf	Lcd_Out2@x,c
  1147  006F40  0E7E               	movlw	high STR_2
  1148  006F42  6E06               	movwf	Lcd_Out2@buffer+1,c
  1149  006F44  0ED9               	movlw	low STR_2
  1150  006F46  6E05               	movwf	Lcd_Out2@buffer,c
  1151  006F48  0E02               	movlw	2
  1152  006F4A  EC37  F031         	call	_Lcd_Out2
  1153                           
  1154                           ;Main.c: 55: _delay((unsigned long)((100)*(4000000/4000.0)));
  1155  006F4E  0E82               	movlw	130
  1156  006F50  6E38               	movwf	??_main& (0+255),c
  1157  006F52  0EDE               	movlw	222
  1158  006F54                     u2737:
  1159  006F54  2EE8               	decfsz	wreg,f,c
  1160  006F56  D7FE               	goto	u2737
  1161  006F58  2E38               	decfsz	??_main& (0+255),f,c
  1162  006F5A  D7FC               	goto	u2737
  1163                           
  1164                           ;Main.c: 56: _delay((unsigned long)((100)*(4000000/4000.0)));
  1165  006F5C  0E82               	movlw	130
  1166  006F5E  6E38               	movwf	??_main& (0+255),c
  1167  006F60  0EDE               	movlw	222
  1168  006F62                     u2747:
  1169  006F62  2EE8               	decfsz	wreg,f,c
  1170  006F64  D7FE               	goto	u2747
  1171  006F66  2E38               	decfsz	??_main& (0+255),f,c
  1172  006F68  D7FC               	goto	u2747
  1173                           
  1174                           ;Main.c: 57: _delay((unsigned long)((100)*(4000000/4000.0)));
  1175  006F6A  0E82               	movlw	130
  1176  006F6C  6E38               	movwf	??_main& (0+255),c
  1177  006F6E  0EDE               	movlw	222
  1178  006F70                     u2757:
  1179  006F70  2EE8               	decfsz	wreg,f,c
  1180  006F72  D7FE               	goto	u2757
  1181  006F74  2E38               	decfsz	??_main& (0+255),f,c
  1182  006F76  D7FC               	goto	u2757
  1183  006F78                     l2599:
  1184                           
  1185                           ;Main.c: 60: }
  1186                           ;Main.c: 62: if(B==1){
  1187  006F78  0100               	movlb	0	; () banked
  1188  006F7A  05F8               	decf	_B& (0+255),w,b
  1189  006F7C  11F9               	iorwf	(_B+1)& (0+255),w,b
  1190  006F7E  A4D8               	btfss	status,2,c
  1191  006F80  EFB3  F03E         	goto	l3115
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;Main.c: 63: Lcd_Init();
  1195  006F84  EC1B  F034         	call	_Lcd_Init	;wreg free
  1196                           
  1197                           ;Main.c: 64: Lcd_Cmd(1);
  1198  006F88  0E01               	movlw	1
  1199  006F8A  EC88  F033         	call	_Lcd_Cmd
  1200                           
  1201                           ;Main.c: 65: Lcd_Cmd(12);
  1202  006F8E  0E0C               	movlw	12
  1203  006F90  EC88  F033         	call	_Lcd_Cmd
  1204                           
  1205                           ;Main.c: 66: Lcd_Out2(1,1,"=> PWM");
  1206  006F94  0E01               	movlw	1
  1207  006F96  6E04               	movwf	Lcd_Out2@x,c
  1208  006F98  0E7F               	movlw	high STR_3
  1209  006F9A  6E06               	movwf	Lcd_Out2@buffer+1,c
  1210  006F9C  0E87               	movlw	low STR_3
  1211  006F9E  6E05               	movwf	Lcd_Out2@buffer,c
  1212  006FA0  0E01               	movlw	1
  1213  006FA2  EC37  F031         	call	_Lcd_Out2
  1214                           
  1215                           ;Main.c: 67: Lcd_Out2(2,1,"   Senoidal");
  1216  006FA6  0E01               	movlw	1
  1217  006FA8  6E04               	movwf	Lcd_Out2@x,c
  1218  006FAA  0E7F               	movlw	high STR_4
  1219  006FAC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1220  006FAE  0E13               	movlw	low STR_4
  1221  006FB0  6E05               	movwf	Lcd_Out2@buffer,c
  1222  006FB2  0E02               	movlw	2
  1223  006FB4  EC37  F031         	call	_Lcd_Out2
  1224                           
  1225                           ;Main.c: 68: _delay((unsigned long)((100)*(4000000/4000.0)));
  1226  006FB8  0E82               	movlw	130
  1227  006FBA  6E38               	movwf	??_main& (0+255),c
  1228  006FBC  0EDE               	movlw	222
  1229  006FBE                     u2767:
  1230  006FBE  2EE8               	decfsz	wreg,f,c
  1231  006FC0  D7FE               	goto	u2767
  1232  006FC2  2E38               	decfsz	??_main& (0+255),f,c
  1233  006FC4  D7FC               	goto	u2767
  1234                           
  1235                           ;Main.c: 69: _delay((unsigned long)((100)*(4000000/4000.0)));
  1236  006FC6  0E82               	movlw	130
  1237  006FC8  6E38               	movwf	??_main& (0+255),c
  1238  006FCA  0EDE               	movlw	222
  1239  006FCC                     u2777:
  1240  006FCC  2EE8               	decfsz	wreg,f,c
  1241  006FCE  D7FE               	goto	u2777
  1242  006FD0  2E38               	decfsz	??_main& (0+255),f,c
  1243  006FD2  D7FC               	goto	u2777
  1244                           
  1245                           ;Main.c: 70: _delay((unsigned long)((100)*(4000000/4000.0)));
  1246  006FD4  0E82               	movlw	130
  1247  006FD6  6E38               	movwf	??_main& (0+255),c
  1248  006FD8  0EDE               	movlw	222
  1249  006FDA                     u2787:
  1250  006FDA  2EE8               	decfsz	wreg,f,c
  1251  006FDC  D7FE               	goto	u2787
  1252  006FDE  2E38               	decfsz	??_main& (0+255),f,c
  1253  006FE0  D7FC               	goto	u2787
  1254                           
  1255                           ;Main.c: 71: _delay((unsigned long)((100)*(4000000/4000.0)));
  1256  006FE2  0E82               	movlw	130
  1257  006FE4  6E38               	movwf	??_main& (0+255),c
  1258  006FE6  0EDE               	movlw	222
  1259  006FE8                     u2797:
  1260  006FE8  2EE8               	decfsz	wreg,f,c
  1261  006FEA  D7FE               	goto	u2797
  1262  006FEC  2E38               	decfsz	??_main& (0+255),f,c
  1263  006FEE  D7FC               	goto	u2797
  1264                           
  1265                           ;Main.c: 74: if(PORTAbits.RA2==1){
  1266  006FF0  A480               	btfss	3968,2,c	;volatile
  1267  006FF2  EFB3  F03E         	goto	l3115
  1268  006FF6                     l2617:
  1269                           
  1270                           ;Main.c: 76: w=0;
  1271  006FF6  0E00               	movlw	0
  1272  006FF8  0100               	movlb	0	; () banked
  1273  006FFA  6FFF               	movwf	(_w+1)& (0+255),b
  1274  006FFC  0E00               	movlw	0
  1275  006FFE  0100               	movlb	0	; () banked
  1276  007000  6FFE               	movwf	_w& (0+255),b
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;Main.c: 77: if(B==0){
  1280  007002  0100               	movlb	0	; () banked
  1281  007004  51F9               	movf	(_B+1)& (0+255),w,b
  1282  007006  11F8               	iorwf	_B& (0+255),w,b
  1283  007008  A4D8               	btfss	status,2,c
  1284  00700A  D036               	goto	l2635
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;Main.c: 78: Lcd_Init();
  1288  00700C  EC1B  F034         	call	_Lcd_Init	;wreg free
  1289                           
  1290                           ;Main.c: 79: Lcd_Cmd(1);
  1291  007010  0E01               	movlw	1
  1292  007012  EC88  F033         	call	_Lcd_Cmd
  1293                           
  1294                           ;Main.c: 80: Lcd_Cmd(12);
  1295  007016  0E0C               	movlw	12
  1296  007018  EC88  F033         	call	_Lcd_Cmd
  1297                           
  1298                           ;Main.c: 81: Lcd_Out2(1,1,"   Ingresar");
  1299  00701C  0E01               	movlw	1
  1300  00701E  6E04               	movwf	Lcd_Out2@x,c
  1301  007020  0E7F               	movlw	high STR_5
  1302  007022  6E06               	movwf	Lcd_Out2@buffer+1,c
  1303  007024  0E2B               	movlw	low STR_5
  1304  007026  6E05               	movwf	Lcd_Out2@buffer,c
  1305  007028  0E01               	movlw	1
  1306  00702A  EC37  F031         	call	_Lcd_Out2
  1307                           
  1308                           ;Main.c: 82: Lcd_Out2(2,1,"   Comenzar");
  1309  00702E  0E01               	movlw	1
  1310  007030  6E04               	movwf	Lcd_Out2@x,c
  1311  007032  0E7F               	movlw	high STR_6
  1312  007034  6E06               	movwf	Lcd_Out2@buffer+1,c
  1313  007036  0E43               	movlw	low STR_6
  1314  007038  6E05               	movwf	Lcd_Out2@buffer,c
  1315  00703A  0E02               	movlw	2
  1316  00703C  EC37  F031         	call	_Lcd_Out2
  1317                           
  1318                           ;Main.c: 83: _delay((unsigned long)((100)*(4000000/4000.0)));
  1319  007040  0E82               	movlw	130
  1320  007042  6E38               	movwf	??_main& (0+255),c
  1321  007044  0EDE               	movlw	222
  1322  007046                     u2807:
  1323  007046  2EE8               	decfsz	wreg,f,c
  1324  007048  D7FE               	goto	u2807
  1325  00704A  2E38               	decfsz	??_main& (0+255),f,c
  1326  00704C  D7FC               	goto	u2807
  1327                           
  1328                           ;Main.c: 84: _delay((unsigned long)((100)*(4000000/4000.0)));
  1329  00704E  0E82               	movlw	130
  1330  007050  6E38               	movwf	??_main& (0+255),c
  1331  007052  0EDE               	movlw	222
  1332  007054                     u2817:
  1333  007054  2EE8               	decfsz	wreg,f,c
  1334  007056  D7FE               	goto	u2817
  1335  007058  2E38               	decfsz	??_main& (0+255),f,c
  1336  00705A  D7FC               	goto	u2817
  1337                           
  1338                           ;Main.c: 85: _delay((unsigned long)((100)*(4000000/4000.0)));
  1339  00705C  0E82               	movlw	130
  1340  00705E  6E38               	movwf	??_main& (0+255),c
  1341  007060  0EDE               	movlw	222
  1342  007062                     u2827:
  1343  007062  2EE8               	decfsz	wreg,f,c
  1344  007064  D7FE               	goto	u2827
  1345  007066  2E38               	decfsz	??_main& (0+255),f,c
  1346  007068  D7FC               	goto	u2827
  1347                           
  1348                           ;Main.c: 86: _delay((unsigned long)((100)*(4000000/4000.0)));
  1349  00706A  0E82               	movlw	130
  1350  00706C  6E38               	movwf	??_main& (0+255),c
  1351  00706E  0EDE               	movlw	222
  1352  007070                     u2837:
  1353  007070  2EE8               	decfsz	wreg,f,c
  1354  007072  D7FE               	goto	u2837
  1355  007074  2E38               	decfsz	??_main& (0+255),f,c
  1356  007076  D7FC               	goto	u2837
  1357  007078                     l2635:
  1358                           
  1359                           ;Main.c: 88: }
  1360                           ;Main.c: 89: if(B==1){
  1361  007078  0100               	movlb	0	; () banked
  1362  00707A  05F8               	decf	_B& (0+255),w,b
  1363  00707C  11F9               	iorwf	(_B+1)& (0+255),w,b
  1364  00707E  A4D8               	btfss	status,2,c
  1365  007080  EF1D  F03D         	goto	l2995
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;Main.c: 90: Lcd_Init();
  1369  007084  EC1B  F034         	call	_Lcd_Init	;wreg free
  1370                           
  1371                           ;Main.c: 91: Lcd_Cmd(1);
  1372  007088  0E01               	movlw	1
  1373  00708A  EC88  F033         	call	_Lcd_Cmd
  1374                           
  1375                           ;Main.c: 92: Lcd_Cmd(12);
  1376  00708E  0E0C               	movlw	12
  1377  007090  EC88  F033         	call	_Lcd_Cmd
  1378                           
  1379                           ;Main.c: 93: Lcd_Out2(1,1,"=> Ingresar");
  1380  007094  0E01               	movlw	1
  1381  007096  6E04               	movwf	Lcd_Out2@x,c
  1382  007098  0E7F               	movlw	high STR_7
  1383  00709A  6E06               	movwf	Lcd_Out2@buffer+1,c
  1384  00709C  0E37               	movlw	low STR_7
  1385  00709E  6E05               	movwf	Lcd_Out2@buffer,c
  1386  0070A0  0E01               	movlw	1
  1387  0070A2  EC37  F031         	call	_Lcd_Out2
  1388                           
  1389                           ;Main.c: 94: Lcd_Out2(2,1,"   Comenzar");
  1390  0070A6  0E01               	movlw	1
  1391  0070A8  6E04               	movwf	Lcd_Out2@x,c
  1392  0070AA  0E7F               	movlw	high STR_6
  1393  0070AC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1394  0070AE  0E43               	movlw	low STR_6
  1395  0070B0  6E05               	movwf	Lcd_Out2@buffer,c
  1396  0070B2  0E02               	movlw	2
  1397  0070B4  EC37  F031         	call	_Lcd_Out2
  1398                           
  1399                           ;Main.c: 95: _delay((unsigned long)((100)*(4000000/4000.0)));
  1400  0070B8  0E82               	movlw	130
  1401  0070BA  6E38               	movwf	??_main& (0+255),c
  1402  0070BC  0EDE               	movlw	222
  1403  0070BE                     u2847:
  1404  0070BE  2EE8               	decfsz	wreg,f,c
  1405  0070C0  D7FE               	goto	u2847
  1406  0070C2  2E38               	decfsz	??_main& (0+255),f,c
  1407  0070C4  D7FC               	goto	u2847
  1408                           
  1409                           ;Main.c: 96: _delay((unsigned long)((100)*(4000000/4000.0)));
  1410  0070C6  0E82               	movlw	130
  1411  0070C8  6E38               	movwf	??_main& (0+255),c
  1412  0070CA  0EDE               	movlw	222
  1413  0070CC                     u2857:
  1414  0070CC  2EE8               	decfsz	wreg,f,c
  1415  0070CE  D7FE               	goto	u2857
  1416  0070D0  2E38               	decfsz	??_main& (0+255),f,c
  1417  0070D2  D7FC               	goto	u2857
  1418                           
  1419                           ;Main.c: 97: _delay((unsigned long)((100)*(4000000/4000.0)));
  1420  0070D4  0E82               	movlw	130
  1421  0070D6  6E38               	movwf	??_main& (0+255),c
  1422  0070D8  0EDE               	movlw	222
  1423  0070DA                     u2867:
  1424  0070DA  2EE8               	decfsz	wreg,f,c
  1425  0070DC  D7FE               	goto	u2867
  1426  0070DE  2E38               	decfsz	??_main& (0+255),f,c
  1427  0070E0  D7FC               	goto	u2867
  1428                           
  1429                           ;Main.c: 98: _delay((unsigned long)((100)*(4000000/4000.0)));
  1430  0070E2  0E82               	movlw	130
  1431  0070E4  6E38               	movwf	??_main& (0+255),c
  1432  0070E6  0EDE               	movlw	222
  1433  0070E8                     u2877:
  1434  0070E8  2EE8               	decfsz	wreg,f,c
  1435  0070EA  D7FE               	goto	u2877
  1436  0070EC  2E38               	decfsz	??_main& (0+255),f,c
  1437  0070EE  D7FC               	goto	u2877
  1438                           
  1439                           ;Main.c: 101: if(PORTAbits.RA2==1){
  1440  0070F0  A480               	btfss	3968,2,c	;volatile
  1441  0070F2  EF1D  F03D         	goto	l2995
  1442  0070F6                     l2653:
  1443                           
  1444                           ;Main.c: 103: e=0;
  1445  0070F6  0E00               	movlw	0
  1446  0070F8  0100               	movlb	0	; () banked
  1447  0070FA  6FFB               	movwf	(_e+1)& (0+255),b
  1448  0070FC  0E00               	movlw	0
  1449  0070FE  0100               	movlb	0	; () banked
  1450  007100  6FFA               	movwf	_e& (0+255),b
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;Main.c: 104: if(B==0){
  1454  007102  0100               	movlb	0	; () banked
  1455  007104  51F9               	movf	(_B+1)& (0+255),w,b
  1456  007106  11F8               	iorwf	_B& (0+255),w,b
  1457  007108  A4D8               	btfss	status,2,c
  1458  00710A  D036               	goto	l2671
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;Main.c: 105: Lcd_Init();
  1462  00710C  EC1B  F034         	call	_Lcd_Init	;wreg free
  1463                           
  1464                           ;Main.c: 106: Lcd_Cmd(1);
  1465  007110  0E01               	movlw	1
  1466  007112  EC88  F033         	call	_Lcd_Cmd
  1467                           
  1468                           ;Main.c: 107: Lcd_Cmd(12);
  1469  007116  0E0C               	movlw	12
  1470  007118  EC88  F033         	call	_Lcd_Cmd
  1471                           
  1472                           ;Main.c: 108: Lcd_Out2(1,1,"   Frecuencia");
  1473  00711C  0E01               	movlw	1
  1474  00711E  6E04               	movwf	Lcd_Out2@x,c
  1475  007120  0E7E               	movlw	high STR_9
  1476  007122  6E06               	movwf	Lcd_Out2@buffer+1,c
  1477  007124  0EE9               	movlw	low STR_9
  1478  007126  6E05               	movwf	Lcd_Out2@buffer,c
  1479  007128  0E01               	movlw	1
  1480  00712A  EC37  F031         	call	_Lcd_Out2
  1481                           
  1482                           ;Main.c: 109: Lcd_Out2(2,1,"   Ciclo");
  1483  00712E  0E01               	movlw	1
  1484  007130  6E04               	movwf	Lcd_Out2@x,c
  1485  007132  0E7F               	movlw	high STR_10
  1486  007134  6E06               	movwf	Lcd_Out2@buffer+1,c
  1487  007136  0E65               	movlw	low STR_10
  1488  007138  6E05               	movwf	Lcd_Out2@buffer,c
  1489  00713A  0E02               	movlw	2
  1490  00713C  EC37  F031         	call	_Lcd_Out2
  1491                           
  1492                           ;Main.c: 110: _delay((unsigned long)((100)*(4000000/4000.0)));
  1493  007140  0E82               	movlw	130
  1494  007142  6E38               	movwf	??_main& (0+255),c
  1495  007144  0EDE               	movlw	222
  1496  007146                     u2887:
  1497  007146  2EE8               	decfsz	wreg,f,c
  1498  007148  D7FE               	goto	u2887
  1499  00714A  2E38               	decfsz	??_main& (0+255),f,c
  1500  00714C  D7FC               	goto	u2887
  1501                           
  1502                           ;Main.c: 111: _delay((unsigned long)((100)*(4000000/4000.0)));
  1503  00714E  0E82               	movlw	130
  1504  007150  6E38               	movwf	??_main& (0+255),c
  1505  007152  0EDE               	movlw	222
  1506  007154                     u2897:
  1507  007154  2EE8               	decfsz	wreg,f,c
  1508  007156  D7FE               	goto	u2897
  1509  007158  2E38               	decfsz	??_main& (0+255),f,c
  1510  00715A  D7FC               	goto	u2897
  1511                           
  1512                           ;Main.c: 112: _delay((unsigned long)((100)*(4000000/4000.0)));
  1513  00715C  0E82               	movlw	130
  1514  00715E  6E38               	movwf	??_main& (0+255),c
  1515  007160  0EDE               	movlw	222
  1516  007162                     u2907:
  1517  007162  2EE8               	decfsz	wreg,f,c
  1518  007164  D7FE               	goto	u2907
  1519  007166  2E38               	decfsz	??_main& (0+255),f,c
  1520  007168  D7FC               	goto	u2907
  1521                           
  1522                           ;Main.c: 113: _delay((unsigned long)((100)*(4000000/4000.0)));
  1523  00716A  0E82               	movlw	130
  1524  00716C  6E38               	movwf	??_main& (0+255),c
  1525  00716E  0EDE               	movlw	222
  1526  007170                     u2917:
  1527  007170  2EE8               	decfsz	wreg,f,c
  1528  007172  D7FE               	goto	u2917
  1529  007174  2E38               	decfsz	??_main& (0+255),f,c
  1530  007176  D7FC               	goto	u2917
  1531  007178                     l2671:
  1532                           
  1533                           ;Main.c: 115: }
  1534                           ;Main.c: 116: if(B==1){
  1535  007178  0100               	movlb	0	; () banked
  1536  00717A  05F8               	decf	_B& (0+255),w,b
  1537  00717C  11F9               	iorwf	(_B+1)& (0+255),w,b
  1538  00717E  A4D8               	btfss	status,2,c
  1539  007180  D08B               	goto	l2725
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;Main.c: 118: Lcd_Init();
  1543  007182  EC1B  F034         	call	_Lcd_Init	;wreg free
  1544                           
  1545                           ;Main.c: 119: Lcd_Cmd(1);
  1546  007186  0E01               	movlw	1
  1547  007188  EC88  F033         	call	_Lcd_Cmd
  1548                           
  1549                           ;Main.c: 120: Lcd_Cmd(12);
  1550  00718C  0E0C               	movlw	12
  1551  00718E  EC88  F033         	call	_Lcd_Cmd
  1552                           
  1553                           ;Main.c: 121: Lcd_Out2(1,1,"=> Frecuencia");
  1554  007192  0E01               	movlw	1
  1555  007194  6E04               	movwf	Lcd_Out2@x,c
  1556  007196  0E7E               	movlw	high STR_11
  1557  007198  6E06               	movwf	Lcd_Out2@buffer+1,c
  1558  00719A  0EF7               	movlw	low STR_11
  1559  00719C  6E05               	movwf	Lcd_Out2@buffer,c
  1560  00719E  0E01               	movlw	1
  1561  0071A0  EC37  F031         	call	_Lcd_Out2
  1562                           
  1563                           ;Main.c: 122: Lcd_Out2(2,1,"   Ciclo");
  1564  0071A4  0E01               	movlw	1
  1565  0071A6  6E04               	movwf	Lcd_Out2@x,c
  1566  0071A8  0E7F               	movlw	high STR_10
  1567  0071AA  6E06               	movwf	Lcd_Out2@buffer+1,c
  1568  0071AC  0E65               	movlw	low STR_10
  1569  0071AE  6E05               	movwf	Lcd_Out2@buffer,c
  1570  0071B0  0E02               	movlw	2
  1571  0071B2  EC37  F031         	call	_Lcd_Out2
  1572                           
  1573                           ;Main.c: 123: _delay((unsigned long)((100)*(4000000/4000.0)));
  1574  0071B6  0E82               	movlw	130
  1575  0071B8  6E38               	movwf	??_main& (0+255),c
  1576  0071BA  0EDE               	movlw	222
  1577  0071BC                     u2927:
  1578  0071BC  2EE8               	decfsz	wreg,f,c
  1579  0071BE  D7FE               	goto	u2927
  1580  0071C0  2E38               	decfsz	??_main& (0+255),f,c
  1581  0071C2  D7FC               	goto	u2927
  1582                           
  1583                           ;Main.c: 124: _delay((unsigned long)((100)*(4000000/4000.0)));
  1584  0071C4  0E82               	movlw	130
  1585  0071C6  6E38               	movwf	??_main& (0+255),c
  1586  0071C8  0EDE               	movlw	222
  1587  0071CA                     u2937:
  1588  0071CA  2EE8               	decfsz	wreg,f,c
  1589  0071CC  D7FE               	goto	u2937
  1590  0071CE  2E38               	decfsz	??_main& (0+255),f,c
  1591  0071D0  D7FC               	goto	u2937
  1592                           
  1593                           ;Main.c: 125: _delay((unsigned long)((100)*(4000000/4000.0)));
  1594  0071D2  0E82               	movlw	130
  1595  0071D4  6E38               	movwf	??_main& (0+255),c
  1596  0071D6  0EDE               	movlw	222
  1597  0071D8                     u2947:
  1598  0071D8  2EE8               	decfsz	wreg,f,c
  1599  0071DA  D7FE               	goto	u2947
  1600  0071DC  2E38               	decfsz	??_main& (0+255),f,c
  1601  0071DE  D7FC               	goto	u2947
  1602                           
  1603                           ;Main.c: 126: _delay((unsigned long)((100)*(4000000/4000.0)));
  1604  0071E0  0E82               	movlw	130
  1605  0071E2  6E38               	movwf	??_main& (0+255),c
  1606  0071E4  0EDE               	movlw	222
  1607  0071E6                     u2957:
  1608  0071E6  2EE8               	decfsz	wreg,f,c
  1609  0071E8  D7FE               	goto	u2957
  1610  0071EA  2E38               	decfsz	??_main& (0+255),f,c
  1611  0071EC  D7FC               	goto	u2957
  1612                           
  1613                           ;Main.c: 129: if(PORTAbits.RA2==1){
  1614  0071EE  A480               	btfss	3968,2,c	;volatile
  1615  0071F0  D053               	goto	l2725
  1616                           
  1617                           ;Main.c: 130: r=0;
  1618  0071F2  0E00               	movlw	0
  1619  0071F4  0100               	movlb	0	; () banked
  1620  0071F6  6FFD               	movwf	(_r+1)& (0+255),b
  1621  0071F8  0E00               	movlw	0
  1622  0071FA  0100               	movlb	0	; () banked
  1623  0071FC  6FFC               	movwf	_r& (0+255),b
  1624  0071FE                     l2691:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;Main.c: 132: Lcd_Init();
  1628  0071FE  EC1B  F034         	call	_Lcd_Init	;wreg free
  1629                           
  1630                           ;Main.c: 133: Lcd_Cmd(1);
  1631  007202  0E01               	movlw	1
  1632  007204  EC88  F033         	call	_Lcd_Cmd
  1633                           
  1634                           ;Main.c: 134: Lcd_Cmd(12);
  1635  007208  0E0C               	movlw	12
  1636  00720A  EC88  F033         	call	_Lcd_Cmd
  1637                           
  1638                           ;Main.c: 135: Lcd_Out2(1,1,"  000 Hz");
  1639  00720E  0E01               	movlw	1
  1640  007210  6E04               	movwf	Lcd_Out2@x,c
  1641  007212  0E7F               	movlw	high STR_13
  1642  007214  6E06               	movwf	Lcd_Out2@buffer+1,c
  1643  007216  0E77               	movlw	low STR_13
  1644  007218  6E05               	movwf	Lcd_Out2@buffer,c
  1645  00721A  0E01               	movlw	1
  1646  00721C  EC37  F031         	call	_Lcd_Out2
  1647                           
  1648                           ;Main.c: 136: _delay((unsigned long)((100)*(4000000/4000.0)));
  1649  007220  0E82               	movlw	130
  1650  007222  6E38               	movwf	??_main& (0+255),c
  1651  007224  0EDE               	movlw	222
  1652  007226                     u2967:
  1653  007226  2EE8               	decfsz	wreg,f,c
  1654  007228  D7FE               	goto	u2967
  1655  00722A  2E38               	decfsz	??_main& (0+255),f,c
  1656  00722C  D7FC               	goto	u2967
  1657                           
  1658                           ;Main.c: 137: _delay((unsigned long)((100)*(4000000/4000.0)));
  1659  00722E  0E82               	movlw	130
  1660  007230  6E38               	movwf	??_main& (0+255),c
  1661  007232  0EDE               	movlw	222
  1662  007234                     u2977:
  1663  007234  2EE8               	decfsz	wreg,f,c
  1664  007236  D7FE               	goto	u2977
  1665  007238  2E38               	decfsz	??_main& (0+255),f,c
  1666  00723A  D7FC               	goto	u2977
  1667                           
  1668                           ;Main.c: 139: if(PORTAbits.RA3==1){
  1669  00723C  A680               	btfss	3968,3,c	;volatile
  1670  00723E  D017               	goto	l2713
  1671                           
  1672                           ;Main.c: 140: A++;
  1673  007240  0100               	movlb	0	; () banked
  1674  007242  2BF7               	incf	main@A& (0+255),f,b
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;Main.c: 141: lcd_goto(2,1);
  1678  007244  0E00               	movlw	0
  1679  007246  6E05               	movwf	lcd_goto@x+1,c
  1680  007248  0E02               	movlw	2
  1681  00724A  6E04               	movwf	lcd_goto@x,c
  1682  00724C  0E00               	movlw	0
  1683  00724E  6E07               	movwf	lcd_goto@y+1,c
  1684  007250  0E01               	movlw	1
  1685  007252  6E06               	movwf	lcd_goto@y,c
  1686  007254  ECB4  F030         	call	_lcd_goto	;wreg free
  1687                           
  1688                           ;Main.c: 142: Lcd_Chr_CP(A);
  1689  007258  0100               	movlb	0	; () banked
  1690  00725A  51F7               	movf	main@A& (0+255),w,b
  1691  00725C  ECAF  F034         	call	_Lcd_Chr_CP
  1692                           
  1693                           ;Main.c: 143: _delay((unsigned long)((100)*(4000000/4000.0)));
  1694  007260  0E82               	movlw	130
  1695  007262  6E38               	movwf	??_main& (0+255),c
  1696  007264  0EDE               	movlw	222
  1697  007266                     u2987:
  1698  007266  2EE8               	decfsz	wreg,f,c
  1699  007268  D7FE               	goto	u2987
  1700  00726A  2E38               	decfsz	??_main& (0+255),f,c
  1701  00726C  D7FC               	goto	u2987
  1702  00726E                     l2713:
  1703                           
  1704                           ;Main.c: 144: }
  1705                           ;Main.c: 145: if(A>56){
  1706  00726E  0E38               	movlw	56
  1707  007270  0100               	movlb	0	; () banked
  1708  007272  65F7               	cpfsgt	main@A& (0+255),b
  1709  007274  D003               	goto	l2717
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;Main.c: 146: A=47;
  1713  007276  0E2F               	movlw	47
  1714  007278  0100               	movlb	0	; () banked
  1715  00727A  6FF7               	movwf	main@A& (0+255),b
  1716  00727C                     l2717:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;Main.c: 147: }
  1720                           ;Main.c: 148: if(PORTAbits.RA0==1 && PORTAbits.RA1==1){
  1721  00727C  B080               	btfsc	3968,0,c	;volatile
  1722                           
  1723                           ; BSR set to: 0
  1724  00727E  A280               	btfss	3968,1,c	;volatile
  1725  007280  D006               	goto	l2723
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;Main.c: 149: r=1;
  1729  007282  0E00               	movlw	0
  1730  007284  0100               	movlb	0	; () banked
  1731  007286  6FFD               	movwf	(_r+1)& (0+255),b
  1732  007288  0E01               	movlw	1
  1733  00728A  0100               	movlb	0	; () banked
  1734  00728C  6FFC               	movwf	_r& (0+255),b
  1735  00728E                     l2723:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;Main.c: 150: }
  1739                           ;Main.c: 152: }while(r==0);
  1740  00728E  0100               	movlb	0	; () banked
  1741  007290  51FD               	movf	(_r+1)& (0+255),w,b
  1742  007292  11FC               	iorwf	_r& (0+255),w,b
  1743  007294  B4D8               	btfsc	status,2,c
  1744  007296  D7B3               	goto	l2691
  1745  007298                     l2725:
  1746                           
  1747                           ;Main.c: 154: }
  1748                           ;Main.c: 155: }
  1749                           ;Main.c: 157: if(B==2){
  1750  007298  0100               	movlb	0	; () banked
  1751  00729A  51F8               	movf	_B& (0+255),w,b
  1752  00729C  0A02               	xorlw	2
  1753  00729E  11F9               	iorwf	(_B+1)& (0+255),w,b
  1754  0072A0  A4D8               	btfss	status,2,c
  1755  0072A2  D395               	goto	l135
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;Main.c: 158: Lcd_Init();
  1759  0072A4  EC1B  F034         	call	_Lcd_Init	;wreg free
  1760                           
  1761                           ;Main.c: 159: Lcd_Cmd(1);
  1762  0072A8  0E01               	movlw	1
  1763  0072AA  EC88  F033         	call	_Lcd_Cmd
  1764                           
  1765                           ;Main.c: 160: Lcd_Cmd(12);
  1766  0072AE  0E0C               	movlw	12
  1767  0072B0  EC88  F033         	call	_Lcd_Cmd
  1768                           
  1769                           ;Main.c: 161: Lcd_Out2(1,1,"   Frecuencia");
  1770  0072B4  0E01               	movlw	1
  1771  0072B6  6E04               	movwf	Lcd_Out2@x,c
  1772  0072B8  0E7E               	movlw	high STR_9
  1773  0072BA  6E06               	movwf	Lcd_Out2@buffer+1,c
  1774  0072BC  0EE9               	movlw	low STR_9
  1775  0072BE  6E05               	movwf	Lcd_Out2@buffer,c
  1776  0072C0  0E01               	movlw	1
  1777  0072C2  EC37  F031         	call	_Lcd_Out2
  1778                           
  1779                           ;Main.c: 162: Lcd_Out2(2,1,"=> Ciclo");
  1780  0072C6  0E01               	movlw	1
  1781  0072C8  6E04               	movwf	Lcd_Out2@x,c
  1782  0072CA  0E7F               	movlw	high STR_15
  1783  0072CC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1784  0072CE  0E6E               	movlw	low STR_15
  1785  0072D0  6E05               	movwf	Lcd_Out2@buffer,c
  1786  0072D2  0E02               	movlw	2
  1787  0072D4  EC37  F031         	call	_Lcd_Out2
  1788                           
  1789                           ;Main.c: 163: _delay((unsigned long)((100)*(4000000/4000.0)));
  1790  0072D8  0E82               	movlw	130
  1791  0072DA  6E38               	movwf	??_main& (0+255),c
  1792  0072DC  0EDE               	movlw	222
  1793  0072DE                     u2997:
  1794  0072DE  2EE8               	decfsz	wreg,f,c
  1795  0072E0  D7FE               	goto	u2997
  1796  0072E2  2E38               	decfsz	??_main& (0+255),f,c
  1797  0072E4  D7FC               	goto	u2997
  1798                           
  1799                           ;Main.c: 164: _delay((unsigned long)((100)*(4000000/4000.0)));
  1800  0072E6  0E82               	movlw	130
  1801  0072E8  6E38               	movwf	??_main& (0+255),c
  1802  0072EA  0EDE               	movlw	222
  1803  0072EC                     u3007:
  1804  0072EC  2EE8               	decfsz	wreg,f,c
  1805  0072EE  D7FE               	goto	u3007
  1806  0072F0  2E38               	decfsz	??_main& (0+255),f,c
  1807  0072F2  D7FC               	goto	u3007
  1808                           
  1809                           ;Main.c: 165: _delay((unsigned long)((100)*(4000000/4000.0)));
  1810  0072F4  0E82               	movlw	130
  1811  0072F6  6E38               	movwf	??_main& (0+255),c
  1812  0072F8  0EDE               	movlw	222
  1813  0072FA                     u3017:
  1814  0072FA  2EE8               	decfsz	wreg,f,c
  1815  0072FC  D7FE               	goto	u3017
  1816  0072FE  2E38               	decfsz	??_main& (0+255),f,c
  1817  007300  D7FC               	goto	u3017
  1818                           
  1819                           ;Main.c: 166: _delay((unsigned long)((100)*(4000000/4000.0)));
  1820  007302  0E82               	movlw	130
  1821  007304  6E38               	movwf	??_main& (0+255),c
  1822  007306  0EDE               	movlw	222
  1823  007308                     u3027:
  1824  007308  2EE8               	decfsz	wreg,f,c
  1825  00730A  D7FE               	goto	u3027
  1826  00730C  2E38               	decfsz	??_main& (0+255),f,c
  1827  00730E  D7FC               	goto	u3027
  1828                           
  1829                           ;Main.c: 168: if(PORTAbits.RA2==1){
  1830  007310  A480               	btfss	3968,2,c	;volatile
  1831  007312  D35D               	goto	l135
  1832  007314                     l2743:
  1833                           
  1834                           ;Main.c: 171: t=0;
  1835  007314  0E00               	movlw	0
  1836  007316  6E46               	movwf	_t+1,c
  1837  007318  0E00               	movlw	0
  1838  00731A  6E45               	movwf	_t,c
  1839                           
  1840                           ;Main.c: 174: if(B==1){
  1841  00731C  0100               	movlb	0	; () banked
  1842  00731E  05F8               	decf	_B& (0+255),w,b
  1843  007320  11F9               	iorwf	(_B+1)& (0+255),w,b
  1844  007322  A4D8               	btfss	status,2,c
  1845  007324  D052               	goto	l2767
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;Main.c: 175: Lcd_Init();
  1849  007326  EC1B  F034         	call	_Lcd_Init	;wreg free
  1850                           
  1851                           ;Main.c: 176: Lcd_Cmd(1);
  1852  00732A  0E01               	movlw	1
  1853  00732C  EC88  F033         	call	_Lcd_Cmd
  1854                           
  1855                           ;Main.c: 177: Lcd_Cmd(12);
  1856  007330  0E0C               	movlw	12
  1857  007332  EC88  F033         	call	_Lcd_Cmd
  1858                           
  1859                           ;Main.c: 178: Lcd_Out2(1,0,"*10%");
  1860  007336  0E00               	movlw	0
  1861  007338  6E04               	movwf	Lcd_Out2@x,c
  1862  00733A  0E7F               	movlw	high STR_16
  1863  00733C  6E06               	movwf	Lcd_Out2@buffer+1,c
  1864  00733E  0EA5               	movlw	low STR_16
  1865  007340  6E05               	movwf	Lcd_Out2@buffer,c
  1866  007342  0E01               	movlw	1
  1867  007344  EC37  F031         	call	_Lcd_Out2
  1868                           
  1869                           ;Main.c: 179: Lcd_Out2(2,0," 20%");
  1870  007348  0E00               	movlw	0
  1871  00734A  6E04               	movwf	Lcd_Out2@x,c
  1872  00734C  0E7F               	movlw	high STR_17
  1873  00734E  6E06               	movwf	Lcd_Out2@buffer+1,c
  1874  007350  0EAA               	movlw	low STR_17
  1875  007352  6E05               	movwf	Lcd_Out2@buffer,c
  1876  007354  0E02               	movlw	2
  1877  007356  EC37  F031         	call	_Lcd_Out2
  1878                           
  1879                           ;Main.c: 180: Lcd_Out2(1,5," 30%");
  1880  00735A  0E05               	movlw	5
  1881  00735C  6E04               	movwf	Lcd_Out2@x,c
  1882  00735E  0E7F               	movlw	high STR_18
  1883  007360  6E06               	movwf	Lcd_Out2@buffer+1,c
  1884  007362  0EB4               	movlw	low STR_18
  1885  007364  6E05               	movwf	Lcd_Out2@buffer,c
  1886  007366  0E01               	movlw	1
  1887  007368  EC37  F031         	call	_Lcd_Out2
  1888                           
  1889                           ;Main.c: 181: Lcd_Out2(2,5," 40%");
  1890  00736C  0E05               	movlw	5
  1891  00736E  6E04               	movwf	Lcd_Out2@x,c
  1892  007370  0E7F               	movlw	high STR_19
  1893  007372  6E06               	movwf	Lcd_Out2@buffer+1,c
  1894  007374  0EBE               	movlw	low STR_19
  1895  007376  6E05               	movwf	Lcd_Out2@buffer,c
  1896  007378  0E02               	movlw	2
  1897  00737A  EC37  F031         	call	_Lcd_Out2
  1898                           
  1899                           ;Main.c: 182: Lcd_Out2(1,10," 50%");
  1900  00737E  0E0A               	movlw	10
  1901  007380  6E04               	movwf	Lcd_Out2@x,c
  1902  007382  0E7F               	movlw	high STR_20
  1903  007384  6E06               	movwf	Lcd_Out2@buffer+1,c
  1904  007386  0EC8               	movlw	low STR_20
  1905  007388  6E05               	movwf	Lcd_Out2@buffer,c
  1906  00738A  0E01               	movlw	1
  1907  00738C  EC37  F031         	call	_Lcd_Out2
  1908                           
  1909                           ;Main.c: 183: Lcd_Out2(2,10," 60%");
  1910  007390  0E0A               	movlw	10
  1911  007392  6E04               	movwf	Lcd_Out2@x,c
  1912  007394  0E7F               	movlw	high STR_21
  1913  007396  6E06               	movwf	Lcd_Out2@buffer+1,c
  1914  007398  0ED2               	movlw	low STR_21
  1915  00739A  6E05               	movwf	Lcd_Out2@buffer,c
  1916  00739C  0E02               	movlw	2
  1917  00739E  EC37  F031         	call	_Lcd_Out2
  1918                           
  1919                           ;Main.c: 184: _delay((unsigned long)((100)*(4000000/4000.0)));
  1920  0073A2  0E82               	movlw	130
  1921  0073A4  6E38               	movwf	??_main& (0+255),c
  1922  0073A6  0EDE               	movlw	222
  1923  0073A8                     u3037:
  1924  0073A8  2EE8               	decfsz	wreg,f,c
  1925  0073AA  D7FE               	goto	u3037
  1926  0073AC  2E38               	decfsz	??_main& (0+255),f,c
  1927  0073AE  D7FC               	goto	u3037
  1928                           
  1929                           ;Main.c: 185: _delay((unsigned long)((100)*(4000000/4000.0)));
  1930  0073B0  0E82               	movlw	130
  1931  0073B2  6E38               	movwf	??_main& (0+255),c
  1932  0073B4  0EDE               	movlw	222
  1933  0073B6                     u3047:
  1934  0073B6  2EE8               	decfsz	wreg,f,c
  1935  0073B8  D7FE               	goto	u3047
  1936  0073BA  2E38               	decfsz	??_main& (0+255),f,c
  1937  0073BC  D7FC               	goto	u3047
  1938                           
  1939                           ;Main.c: 186: Z=10;
  1940  0073BE  0E00               	movlw	0
  1941  0073C0  0100               	movlb	0	; () banked
  1942  0073C2  6FF6               	movwf	(main@Z+1)& (0+255),b
  1943  0073C4  0E0A               	movlw	10
  1944  0073C6  0100               	movlb	0	; () banked
  1945  0073C8  6FF5               	movwf	main@Z& (0+255),b
  1946  0073CA                     l2767:
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;Main.c: 188: }
  1950                           ;Main.c: 189: if(B==2){
  1951  0073CA  0100               	movlb	0	; () banked
  1952  0073CC  51F8               	movf	_B& (0+255),w,b
  1953  0073CE  0A02               	xorlw	2
  1954  0073D0  11F9               	iorwf	(_B+1)& (0+255),w,b
  1955  0073D2  A4D8               	btfss	status,2,c
  1956  0073D4  D052               	goto	l2789
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;Main.c: 190: Lcd_Init();
  1960  0073D6  EC1B  F034         	call	_Lcd_Init	;wreg free
  1961                           
  1962                           ;Main.c: 191: Lcd_Cmd(1);
  1963  0073DA  0E01               	movlw	1
  1964  0073DC  EC88  F033         	call	_Lcd_Cmd
  1965                           
  1966                           ;Main.c: 192: Lcd_Cmd(12);
  1967  0073E0  0E0C               	movlw	12
  1968  0073E2  EC88  F033         	call	_Lcd_Cmd
  1969                           
  1970                           ;Main.c: 193: Lcd_Out2(1,0," 10%");
  1971  0073E6  0E00               	movlw	0
  1972  0073E8  6E04               	movwf	Lcd_Out2@x,c
  1973  0073EA  0E7F               	movlw	high STR_22
  1974  0073EC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1975  0073EE  0EA0               	movlw	low STR_22
  1976  0073F0  6E05               	movwf	Lcd_Out2@buffer,c
  1977  0073F2  0E01               	movlw	1
  1978  0073F4  EC37  F031         	call	_Lcd_Out2
  1979                           
  1980                           ;Main.c: 194: Lcd_Out2(2,0,"*20%");
  1981  0073F8  0E00               	movlw	0
  1982  0073FA  6E04               	movwf	Lcd_Out2@x,c
  1983  0073FC  0E7F               	movlw	high STR_23
  1984  0073FE  6E06               	movwf	Lcd_Out2@buffer+1,c
  1985  007400  0EAF               	movlw	low STR_23
  1986  007402  6E05               	movwf	Lcd_Out2@buffer,c
  1987  007404  0E02               	movlw	2
  1988  007406  EC37  F031         	call	_Lcd_Out2
  1989                           
  1990                           ;Main.c: 195: Lcd_Out2(1,5," 30%");
  1991  00740A  0E05               	movlw	5
  1992  00740C  6E04               	movwf	Lcd_Out2@x,c
  1993  00740E  0E7F               	movlw	high STR_18
  1994  007410  6E06               	movwf	Lcd_Out2@buffer+1,c
  1995  007412  0EB4               	movlw	low STR_18
  1996  007414  6E05               	movwf	Lcd_Out2@buffer,c
  1997  007416  0E01               	movlw	1
  1998  007418  EC37  F031         	call	_Lcd_Out2
  1999                           
  2000                           ;Main.c: 196: Lcd_Out2(2,5," 40%");
  2001  00741C  0E05               	movlw	5
  2002  00741E  6E04               	movwf	Lcd_Out2@x,c
  2003  007420  0E7F               	movlw	high STR_19
  2004  007422  6E06               	movwf	Lcd_Out2@buffer+1,c
  2005  007424  0EBE               	movlw	low STR_19
  2006  007426  6E05               	movwf	Lcd_Out2@buffer,c
  2007  007428  0E02               	movlw	2
  2008  00742A  EC37  F031         	call	_Lcd_Out2
  2009                           
  2010                           ;Main.c: 197: Lcd_Out2(1,10," 50%");
  2011  00742E  0E0A               	movlw	10
  2012  007430  6E04               	movwf	Lcd_Out2@x,c
  2013  007432  0E7F               	movlw	high STR_20
  2014  007434  6E06               	movwf	Lcd_Out2@buffer+1,c
  2015  007436  0EC8               	movlw	low STR_20
  2016  007438  6E05               	movwf	Lcd_Out2@buffer,c
  2017  00743A  0E01               	movlw	1
  2018  00743C  EC37  F031         	call	_Lcd_Out2
  2019                           
  2020                           ;Main.c: 198: Lcd_Out2(2,10," 60%");
  2021  007440  0E0A               	movlw	10
  2022  007442  6E04               	movwf	Lcd_Out2@x,c
  2023  007444  0E7F               	movlw	high STR_21
  2024  007446  6E06               	movwf	Lcd_Out2@buffer+1,c
  2025  007448  0ED2               	movlw	low STR_21
  2026  00744A  6E05               	movwf	Lcd_Out2@buffer,c
  2027  00744C  0E02               	movlw	2
  2028  00744E  EC37  F031         	call	_Lcd_Out2
  2029                           
  2030                           ;Main.c: 199: _delay((unsigned long)((100)*(4000000/4000.0)));
  2031  007452  0E82               	movlw	130
  2032  007454  6E38               	movwf	??_main& (0+255),c
  2033  007456  0EDE               	movlw	222
  2034  007458                     u3057:
  2035  007458  2EE8               	decfsz	wreg,f,c
  2036  00745A  D7FE               	goto	u3057
  2037  00745C  2E38               	decfsz	??_main& (0+255),f,c
  2038  00745E  D7FC               	goto	u3057
  2039                           
  2040                           ;Main.c: 200: _delay((unsigned long)((100)*(4000000/4000.0)));
  2041  007460  0E82               	movlw	130
  2042  007462  6E38               	movwf	??_main& (0+255),c
  2043  007464  0EDE               	movlw	222
  2044  007466                     u3067:
  2045  007466  2EE8               	decfsz	wreg,f,c
  2046  007468  D7FE               	goto	u3067
  2047  00746A  2E38               	decfsz	??_main& (0+255),f,c
  2048  00746C  D7FC               	goto	u3067
  2049                           
  2050                           ;Main.c: 201: Z=20;
  2051  00746E  0E00               	movlw	0
  2052  007470  0100               	movlb	0	; () banked
  2053  007472  6FF6               	movwf	(main@Z+1)& (0+255),b
  2054  007474  0E14               	movlw	20
  2055  007476  0100               	movlb	0	; () banked
  2056  007478  6FF5               	movwf	main@Z& (0+255),b
  2057  00747A                     l2789:
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;Main.c: 203: }
  2061                           ;Main.c: 204: if(B==3){
  2062  00747A  0100               	movlb	0	; () banked
  2063  00747C  51F8               	movf	_B& (0+255),w,b
  2064  00747E  0A03               	xorlw	3
  2065  007480  11F9               	iorwf	(_B+1)& (0+255),w,b
  2066  007482  A4D8               	btfss	status,2,c
  2067  007484  D052               	goto	l2811
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;Main.c: 205: Lcd_Init();
  2071  007486  EC1B  F034         	call	_Lcd_Init	;wreg free
  2072                           
  2073                           ;Main.c: 206: Lcd_Cmd(1);
  2074  00748A  0E01               	movlw	1
  2075  00748C  EC88  F033         	call	_Lcd_Cmd
  2076                           
  2077                           ;Main.c: 207: Lcd_Cmd(12);
  2078  007490  0E0C               	movlw	12
  2079  007492  EC88  F033         	call	_Lcd_Cmd
  2080                           
  2081                           ;Main.c: 208: Lcd_Out2(1,0," 10%");
  2082  007496  0E00               	movlw	0
  2083  007498  6E04               	movwf	Lcd_Out2@x,c
  2084  00749A  0E7F               	movlw	high STR_22
  2085  00749C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2086  00749E  0EA0               	movlw	low STR_22
  2087  0074A0  6E05               	movwf	Lcd_Out2@buffer,c
  2088  0074A2  0E01               	movlw	1
  2089  0074A4  EC37  F031         	call	_Lcd_Out2
  2090                           
  2091                           ;Main.c: 209: Lcd_Out2(2,0," 20%");
  2092  0074A8  0E00               	movlw	0
  2093  0074AA  6E04               	movwf	Lcd_Out2@x,c
  2094  0074AC  0E7F               	movlw	high STR_17
  2095  0074AE  6E06               	movwf	Lcd_Out2@buffer+1,c
  2096  0074B0  0EAA               	movlw	low STR_17
  2097  0074B2  6E05               	movwf	Lcd_Out2@buffer,c
  2098  0074B4  0E02               	movlw	2
  2099  0074B6  EC37  F031         	call	_Lcd_Out2
  2100                           
  2101                           ;Main.c: 210: Lcd_Out2(1,5,"*30%");
  2102  0074BA  0E05               	movlw	5
  2103  0074BC  6E04               	movwf	Lcd_Out2@x,c
  2104  0074BE  0E7F               	movlw	high STR_30
  2105  0074C0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2106  0074C2  0EB9               	movlw	low STR_30
  2107  0074C4  6E05               	movwf	Lcd_Out2@buffer,c
  2108  0074C6  0E01               	movlw	1
  2109  0074C8  EC37  F031         	call	_Lcd_Out2
  2110                           
  2111                           ;Main.c: 211: Lcd_Out2(2,5," 40%");
  2112  0074CC  0E05               	movlw	5
  2113  0074CE  6E04               	movwf	Lcd_Out2@x,c
  2114  0074D0  0E7F               	movlw	high STR_19
  2115  0074D2  6E06               	movwf	Lcd_Out2@buffer+1,c
  2116  0074D4  0EBE               	movlw	low STR_19
  2117  0074D6  6E05               	movwf	Lcd_Out2@buffer,c
  2118  0074D8  0E02               	movlw	2
  2119  0074DA  EC37  F031         	call	_Lcd_Out2
  2120                           
  2121                           ;Main.c: 212: Lcd_Out2(1,10," 50%");
  2122  0074DE  0E0A               	movlw	10
  2123  0074E0  6E04               	movwf	Lcd_Out2@x,c
  2124  0074E2  0E7F               	movlw	high STR_20
  2125  0074E4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2126  0074E6  0EC8               	movlw	low STR_20
  2127  0074E8  6E05               	movwf	Lcd_Out2@buffer,c
  2128  0074EA  0E01               	movlw	1
  2129  0074EC  EC37  F031         	call	_Lcd_Out2
  2130                           
  2131                           ;Main.c: 213: Lcd_Out2(2,10," 60%");
  2132  0074F0  0E0A               	movlw	10
  2133  0074F2  6E04               	movwf	Lcd_Out2@x,c
  2134  0074F4  0E7F               	movlw	high STR_21
  2135  0074F6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2136  0074F8  0ED2               	movlw	low STR_21
  2137  0074FA  6E05               	movwf	Lcd_Out2@buffer,c
  2138  0074FC  0E02               	movlw	2
  2139  0074FE  EC37  F031         	call	_Lcd_Out2
  2140                           
  2141                           ;Main.c: 214: _delay((unsigned long)((100)*(4000000/4000.0)));
  2142  007502  0E82               	movlw	130
  2143  007504  6E38               	movwf	??_main& (0+255),c
  2144  007506  0EDE               	movlw	222
  2145  007508                     u3077:
  2146  007508  2EE8               	decfsz	wreg,f,c
  2147  00750A  D7FE               	goto	u3077
  2148  00750C  2E38               	decfsz	??_main& (0+255),f,c
  2149  00750E  D7FC               	goto	u3077
  2150                           
  2151                           ;Main.c: 215: _delay((unsigned long)((100)*(4000000/4000.0)));
  2152  007510  0E82               	movlw	130
  2153  007512  6E38               	movwf	??_main& (0+255),c
  2154  007514  0EDE               	movlw	222
  2155  007516                     u3087:
  2156  007516  2EE8               	decfsz	wreg,f,c
  2157  007518  D7FE               	goto	u3087
  2158  00751A  2E38               	decfsz	??_main& (0+255),f,c
  2159  00751C  D7FC               	goto	u3087
  2160                           
  2161                           ;Main.c: 216: Z=30;
  2162  00751E  0E00               	movlw	0
  2163  007520  0100               	movlb	0	; () banked
  2164  007522  6FF6               	movwf	(main@Z+1)& (0+255),b
  2165  007524  0E1E               	movlw	30
  2166  007526  0100               	movlb	0	; () banked
  2167  007528  6FF5               	movwf	main@Z& (0+255),b
  2168  00752A                     l2811:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;Main.c: 219: }
  2172                           ;Main.c: 220: if(B==4){
  2173  00752A  0100               	movlb	0	; () banked
  2174  00752C  51F8               	movf	_B& (0+255),w,b
  2175  00752E  0A04               	xorlw	4
  2176  007530  11F9               	iorwf	(_B+1)& (0+255),w,b
  2177  007532  A4D8               	btfss	status,2,c
  2178  007534  D052               	goto	l2833
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;Main.c: 221: Lcd_Init();
  2182  007536  EC1B  F034         	call	_Lcd_Init	;wreg free
  2183                           
  2184                           ;Main.c: 222: Lcd_Cmd(1);
  2185  00753A  0E01               	movlw	1
  2186  00753C  EC88  F033         	call	_Lcd_Cmd
  2187                           
  2188                           ;Main.c: 223: Lcd_Cmd(12);
  2189  007540  0E0C               	movlw	12
  2190  007542  EC88  F033         	call	_Lcd_Cmd
  2191                           
  2192                           ;Main.c: 224: Lcd_Out2(1,0," 10%");
  2193  007546  0E00               	movlw	0
  2194  007548  6E04               	movwf	Lcd_Out2@x,c
  2195  00754A  0E7F               	movlw	high STR_22
  2196  00754C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2197  00754E  0EA0               	movlw	low STR_22
  2198  007550  6E05               	movwf	Lcd_Out2@buffer,c
  2199  007552  0E01               	movlw	1
  2200  007554  EC37  F031         	call	_Lcd_Out2
  2201                           
  2202                           ;Main.c: 225: Lcd_Out2(2,0," 20%");
  2203  007558  0E00               	movlw	0
  2204  00755A  6E04               	movwf	Lcd_Out2@x,c
  2205  00755C  0E7F               	movlw	high STR_17
  2206  00755E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2207  007560  0EAA               	movlw	low STR_17
  2208  007562  6E05               	movwf	Lcd_Out2@buffer,c
  2209  007564  0E02               	movlw	2
  2210  007566  EC37  F031         	call	_Lcd_Out2
  2211                           
  2212                           ;Main.c: 226: Lcd_Out2(1,5," 30%");
  2213  00756A  0E05               	movlw	5
  2214  00756C  6E04               	movwf	Lcd_Out2@x,c
  2215  00756E  0E7F               	movlw	high STR_18
  2216  007570  6E06               	movwf	Lcd_Out2@buffer+1,c
  2217  007572  0EB4               	movlw	low STR_18
  2218  007574  6E05               	movwf	Lcd_Out2@buffer,c
  2219  007576  0E01               	movlw	1
  2220  007578  EC37  F031         	call	_Lcd_Out2
  2221                           
  2222                           ;Main.c: 227: Lcd_Out2(2,5,"*40%");
  2223  00757C  0E05               	movlw	5
  2224  00757E  6E04               	movwf	Lcd_Out2@x,c
  2225  007580  0E7F               	movlw	high STR_37
  2226  007582  6E06               	movwf	Lcd_Out2@buffer+1,c
  2227  007584  0EC3               	movlw	low STR_37
  2228  007586  6E05               	movwf	Lcd_Out2@buffer,c
  2229  007588  0E02               	movlw	2
  2230  00758A  EC37  F031         	call	_Lcd_Out2
  2231                           
  2232                           ;Main.c: 228: Lcd_Out2(1,10," 50%");
  2233  00758E  0E0A               	movlw	10
  2234  007590  6E04               	movwf	Lcd_Out2@x,c
  2235  007592  0E7F               	movlw	high STR_20
  2236  007594  6E06               	movwf	Lcd_Out2@buffer+1,c
  2237  007596  0EC8               	movlw	low STR_20
  2238  007598  6E05               	movwf	Lcd_Out2@buffer,c
  2239  00759A  0E01               	movlw	1
  2240  00759C  EC37  F031         	call	_Lcd_Out2
  2241                           
  2242                           ;Main.c: 229: Lcd_Out2(2,10," 60%");
  2243  0075A0  0E0A               	movlw	10
  2244  0075A2  6E04               	movwf	Lcd_Out2@x,c
  2245  0075A4  0E7F               	movlw	high STR_21
  2246  0075A6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2247  0075A8  0ED2               	movlw	low STR_21
  2248  0075AA  6E05               	movwf	Lcd_Out2@buffer,c
  2249  0075AC  0E02               	movlw	2
  2250  0075AE  EC37  F031         	call	_Lcd_Out2
  2251                           
  2252                           ;Main.c: 230: _delay((unsigned long)((100)*(4000000/4000.0)));
  2253  0075B2  0E82               	movlw	130
  2254  0075B4  6E38               	movwf	??_main& (0+255),c
  2255  0075B6  0EDE               	movlw	222
  2256  0075B8                     u3097:
  2257  0075B8  2EE8               	decfsz	wreg,f,c
  2258  0075BA  D7FE               	goto	u3097
  2259  0075BC  2E38               	decfsz	??_main& (0+255),f,c
  2260  0075BE  D7FC               	goto	u3097
  2261                           
  2262                           ;Main.c: 231: _delay((unsigned long)((100)*(4000000/4000.0)));
  2263  0075C0  0E82               	movlw	130
  2264  0075C2  6E38               	movwf	??_main& (0+255),c
  2265  0075C4  0EDE               	movlw	222
  2266  0075C6                     u3107:
  2267  0075C6  2EE8               	decfsz	wreg,f,c
  2268  0075C8  D7FE               	goto	u3107
  2269  0075CA  2E38               	decfsz	??_main& (0+255),f,c
  2270  0075CC  D7FC               	goto	u3107
  2271                           
  2272                           ;Main.c: 232: Z=40;
  2273  0075CE  0E00               	movlw	0
  2274  0075D0  0100               	movlb	0	; () banked
  2275  0075D2  6FF6               	movwf	(main@Z+1)& (0+255),b
  2276  0075D4  0E28               	movlw	40
  2277  0075D6  0100               	movlb	0	; () banked
  2278  0075D8  6FF5               	movwf	main@Z& (0+255),b
  2279  0075DA                     l2833:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;Main.c: 235: }
  2283                           ;Main.c: 236: if(B==5){
  2284  0075DA  0100               	movlb	0	; () banked
  2285  0075DC  51F8               	movf	_B& (0+255),w,b
  2286  0075DE  0A05               	xorlw	5
  2287  0075E0  11F9               	iorwf	(_B+1)& (0+255),w,b
  2288  0075E2  A4D8               	btfss	status,2,c
  2289  0075E4  D052               	goto	l2855
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;Main.c: 237: Lcd_Init();
  2293  0075E6  EC1B  F034         	call	_Lcd_Init	;wreg free
  2294                           
  2295                           ;Main.c: 238: Lcd_Cmd(1);
  2296  0075EA  0E01               	movlw	1
  2297  0075EC  EC88  F033         	call	_Lcd_Cmd
  2298                           
  2299                           ;Main.c: 239: Lcd_Cmd(12);
  2300  0075F0  0E0C               	movlw	12
  2301  0075F2  EC88  F033         	call	_Lcd_Cmd
  2302                           
  2303                           ;Main.c: 240: Lcd_Out2(1,0," 10%");
  2304  0075F6  0E00               	movlw	0
  2305  0075F8  6E04               	movwf	Lcd_Out2@x,c
  2306  0075FA  0E7F               	movlw	high STR_22
  2307  0075FC  6E06               	movwf	Lcd_Out2@buffer+1,c
  2308  0075FE  0EA0               	movlw	low STR_22
  2309  007600  6E05               	movwf	Lcd_Out2@buffer,c
  2310  007602  0E01               	movlw	1
  2311  007604  EC37  F031         	call	_Lcd_Out2
  2312                           
  2313                           ;Main.c: 241: Lcd_Out2(2,0," 20%");
  2314  007608  0E00               	movlw	0
  2315  00760A  6E04               	movwf	Lcd_Out2@x,c
  2316  00760C  0E7F               	movlw	high STR_17
  2317  00760E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2318  007610  0EAA               	movlw	low STR_17
  2319  007612  6E05               	movwf	Lcd_Out2@buffer,c
  2320  007614  0E02               	movlw	2
  2321  007616  EC37  F031         	call	_Lcd_Out2
  2322                           
  2323                           ;Main.c: 242: Lcd_Out2(1,5," 30%");
  2324  00761A  0E05               	movlw	5
  2325  00761C  6E04               	movwf	Lcd_Out2@x,c
  2326  00761E  0E7F               	movlw	high STR_18
  2327  007620  6E06               	movwf	Lcd_Out2@buffer+1,c
  2328  007622  0EB4               	movlw	low STR_18
  2329  007624  6E05               	movwf	Lcd_Out2@buffer,c
  2330  007626  0E01               	movlw	1
  2331  007628  EC37  F031         	call	_Lcd_Out2
  2332                           
  2333                           ;Main.c: 243: Lcd_Out2(2,5," 40%");
  2334  00762C  0E05               	movlw	5
  2335  00762E  6E04               	movwf	Lcd_Out2@x,c
  2336  007630  0E7F               	movlw	high STR_19
  2337  007632  6E06               	movwf	Lcd_Out2@buffer+1,c
  2338  007634  0EBE               	movlw	low STR_19
  2339  007636  6E05               	movwf	Lcd_Out2@buffer,c
  2340  007638  0E02               	movlw	2
  2341  00763A  EC37  F031         	call	_Lcd_Out2
  2342                           
  2343                           ;Main.c: 244: Lcd_Out2(1,10,"*50%");
  2344  00763E  0E0A               	movlw	10
  2345  007640  6E04               	movwf	Lcd_Out2@x,c
  2346  007642  0E7F               	movlw	high STR_44
  2347  007644  6E06               	movwf	Lcd_Out2@buffer+1,c
  2348  007646  0ECD               	movlw	low STR_44
  2349  007648  6E05               	movwf	Lcd_Out2@buffer,c
  2350  00764A  0E01               	movlw	1
  2351  00764C  EC37  F031         	call	_Lcd_Out2
  2352                           
  2353                           ;Main.c: 245: Lcd_Out2(2,10," 60%");
  2354  007650  0E0A               	movlw	10
  2355  007652  6E04               	movwf	Lcd_Out2@x,c
  2356  007654  0E7F               	movlw	high STR_21
  2357  007656  6E06               	movwf	Lcd_Out2@buffer+1,c
  2358  007658  0ED2               	movlw	low STR_21
  2359  00765A  6E05               	movwf	Lcd_Out2@buffer,c
  2360  00765C  0E02               	movlw	2
  2361  00765E  EC37  F031         	call	_Lcd_Out2
  2362                           
  2363                           ;Main.c: 246: _delay((unsigned long)((100)*(4000000/4000.0)));
  2364  007662  0E82               	movlw	130
  2365  007664  6E38               	movwf	??_main& (0+255),c
  2366  007666  0EDE               	movlw	222
  2367  007668                     u3117:
  2368  007668  2EE8               	decfsz	wreg,f,c
  2369  00766A  D7FE               	goto	u3117
  2370  00766C  2E38               	decfsz	??_main& (0+255),f,c
  2371  00766E  D7FC               	goto	u3117
  2372                           
  2373                           ;Main.c: 247: _delay((unsigned long)((100)*(4000000/4000.0)));
  2374  007670  0E82               	movlw	130
  2375  007672  6E38               	movwf	??_main& (0+255),c
  2376  007674  0EDE               	movlw	222
  2377  007676                     u3127:
  2378  007676  2EE8               	decfsz	wreg,f,c
  2379  007678  D7FE               	goto	u3127
  2380  00767A  2E38               	decfsz	??_main& (0+255),f,c
  2381  00767C  D7FC               	goto	u3127
  2382                           
  2383                           ;Main.c: 248: Z=50;
  2384  00767E  0E00               	movlw	0
  2385  007680  0100               	movlb	0	; () banked
  2386  007682  6FF6               	movwf	(main@Z+1)& (0+255),b
  2387  007684  0E32               	movlw	50
  2388  007686  0100               	movlb	0	; () banked
  2389  007688  6FF5               	movwf	main@Z& (0+255),b
  2390  00768A                     l2855:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;Main.c: 251: }
  2394                           ;Main.c: 252: if(B==6){
  2395  00768A  0100               	movlb	0	; () banked
  2396  00768C  51F8               	movf	_B& (0+255),w,b
  2397  00768E  0A06               	xorlw	6
  2398  007690  11F9               	iorwf	(_B+1)& (0+255),w,b
  2399  007692  A4D8               	btfss	status,2,c
  2400  007694  D052               	goto	l2877
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;Main.c: 253: Lcd_Init();
  2404  007696  EC1B  F034         	call	_Lcd_Init	;wreg free
  2405                           
  2406                           ;Main.c: 254: Lcd_Cmd(1);
  2407  00769A  0E01               	movlw	1
  2408  00769C  EC88  F033         	call	_Lcd_Cmd
  2409                           
  2410                           ;Main.c: 255: Lcd_Cmd(12);
  2411  0076A0  0E0C               	movlw	12
  2412  0076A2  EC88  F033         	call	_Lcd_Cmd
  2413                           
  2414                           ;Main.c: 256: Lcd_Out2(1,0," 10%");
  2415  0076A6  0E00               	movlw	0
  2416  0076A8  6E04               	movwf	Lcd_Out2@x,c
  2417  0076AA  0E7F               	movlw	high STR_22
  2418  0076AC  6E06               	movwf	Lcd_Out2@buffer+1,c
  2419  0076AE  0EA0               	movlw	low STR_22
  2420  0076B0  6E05               	movwf	Lcd_Out2@buffer,c
  2421  0076B2  0E01               	movlw	1
  2422  0076B4  EC37  F031         	call	_Lcd_Out2
  2423                           
  2424                           ;Main.c: 257: Lcd_Out2(2,0," 20%");
  2425  0076B8  0E00               	movlw	0
  2426  0076BA  6E04               	movwf	Lcd_Out2@x,c
  2427  0076BC  0E7F               	movlw	high STR_17
  2428  0076BE  6E06               	movwf	Lcd_Out2@buffer+1,c
  2429  0076C0  0EAA               	movlw	low STR_17
  2430  0076C2  6E05               	movwf	Lcd_Out2@buffer,c
  2431  0076C4  0E02               	movlw	2
  2432  0076C6  EC37  F031         	call	_Lcd_Out2
  2433                           
  2434                           ;Main.c: 258: Lcd_Out2(1,5," 30%");
  2435  0076CA  0E05               	movlw	5
  2436  0076CC  6E04               	movwf	Lcd_Out2@x,c
  2437  0076CE  0E7F               	movlw	high STR_18
  2438  0076D0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2439  0076D2  0EB4               	movlw	low STR_18
  2440  0076D4  6E05               	movwf	Lcd_Out2@buffer,c
  2441  0076D6  0E01               	movlw	1
  2442  0076D8  EC37  F031         	call	_Lcd_Out2
  2443                           
  2444                           ;Main.c: 259: Lcd_Out2(2,5," 40%");
  2445  0076DC  0E05               	movlw	5
  2446  0076DE  6E04               	movwf	Lcd_Out2@x,c
  2447  0076E0  0E7F               	movlw	high STR_19
  2448  0076E2  6E06               	movwf	Lcd_Out2@buffer+1,c
  2449  0076E4  0EBE               	movlw	low STR_19
  2450  0076E6  6E05               	movwf	Lcd_Out2@buffer,c
  2451  0076E8  0E02               	movlw	2
  2452  0076EA  EC37  F031         	call	_Lcd_Out2
  2453                           
  2454                           ;Main.c: 260: Lcd_Out2(1,10," 50%");
  2455  0076EE  0E0A               	movlw	10
  2456  0076F0  6E04               	movwf	Lcd_Out2@x,c
  2457  0076F2  0E7F               	movlw	high STR_20
  2458  0076F4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2459  0076F6  0EC8               	movlw	low STR_20
  2460  0076F8  6E05               	movwf	Lcd_Out2@buffer,c
  2461  0076FA  0E01               	movlw	1
  2462  0076FC  EC37  F031         	call	_Lcd_Out2
  2463                           
  2464                           ;Main.c: 261: Lcd_Out2(2,10,"*60%");
  2465  007700  0E0A               	movlw	10
  2466  007702  6E04               	movwf	Lcd_Out2@x,c
  2467  007704  0E7F               	movlw	high STR_51
  2468  007706  6E06               	movwf	Lcd_Out2@buffer+1,c
  2469  007708  0ED7               	movlw	low STR_51
  2470  00770A  6E05               	movwf	Lcd_Out2@buffer,c
  2471  00770C  0E02               	movlw	2
  2472  00770E  EC37  F031         	call	_Lcd_Out2
  2473                           
  2474                           ;Main.c: 262: _delay((unsigned long)((100)*(4000000/4000.0)));
  2475  007712  0E82               	movlw	130
  2476  007714  6E38               	movwf	??_main& (0+255),c
  2477  007716  0EDE               	movlw	222
  2478  007718                     u3137:
  2479  007718  2EE8               	decfsz	wreg,f,c
  2480  00771A  D7FE               	goto	u3137
  2481  00771C  2E38               	decfsz	??_main& (0+255),f,c
  2482  00771E  D7FC               	goto	u3137
  2483                           
  2484                           ;Main.c: 263: _delay((unsigned long)((100)*(4000000/4000.0)));
  2485  007720  0E82               	movlw	130
  2486  007722  6E38               	movwf	??_main& (0+255),c
  2487  007724  0EDE               	movlw	222
  2488  007726                     u3147:
  2489  007726  2EE8               	decfsz	wreg,f,c
  2490  007728  D7FE               	goto	u3147
  2491  00772A  2E38               	decfsz	??_main& (0+255),f,c
  2492  00772C  D7FC               	goto	u3147
  2493                           
  2494                           ;Main.c: 264: Z=60;
  2495  00772E  0E00               	movlw	0
  2496  007730  0100               	movlb	0	; () banked
  2497  007732  6FF6               	movwf	(main@Z+1)& (0+255),b
  2498  007734  0E3C               	movlw	60
  2499  007736  0100               	movlb	0	; () banked
  2500  007738  6FF5               	movwf	main@Z& (0+255),b
  2501  00773A                     l2877:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;Main.c: 267: }
  2505                           ;Main.c: 268: if(B==7){
  2506  00773A  0100               	movlb	0	; () banked
  2507  00773C  51F8               	movf	_B& (0+255),w,b
  2508  00773E  0A07               	xorlw	7
  2509  007740  11F9               	iorwf	(_B+1)& (0+255),w,b
  2510  007742  A4D8               	btfss	status,2,c
  2511  007744  D040               	goto	l2895
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;Main.c: 271: Lcd_Init();
  2515  007746  EC1B  F034         	call	_Lcd_Init	;wreg free
  2516                           
  2517                           ;Main.c: 272: Lcd_Cmd(1);
  2518  00774A  0E01               	movlw	1
  2519  00774C  EC88  F033         	call	_Lcd_Cmd
  2520                           
  2521                           ;Main.c: 273: Lcd_Cmd(12);
  2522  007750  0E0C               	movlw	12
  2523  007752  EC88  F033         	call	_Lcd_Cmd
  2524                           
  2525                           ;Main.c: 274: Lcd_Out2(1,1," *70%");
  2526  007756  0E01               	movlw	1
  2527  007758  6E04               	movwf	Lcd_Out2@x,c
  2528  00775A  0E7F               	movlw	high STR_52
  2529  00775C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2530  00775E  0E9A               	movlw	low STR_52
  2531  007760  6E05               	movwf	Lcd_Out2@buffer,c
  2532  007762  0E01               	movlw	1
  2533  007764  EC37  F031         	call	_Lcd_Out2
  2534                           
  2535                           ;Main.c: 275: Lcd_Out2(2,1," 80%");
  2536  007768  0E01               	movlw	1
  2537  00776A  6E04               	movwf	Lcd_Out2@x,c
  2538  00776C  0E7F               	movlw	high STR_53
  2539  00776E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2540  007770  0EE1               	movlw	low STR_53
  2541  007772  6E05               	movwf	Lcd_Out2@buffer,c
  2542  007774  0E02               	movlw	2
  2543  007776  EC37  F031         	call	_Lcd_Out2
  2544                           
  2545                           ;Main.c: 276: Lcd_Out2(1,6," 90%");
  2546  00777A  0E06               	movlw	6
  2547  00777C  6E04               	movwf	Lcd_Out2@x,c
  2548  00777E  0E7F               	movlw	high STR_54
  2549  007780  6E06               	movwf	Lcd_Out2@buffer+1,c
  2550  007782  0EEB               	movlw	low STR_54
  2551  007784  6E05               	movwf	Lcd_Out2@buffer,c
  2552  007786  0E01               	movlw	1
  2553  007788  EC37  F031         	call	_Lcd_Out2
  2554                           
  2555                           ;Main.c: 277: Lcd_Out2(2,6," 100%");
  2556  00778C  0E06               	movlw	6
  2557  00778E  6E04               	movwf	Lcd_Out2@x,c
  2558  007790  0E7F               	movlw	high STR_55
  2559  007792  6E06               	movwf	Lcd_Out2@buffer+1,c
  2560  007794  0E8E               	movlw	low STR_55
  2561  007796  6E05               	movwf	Lcd_Out2@buffer,c
  2562  007798  0E02               	movlw	2
  2563  00779A  EC37  F031         	call	_Lcd_Out2
  2564                           
  2565                           ;Main.c: 278: _delay((unsigned long)((100)*(4000000/4000.0)));
  2566  00779E  0E82               	movlw	130
  2567  0077A0  6E38               	movwf	??_main& (0+255),c
  2568  0077A2  0EDE               	movlw	222
  2569  0077A4                     u3157:
  2570  0077A4  2EE8               	decfsz	wreg,f,c
  2571  0077A6  D7FE               	goto	u3157
  2572  0077A8  2E38               	decfsz	??_main& (0+255),f,c
  2573  0077AA  D7FC               	goto	u3157
  2574                           
  2575                           ;Main.c: 279: _delay((unsigned long)((100)*(4000000/4000.0)));
  2576  0077AC  0E82               	movlw	130
  2577  0077AE  6E38               	movwf	??_main& (0+255),c
  2578  0077B0  0EDE               	movlw	222
  2579  0077B2                     u3167:
  2580  0077B2  2EE8               	decfsz	wreg,f,c
  2581  0077B4  D7FE               	goto	u3167
  2582  0077B6  2E38               	decfsz	??_main& (0+255),f,c
  2583  0077B8  D7FC               	goto	u3167
  2584                           
  2585                           ;Main.c: 280: Z=70;
  2586  0077BA  0E00               	movlw	0
  2587  0077BC  0100               	movlb	0	; () banked
  2588  0077BE  6FF6               	movwf	(main@Z+1)& (0+255),b
  2589  0077C0  0E46               	movlw	70
  2590  0077C2  0100               	movlb	0	; () banked
  2591  0077C4  6FF5               	movwf	main@Z& (0+255),b
  2592  0077C6                     l2895:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;Main.c: 282: }
  2596                           ;Main.c: 284: if(B==8){
  2597  0077C6  0100               	movlb	0	; () banked
  2598  0077C8  51F8               	movf	_B& (0+255),w,b
  2599  0077CA  0A08               	xorlw	8
  2600  0077CC  11F9               	iorwf	(_B+1)& (0+255),w,b
  2601  0077CE  A4D8               	btfss	status,2,c
  2602  0077D0  D040               	goto	l2913
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;Main.c: 288: Lcd_Init();
  2606  0077D2  EC1B  F034         	call	_Lcd_Init	;wreg free
  2607                           
  2608                           ;Main.c: 289: Lcd_Cmd(1);
  2609  0077D6  0E01               	movlw	1
  2610  0077D8  EC88  F033         	call	_Lcd_Cmd
  2611                           
  2612                           ;Main.c: 290: Lcd_Cmd(12);
  2613  0077DC  0E0C               	movlw	12
  2614  0077DE  EC88  F033         	call	_Lcd_Cmd
  2615                           
  2616                           ;Main.c: 291: Lcd_Out2(1,1," 70%");
  2617  0077E2  0E01               	movlw	1
  2618  0077E4  6E04               	movwf	Lcd_Out2@x,c
  2619  0077E6  0E7F               	movlw	high STR_56
  2620  0077E8  6E06               	movwf	Lcd_Out2@buffer+1,c
  2621  0077EA  0EDC               	movlw	low STR_56
  2622  0077EC  6E05               	movwf	Lcd_Out2@buffer,c
  2623  0077EE  0E01               	movlw	1
  2624  0077F0  EC37  F031         	call	_Lcd_Out2
  2625                           
  2626                           ;Main.c: 292: Lcd_Out2(2,1,"*80%");
  2627  0077F4  0E01               	movlw	1
  2628  0077F6  6E04               	movwf	Lcd_Out2@x,c
  2629  0077F8  0E7F               	movlw	high STR_57
  2630  0077FA  6E06               	movwf	Lcd_Out2@buffer+1,c
  2631  0077FC  0EE6               	movlw	low STR_57
  2632  0077FE  6E05               	movwf	Lcd_Out2@buffer,c
  2633  007800  0E02               	movlw	2
  2634  007802  EC37  F031         	call	_Lcd_Out2
  2635                           
  2636                           ;Main.c: 293: Lcd_Out2(1,6," 90%");
  2637  007806  0E06               	movlw	6
  2638  007808  6E04               	movwf	Lcd_Out2@x,c
  2639  00780A  0E7F               	movlw	high STR_54
  2640  00780C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2641  00780E  0EEB               	movlw	low STR_54
  2642  007810  6E05               	movwf	Lcd_Out2@buffer,c
  2643  007812  0E01               	movlw	1
  2644  007814  EC37  F031         	call	_Lcd_Out2
  2645                           
  2646                           ;Main.c: 294: Lcd_Out2(2,6," 100%");
  2647  007818  0E06               	movlw	6
  2648  00781A  6E04               	movwf	Lcd_Out2@x,c
  2649  00781C  0E7F               	movlw	high STR_55
  2650  00781E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2651  007820  0E8E               	movlw	low STR_55
  2652  007822  6E05               	movwf	Lcd_Out2@buffer,c
  2653  007824  0E02               	movlw	2
  2654  007826  EC37  F031         	call	_Lcd_Out2
  2655                           
  2656                           ;Main.c: 295: _delay((unsigned long)((100)*(4000000/4000.0)));
  2657  00782A  0E82               	movlw	130
  2658  00782C  6E38               	movwf	??_main& (0+255),c
  2659  00782E  0EDE               	movlw	222
  2660  007830                     u3177:
  2661  007830  2EE8               	decfsz	wreg,f,c
  2662  007832  D7FE               	goto	u3177
  2663  007834  2E38               	decfsz	??_main& (0+255),f,c
  2664  007836  D7FC               	goto	u3177
  2665                           
  2666                           ;Main.c: 296: _delay((unsigned long)((100)*(4000000/4000.0)));
  2667  007838  0E82               	movlw	130
  2668  00783A  6E38               	movwf	??_main& (0+255),c
  2669  00783C  0EDE               	movlw	222
  2670  00783E                     u3187:
  2671  00783E  2EE8               	decfsz	wreg,f,c
  2672  007840  D7FE               	goto	u3187
  2673  007842  2E38               	decfsz	??_main& (0+255),f,c
  2674  007844  D7FC               	goto	u3187
  2675                           
  2676                           ;Main.c: 297: Z=80;
  2677  007846  0E00               	movlw	0
  2678  007848  0100               	movlb	0	; () banked
  2679  00784A  6FF6               	movwf	(main@Z+1)& (0+255),b
  2680  00784C  0E50               	movlw	80
  2681  00784E  0100               	movlb	0	; () banked
  2682  007850  6FF5               	movwf	main@Z& (0+255),b
  2683  007852                     l2913:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;Main.c: 299: }
  2687                           ;Main.c: 300: if(B==9){
  2688  007852  0100               	movlb	0	; () banked
  2689  007854  51F8               	movf	_B& (0+255),w,b
  2690  007856  0A09               	xorlw	9
  2691  007858  11F9               	iorwf	(_B+1)& (0+255),w,b
  2692  00785A  A4D8               	btfss	status,2,c
  2693  00785C  D040               	goto	l2931
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;Main.c: 303: Lcd_Init();
  2697  00785E  EC1B  F034         	call	_Lcd_Init	;wreg free
  2698                           
  2699                           ;Main.c: 304: Lcd_Cmd(1);
  2700  007862  0E01               	movlw	1
  2701  007864  EC88  F033         	call	_Lcd_Cmd
  2702                           
  2703                           ;Main.c: 305: Lcd_Cmd(12);
  2704  007868  0E0C               	movlw	12
  2705  00786A  EC88  F033         	call	_Lcd_Cmd
  2706                           
  2707                           ;Main.c: 306: Lcd_Out2(1,1," 70%");
  2708  00786E  0E01               	movlw	1
  2709  007870  6E04               	movwf	Lcd_Out2@x,c
  2710  007872  0E7F               	movlw	high STR_56
  2711  007874  6E06               	movwf	Lcd_Out2@buffer+1,c
  2712  007876  0EDC               	movlw	low STR_56
  2713  007878  6E05               	movwf	Lcd_Out2@buffer,c
  2714  00787A  0E01               	movlw	1
  2715  00787C  EC37  F031         	call	_Lcd_Out2
  2716                           
  2717                           ;Main.c: 307: Lcd_Out2(2,1," 80%");
  2718  007880  0E01               	movlw	1
  2719  007882  6E04               	movwf	Lcd_Out2@x,c
  2720  007884  0E7F               	movlw	high STR_53
  2721  007886  6E06               	movwf	Lcd_Out2@buffer+1,c
  2722  007888  0EE1               	movlw	low STR_53
  2723  00788A  6E05               	movwf	Lcd_Out2@buffer,c
  2724  00788C  0E02               	movlw	2
  2725  00788E  EC37  F031         	call	_Lcd_Out2
  2726                           
  2727                           ;Main.c: 308: Lcd_Out2(1,6,"*90%");
  2728  007892  0E06               	movlw	6
  2729  007894  6E04               	movwf	Lcd_Out2@x,c
  2730  007896  0E7F               	movlw	high STR_62
  2731  007898  6E06               	movwf	Lcd_Out2@buffer+1,c
  2732  00789A  0EF0               	movlw	low STR_62
  2733  00789C  6E05               	movwf	Lcd_Out2@buffer,c
  2734  00789E  0E01               	movlw	1
  2735  0078A0  EC37  F031         	call	_Lcd_Out2
  2736                           
  2737                           ;Main.c: 309: Lcd_Out2(2,6," 100%");
  2738  0078A4  0E06               	movlw	6
  2739  0078A6  6E04               	movwf	Lcd_Out2@x,c
  2740  0078A8  0E7F               	movlw	high STR_55
  2741  0078AA  6E06               	movwf	Lcd_Out2@buffer+1,c
  2742  0078AC  0E8E               	movlw	low STR_55
  2743  0078AE  6E05               	movwf	Lcd_Out2@buffer,c
  2744  0078B0  0E02               	movlw	2
  2745  0078B2  EC37  F031         	call	_Lcd_Out2
  2746                           
  2747                           ;Main.c: 310: _delay((unsigned long)((100)*(4000000/4000.0)));
  2748  0078B6  0E82               	movlw	130
  2749  0078B8  6E38               	movwf	??_main& (0+255),c
  2750  0078BA  0EDE               	movlw	222
  2751  0078BC                     u3197:
  2752  0078BC  2EE8               	decfsz	wreg,f,c
  2753  0078BE  D7FE               	goto	u3197
  2754  0078C0  2E38               	decfsz	??_main& (0+255),f,c
  2755  0078C2  D7FC               	goto	u3197
  2756                           
  2757                           ;Main.c: 311: _delay((unsigned long)((100)*(4000000/4000.0)));
  2758  0078C4  0E82               	movlw	130
  2759  0078C6  6E38               	movwf	??_main& (0+255),c
  2760  0078C8  0EDE               	movlw	222
  2761  0078CA                     u3207:
  2762  0078CA  2EE8               	decfsz	wreg,f,c
  2763  0078CC  D7FE               	goto	u3207
  2764  0078CE  2E38               	decfsz	??_main& (0+255),f,c
  2765  0078D0  D7FC               	goto	u3207
  2766                           
  2767                           ;Main.c: 312: Z=90;
  2768  0078D2  0E00               	movlw	0
  2769  0078D4  0100               	movlb	0	; () banked
  2770  0078D6  6FF6               	movwf	(main@Z+1)& (0+255),b
  2771  0078D8  0E5A               	movlw	90
  2772  0078DA  0100               	movlb	0	; () banked
  2773  0078DC  6FF5               	movwf	main@Z& (0+255),b
  2774  0078DE                     l2931:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;Main.c: 314: }
  2778                           ;Main.c: 316: if(B==10){
  2779  0078DE  0100               	movlb	0	; () banked
  2780  0078E0  51F8               	movf	_B& (0+255),w,b
  2781  0078E2  0A0A               	xorlw	10
  2782  0078E4  11F9               	iorwf	(_B+1)& (0+255),w,b
  2783  0078E6  A4D8               	btfss	status,2,c
  2784  0078E8  D040               	goto	l2949
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;Main.c: 320: Lcd_Init();
  2788  0078EA  EC1B  F034         	call	_Lcd_Init	;wreg free
  2789                           
  2790                           ;Main.c: 321: Lcd_Cmd(1);
  2791  0078EE  0E01               	movlw	1
  2792  0078F0  EC88  F033         	call	_Lcd_Cmd
  2793                           
  2794                           ;Main.c: 322: Lcd_Cmd(12);
  2795  0078F4  0E0C               	movlw	12
  2796  0078F6  EC88  F033         	call	_Lcd_Cmd
  2797                           
  2798                           ;Main.c: 323: Lcd_Out2(1,1," 70%");
  2799  0078FA  0E01               	movlw	1
  2800  0078FC  6E04               	movwf	Lcd_Out2@x,c
  2801  0078FE  0E7F               	movlw	high STR_56
  2802  007900  6E06               	movwf	Lcd_Out2@buffer+1,c
  2803  007902  0EDC               	movlw	low STR_56
  2804  007904  6E05               	movwf	Lcd_Out2@buffer,c
  2805  007906  0E01               	movlw	1
  2806  007908  EC37  F031         	call	_Lcd_Out2
  2807                           
  2808                           ;Main.c: 324: Lcd_Out2(2,1," 80%");
  2809  00790C  0E01               	movlw	1
  2810  00790E  6E04               	movwf	Lcd_Out2@x,c
  2811  007910  0E7F               	movlw	high STR_53
  2812  007912  6E06               	movwf	Lcd_Out2@buffer+1,c
  2813  007914  0EE1               	movlw	low STR_53
  2814  007916  6E05               	movwf	Lcd_Out2@buffer,c
  2815  007918  0E02               	movlw	2
  2816  00791A  EC37  F031         	call	_Lcd_Out2
  2817                           
  2818                           ;Main.c: 325: Lcd_Out2(1,6," 90%");
  2819  00791E  0E06               	movlw	6
  2820  007920  6E04               	movwf	Lcd_Out2@x,c
  2821  007922  0E7F               	movlw	high STR_54
  2822  007924  6E06               	movwf	Lcd_Out2@buffer+1,c
  2823  007926  0EEB               	movlw	low STR_54
  2824  007928  6E05               	movwf	Lcd_Out2@buffer,c
  2825  00792A  0E01               	movlw	1
  2826  00792C  EC37  F031         	call	_Lcd_Out2
  2827                           
  2828                           ;Main.c: 326: Lcd_Out2(2,6,"*100%");
  2829  007930  0E06               	movlw	6
  2830  007932  6E04               	movwf	Lcd_Out2@x,c
  2831  007934  0E7F               	movlw	high STR_67
  2832  007936  6E06               	movwf	Lcd_Out2@buffer+1,c
  2833  007938  0E94               	movlw	low STR_67
  2834  00793A  6E05               	movwf	Lcd_Out2@buffer,c
  2835  00793C  0E02               	movlw	2
  2836  00793E  EC37  F031         	call	_Lcd_Out2
  2837                           
  2838                           ;Main.c: 327: _delay((unsigned long)((100)*(4000000/4000.0)));
  2839  007942  0E82               	movlw	130
  2840  007944  6E38               	movwf	??_main& (0+255),c
  2841  007946  0EDE               	movlw	222
  2842  007948                     u3217:
  2843  007948  2EE8               	decfsz	wreg,f,c
  2844  00794A  D7FE               	goto	u3217
  2845  00794C  2E38               	decfsz	??_main& (0+255),f,c
  2846  00794E  D7FC               	goto	u3217
  2847                           
  2848                           ;Main.c: 328: _delay((unsigned long)((100)*(4000000/4000.0)));
  2849  007950  0E82               	movlw	130
  2850  007952  6E38               	movwf	??_main& (0+255),c
  2851  007954  0EDE               	movlw	222
  2852  007956                     u3227:
  2853  007956  2EE8               	decfsz	wreg,f,c
  2854  007958  D7FE               	goto	u3227
  2855  00795A  2E38               	decfsz	??_main& (0+255),f,c
  2856  00795C  D7FC               	goto	u3227
  2857                           
  2858                           ;Main.c: 329: Z=100;
  2859  00795E  0E00               	movlw	0
  2860  007960  0100               	movlb	0	; () banked
  2861  007962  6FF6               	movwf	(main@Z+1)& (0+255),b
  2862  007964  0E64               	movlw	100
  2863  007966  0100               	movlb	0	; () banked
  2864  007968  6FF5               	movwf	main@Z& (0+255),b
  2865  00796A                     l2949:
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;Main.c: 331: }
  2869                           ;Main.c: 332: if(PORTAbits.RA0==1)
  2870  00796A  A080               	btfss	3968,0,c	;volatile
  2871  00796C  D00A               	goto	l2955
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;Main.c: 333: {
  2875                           ;Main.c: 334: B++;
  2876  00796E  0100               	movlb	0	; () banked
  2877  007970  4BF8               	infsnz	_B& (0+255),f,b
  2878  007972  2BF9               	incf	(_B+1)& (0+255),f,b
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;Main.c: 335: _delay((unsigned long)((10)*(4000000/4000.0)));
  2882  007974  0E0D               	movlw	13
  2883  007976  6E38               	movwf	??_main& (0+255),c
  2884  007978  0EFC               	movlw	252
  2885  00797A                     u3237:
  2886  00797A  2EE8               	decfsz	wreg,f,c
  2887  00797C  D7FE               	goto	u3237
  2888  00797E  2E38               	decfsz	??_main& (0+255),f,c
  2889  007980  D7FC               	goto	u3237
  2890  007982                     l2955:
  2891                           
  2892                           ;Main.c: 336: }
  2893                           ;Main.c: 338: if(PORTAbits.RA1==1)
  2894  007982  A280               	btfss	3968,1,c	;volatile
  2895  007984  D00B               	goto	l149
  2896                           
  2897                           ;Main.c: 339: {
  2898                           ;Main.c: 340: B--;
  2899  007986  0100               	movlb	0	; () banked
  2900  007988  07F8               	decf	_B& (0+255),f,b
  2901  00798A  A0D8               	btfss	status,0,c
  2902  00798C  07F9               	decf	(_B+1)& (0+255),f,b
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;Main.c: 341: _delay((unsigned long)((10)*(4000000/4000.0)));
  2906  00798E  0E0D               	movlw	13
  2907  007990  6E38               	movwf	??_main& (0+255),c
  2908  007992  0EFC               	movlw	252
  2909  007994                     u3247:
  2910  007994  2EE8               	decfsz	wreg,f,c
  2911  007996  D7FE               	goto	u3247
  2912  007998  2E38               	decfsz	??_main& (0+255),f,c
  2913  00799A  D7FC               	goto	u3247
  2914  00799C                     l149:
  2915                           
  2916                           ;Main.c: 342: }
  2917                           ;Main.c: 344: if(B>10){
  2918  00799C  0E0B               	movlw	11
  2919  00799E  0100               	movlb	0	; () banked
  2920  0079A0  5DF8               	subwf	_B& (0+255),w,b
  2921  0079A2  0E00               	movlw	0
  2922  0079A4  0100               	movlb	0	; () banked
  2923  0079A6  59F9               	subwfb	(_B+1)& (0+255),w,b
  2924  0079A8  A0D8               	btfss	status,0,c
  2925  0079AA  D006               	goto	l2965
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;Main.c: 345: B=1;
  2929  0079AC  0E00               	movlw	0
  2930  0079AE  0100               	movlb	0	; () banked
  2931  0079B0  6FF9               	movwf	(_B+1)& (0+255),b
  2932  0079B2  0E01               	movlw	1
  2933  0079B4  0100               	movlb	0	; () banked
  2934  0079B6  6FF8               	movwf	_B& (0+255),b
  2935  0079B8                     l2965:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;Main.c: 350: }
  2939                           ;Main.c: 352: if(PORTAbits.RA1==1 && PORTAbits.RA2==1){
  2940  0079B8  B280               	btfsc	3968,1,c	;volatile
  2941                           
  2942                           ; BSR set to: 0
  2943  0079BA  A480               	btfss	3968,2,c	;volatile
  2944  0079BC  D004               	goto	l2971
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;Main.c: 353: t=1;
  2948  0079BE  0E00               	movlw	0
  2949  0079C0  6E46               	movwf	_t+1,c
  2950  0079C2  0E01               	movlw	1
  2951  0079C4  6E45               	movwf	_t,c
  2952  0079C6                     l2971:
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;Main.c: 354: }
  2956                           ;Main.c: 356: }while(t==0);
  2957  0079C6  5046               	movf	_t+1,w,c
  2958  0079C8  1045               	iorwf	_t,w,c
  2959  0079CA  B4D8               	btfsc	status,2,c
  2960  0079CC  D4A3               	goto	l2743
  2961  0079CE                     l135:
  2962                           
  2963                           ;Main.c: 358: }
  2964                           ;Main.c: 360: }
  2965                           ;Main.c: 361: if(PORTAbits.RA0==1)
  2966  0079CE  A080               	btfss	3968,0,c	;volatile
  2967  0079D0  D00A               	goto	l2977
  2968                           
  2969                           ;Main.c: 362: {
  2970                           ;Main.c: 363: B++;
  2971  0079D2  0100               	movlb	0	; () banked
  2972  0079D4  4BF8               	infsnz	_B& (0+255),f,b
  2973  0079D6  2BF9               	incf	(_B+1)& (0+255),f,b
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;Main.c: 364: _delay((unsigned long)((10)*(4000000/4000.0)));
  2977  0079D8  0E0D               	movlw	13
  2978  0079DA  6E38               	movwf	??_main& (0+255),c
  2979  0079DC  0EFC               	movlw	252
  2980  0079DE                     u3257:
  2981  0079DE  2EE8               	decfsz	wreg,f,c
  2982  0079E0  D7FE               	goto	u3257
  2983  0079E2  2E38               	decfsz	??_main& (0+255),f,c
  2984  0079E4  D7FC               	goto	u3257
  2985  0079E6                     l2977:
  2986                           
  2987                           ;Main.c: 365: }
  2988                           ;Main.c: 367: if(PORTAbits.RA1==1)
  2989  0079E6  A280               	btfss	3968,1,c	;volatile
  2990  0079E8  D00B               	goto	l155
  2991                           
  2992                           ;Main.c: 368: {
  2993                           ;Main.c: 369: B--;
  2994  0079EA  0100               	movlb	0	; () banked
  2995  0079EC  07F8               	decf	_B& (0+255),f,b
  2996  0079EE  A0D8               	btfss	status,0,c
  2997  0079F0  07F9               	decf	(_B+1)& (0+255),f,b
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;Main.c: 370: _delay((unsigned long)((10)*(4000000/4000.0)));
  3001  0079F2  0E0D               	movlw	13
  3002  0079F4  6E38               	movwf	??_main& (0+255),c
  3003  0079F6  0EFC               	movlw	252
  3004  0079F8                     u3267:
  3005  0079F8  2EE8               	decfsz	wreg,f,c
  3006  0079FA  D7FE               	goto	u3267
  3007  0079FC  2E38               	decfsz	??_main& (0+255),f,c
  3008  0079FE  D7FC               	goto	u3267
  3009  007A00                     l155:
  3010                           
  3011                           ;Main.c: 371: }
  3012                           ;Main.c: 373: if(B>2){
  3013  007A00  0E03               	movlw	3
  3014  007A02  0100               	movlb	0	; () banked
  3015  007A04  5DF8               	subwf	_B& (0+255),w,b
  3016  007A06  0E00               	movlw	0
  3017  007A08  0100               	movlb	0	; () banked
  3018  007A0A  59F9               	subwfb	(_B+1)& (0+255),w,b
  3019  007A0C  A0D8               	btfss	status,0,c
  3020  007A0E  D006               	goto	l2987
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;Main.c: 374: B=1;
  3024  007A10  0E00               	movlw	0
  3025  007A12  0100               	movlb	0	; () banked
  3026  007A14  6FF9               	movwf	(_B+1)& (0+255),b
  3027  007A16  0E01               	movlw	1
  3028  007A18  0100               	movlb	0	; () banked
  3029  007A1A  6FF8               	movwf	_B& (0+255),b
  3030  007A1C                     l2987:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;Main.c: 379: }
  3034                           ;Main.c: 381: if(PORTAbits.RA0==1 && PORTAbits.RA3==1){
  3035  007A1C  B080               	btfsc	3968,0,c	;volatile
  3036                           
  3037                           ; BSR set to: 0
  3038  007A1E  A680               	btfss	3968,3,c	;volatile
  3039  007A20  D006               	goto	l2993
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;Main.c: 382: e=1;
  3043  007A22  0E00               	movlw	0
  3044  007A24  0100               	movlb	0	; () banked
  3045  007A26  6FFB               	movwf	(_e+1)& (0+255),b
  3046  007A28  0E01               	movlw	1
  3047  007A2A  0100               	movlb	0	; () banked
  3048  007A2C  6FFA               	movwf	_e& (0+255),b
  3049  007A2E                     l2993:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;Main.c: 383: }
  3053                           ;Main.c: 384: }
  3054                           ;Main.c: 385: while(e==0);
  3055  007A2E  0100               	movlb	0	; () banked
  3056  007A30  51FB               	movf	(_e+1)& (0+255),w,b
  3057  007A32  11FA               	iorwf	_e& (0+255),w,b
  3058  007A34  B4D8               	btfsc	status,2,c
  3059  007A36  EF7B  F038         	goto	l2653
  3060  007A3A                     l2995:
  3061                           
  3062                           ;Main.c: 386: }
  3063                           ;Main.c: 387: }
  3064                           ;Main.c: 388: if(B==2){
  3065  007A3A  0100               	movlb	0	; () banked
  3066  007A3C  51F8               	movf	_B& (0+255),w,b
  3067  007A3E  0A02               	xorlw	2
  3068  007A40  11F9               	iorwf	(_B+1)& (0+255),w,b
  3069  007A42  A4D8               	btfss	status,2,c
  3070  007A44  D036               	goto	l3011
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;Main.c: 389: Lcd_Init();
  3074  007A46  EC1B  F034         	call	_Lcd_Init	;wreg free
  3075                           
  3076                           ;Main.c: 390: Lcd_Cmd(1);
  3077  007A4A  0E01               	movlw	1
  3078  007A4C  EC88  F033         	call	_Lcd_Cmd
  3079                           
  3080                           ;Main.c: 391: Lcd_Cmd(12);
  3081  007A50  0E0C               	movlw	12
  3082  007A52  EC88  F033         	call	_Lcd_Cmd
  3083                           
  3084                           ;Main.c: 392: Lcd_Out2(1,1,"   Ingresar");
  3085  007A56  0E01               	movlw	1
  3086  007A58  6E04               	movwf	Lcd_Out2@x,c
  3087  007A5A  0E7F               	movlw	high STR_5
  3088  007A5C  6E06               	movwf	Lcd_Out2@buffer+1,c
  3089  007A5E  0E2B               	movlw	low STR_5
  3090  007A60  6E05               	movwf	Lcd_Out2@buffer,c
  3091  007A62  0E01               	movlw	1
  3092  007A64  EC37  F031         	call	_Lcd_Out2
  3093                           
  3094                           ;Main.c: 393: Lcd_Out2(2,1,"=> Comenzar");
  3095  007A68  0E01               	movlw	1
  3096  007A6A  6E04               	movwf	Lcd_Out2@x,c
  3097  007A6C  0E7F               	movlw	high STR_69
  3098  007A6E  6E06               	movwf	Lcd_Out2@buffer+1,c
  3099  007A70  0E4F               	movlw	low STR_69
  3100  007A72  6E05               	movwf	Lcd_Out2@buffer,c
  3101  007A74  0E02               	movlw	2
  3102  007A76  EC37  F031         	call	_Lcd_Out2
  3103                           
  3104                           ;Main.c: 394: _delay((unsigned long)((100)*(4000000/4000.0)));
  3105  007A7A  0E82               	movlw	130
  3106  007A7C  6E38               	movwf	??_main& (0+255),c
  3107  007A7E  0EDE               	movlw	222
  3108  007A80                     u3277:
  3109  007A80  2EE8               	decfsz	wreg,f,c
  3110  007A82  D7FE               	goto	u3277
  3111  007A84  2E38               	decfsz	??_main& (0+255),f,c
  3112  007A86  D7FC               	goto	u3277
  3113                           
  3114                           ;Main.c: 395: _delay((unsigned long)((100)*(4000000/4000.0)));
  3115  007A88  0E82               	movlw	130
  3116  007A8A  6E38               	movwf	??_main& (0+255),c
  3117  007A8C  0EDE               	movlw	222
  3118  007A8E                     u3287:
  3119  007A8E  2EE8               	decfsz	wreg,f,c
  3120  007A90  D7FE               	goto	u3287
  3121  007A92  2E38               	decfsz	??_main& (0+255),f,c
  3122  007A94  D7FC               	goto	u3287
  3123                           
  3124                           ;Main.c: 396: _delay((unsigned long)((100)*(4000000/4000.0)));
  3125  007A96  0E82               	movlw	130
  3126  007A98  6E38               	movwf	??_main& (0+255),c
  3127  007A9A  0EDE               	movlw	222
  3128  007A9C                     u3297:
  3129  007A9C  2EE8               	decfsz	wreg,f,c
  3130  007A9E  D7FE               	goto	u3297
  3131  007AA0  2E38               	decfsz	??_main& (0+255),f,c
  3132  007AA2  D7FC               	goto	u3297
  3133                           
  3134                           ;Main.c: 397: _delay((unsigned long)((100)*(4000000/4000.0)));
  3135  007AA4  0E82               	movlw	130
  3136  007AA6  6E38               	movwf	??_main& (0+255),c
  3137  007AA8  0EDE               	movlw	222
  3138  007AAA                     u3307:
  3139  007AAA  2EE8               	decfsz	wreg,f,c
  3140  007AAC  D7FE               	goto	u3307
  3141  007AAE  2E38               	decfsz	??_main& (0+255),f,c
  3142  007AB0  D7FC               	goto	u3307
  3143  007AB2                     l3011:
  3144                           
  3145                           ;Main.c: 399: }
  3146                           ;Main.c: 400: if(PORTAbits.RA2==1){
  3147  007AB2  A480               	btfss	3968,2,c	;volatile
  3148  007AB4  D122               	goto	l161
  3149  007AB6                     l3013:
  3150                           
  3151                           ;Main.c: 402: p=0;
  3152  007AB6  0E00               	movlw	0
  3153  007AB8  6E42               	movwf	_p+1,c
  3154  007ABA  0E00               	movlw	0
  3155  007ABC  6E41               	movwf	_p,c
  3156                           
  3157                           ;Main.c: 403: Lcd_Init();
  3158  007ABE  EC1B  F034         	call	_Lcd_Init	;wreg free
  3159                           
  3160                           ;Main.c: 404: Lcd_Cmd(1);
  3161  007AC2  0E01               	movlw	1
  3162  007AC4  EC88  F033         	call	_Lcd_Cmd
  3163                           
  3164                           ;Main.c: 405: Lcd_Cmd(12);
  3165  007AC8  0E0C               	movlw	12
  3166  007ACA  EC88  F033         	call	_Lcd_Cmd
  3167                           
  3168                           ;Main.c: 406: X = atoi(A);
  3169  007ACE  0100               	movlb	0	; () banked
  3170  007AD0  51F7               	movf	main@A& (0+255),w,b
  3171  007AD2  6E38               	movwf	??_main& (0+255),c
  3172  007AD4  6A39               	clrf	(??_main+1)& (0+255),c
  3173  007AD6  6A3A               	clrf	(??_main+2)& (0+255),c
  3174  007AD8  C038  F007         	movff	??_main,atoi@s
  3175  007ADC  C039  F008         	movff	??_main+1,atoi@s+1
  3176  007AE0  C03A  F009         	movff	??_main+2,atoi@s+2
  3177  007AE4  EC07  F033         	call	_atoi	;wreg free
  3178  007AE8  C007  F0F1         	movff	?_atoi,main@X
  3179  007AEC  C008  F0F2         	movff	?_atoi+1,main@X+1
  3180                           
  3181                           ;Main.c: 407: V=A*100;
  3182  007AF0  0100               	movlb	0	; () banked
  3183  007AF2  51F7               	movf	main@A& (0+255),w,b
  3184  007AF4  0D64               	mullw	100
  3185  007AF6  CFF3 F0F3          	movff	prodl,main@V
  3186  007AFA  CFF4 F0F4          	movff	prodh,main@V+1
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;Main.c: 409: cant = Conv_Entero(X,cad);
  3190  007AFE  0100               	movlb	0	; () banked
  3191  007B00  C0F1  F00F         	movff	main@X,Conv_Entero@numero
  3192  007B04  0100               	movlb	0	; () banked
  3193  007B06  C0F2  F010         	movff	main@X+1,Conv_Entero@numero+1
  3194  007B0A  6A11               	clrf	Conv_Entero@numero+2,c
  3195  007B0C  6A12               	clrf	Conv_Entero@numero+3,c
  3196  007B0E  0100               	movlb	0	; () banked
  3197  007B10  0E00               	movlw	high main@cad
  3198  007B12  6E14               	movwf	Conv_Entero@conv+1,c
  3199  007B14  0100               	movlb	0	; () banked
  3200  007B16  0EC6               	movlw	low main@cad
  3201  007B18  6E13               	movwf	Conv_Entero@conv,c
  3202  007B1A  EC45  F035         	call	_Conv_Entero	;wreg free
  3203  007B1E  500F               	movf	?_Conv_Entero,w,c
  3204  007B20  0100               	movlb	0	; () banked
  3205  007B22  6FF0               	movwf	main@cant& (0+255),b
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;Main.c: 410: unsigned char fre=0;
  3209  007B24  0E00               	movlw	0
  3210  007B26  0100               	movlb	0	; () banked
  3211  007B28  6FEE               	movwf	main@fre& (0+255),b
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;Main.c: 412: PWM_generar(Z,V);
  3215  007B2A  C0F5  F00E         	movff	main@Z,PWM_generar@ciclo
  3216  007B2E  C0F6  F00F         	movff	main@Z+1,PWM_generar@ciclo+1
  3217  007B32  C0F3  F010         	movff	main@V,PWM_generar@frecuencia
  3218  007B36  C0F4  F011         	movff	main@V+1,PWM_generar@frecuencia+1
  3219  007B3A  EC31  F036         	call	_PWM_generar	;wreg free
  3220                           
  3221                           ;Main.c: 414: Lcd_Out2(1,1,"F:  000hz");
  3222  007B3E  0E01               	movlw	1
  3223  007B40  6E04               	movwf	Lcd_Out2@x,c
  3224  007B42  0E7F               	movlw	high STR_70
  3225  007B44  6E06               	movwf	Lcd_Out2@buffer+1,c
  3226  007B46  0E5B               	movlw	low STR_70
  3227  007B48  6E05               	movwf	Lcd_Out2@buffer,c
  3228  007B4A  0E01               	movlw	1
  3229  007B4C  EC37  F031         	call	_Lcd_Out2
  3230                           
  3231                           ;Main.c: 415: lcd_goto(4,1);
  3232  007B50  0E00               	movlw	0
  3233  007B52  6E05               	movwf	lcd_goto@x+1,c
  3234  007B54  0E04               	movlw	4
  3235  007B56  6E04               	movwf	lcd_goto@x,c
  3236  007B58  0E00               	movlw	0
  3237  007B5A  6E07               	movwf	lcd_goto@y+1,c
  3238  007B5C  0E01               	movlw	1
  3239  007B5E  6E06               	movwf	lcd_goto@y,c
  3240  007B60  ECB4  F030         	call	_lcd_goto	;wreg free
  3241                           
  3242                           ;Main.c: 416: Lcd_Chr_CP(A);
  3243  007B64  0100               	movlb	0	; () banked
  3244  007B66  51F7               	movf	main@A& (0+255),w,b
  3245  007B68  ECAF  F034         	call	_Lcd_Chr_CP
  3246                           
  3247                           ;Main.c: 417: Lcd_Out2(2,1,"C: ");
  3248  007B6C  0E01               	movlw	1
  3249  007B6E  6E04               	movwf	Lcd_Out2@x,c
  3250  007B70  0E7F               	movlw	high STR_71
  3251  007B72  6E06               	movwf	Lcd_Out2@buffer+1,c
  3252  007B74  0EFA               	movlw	low STR_71
  3253  007B76  6E05               	movwf	Lcd_Out2@buffer,c
  3254  007B78  0E02               	movlw	2
  3255  007B7A  EC37  F031         	call	_Lcd_Out2
  3256                           
  3257                           ;Main.c: 418: Lcd_Out2(2,7,"%");
  3258  007B7E  0E07               	movlw	7
  3259  007B80  6E04               	movwf	Lcd_Out2@x,c
  3260  007B82  0E7F               	movlw	high (STR_55+4)
  3261  007B84  6E06               	movwf	Lcd_Out2@buffer+1,c
  3262  007B86  0E92               	movlw	low (STR_55+4)
  3263  007B88  6E05               	movwf	Lcd_Out2@buffer,c
  3264  007B8A  0E02               	movlw	2
  3265  007B8C  EC37  F031         	call	_Lcd_Out2
  3266                           
  3267                           ;Main.c: 419: cantidad = Conv_Entero(Z,cadena);
  3268  007B90  0100               	movlb	0	; () banked
  3269  007B92  C0F5  F00F         	movff	main@Z,Conv_Entero@numero
  3270  007B96  0100               	movlb	0	; () banked
  3271  007B98  C0F6  F010         	movff	main@Z+1,Conv_Entero@numero+1
  3272  007B9C  6A11               	clrf	Conv_Entero@numero+2,c
  3273  007B9E  6A12               	clrf	Conv_Entero@numero+3,c
  3274  007BA0  0100               	movlb	0	; () banked
  3275  007BA2  0E00               	movlw	high main@cadena
  3276  007BA4  6E14               	movwf	Conv_Entero@conv+1,c
  3277  007BA6  0100               	movlb	0	; () banked
  3278  007BA8  0EDA               	movlw	low main@cadena
  3279  007BAA  6E13               	movwf	Conv_Entero@conv,c
  3280  007BAC  EC45  F035         	call	_Conv_Entero	;wreg free
  3281  007BB0  500F               	movf	?_Conv_Entero,w,c
  3282  007BB2  0100               	movlb	0	; () banked
  3283  007BB4  6FEF               	movwf	main@cantidad& (0+255),b
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;Main.c: 420: Lcd_Out(2,4,cadena);
  3287  007BB6  0E04               	movlw	4
  3288  007BB8  6E04               	movwf	Lcd_Out@x,c
  3289  007BBA  0100               	movlb	0	; () banked
  3290  007BBC  0E00               	movlw	high main@cadena
  3291  007BBE  6E06               	movwf	Lcd_Out@buffer+1,c
  3292  007BC0  0100               	movlb	0	; () banked
  3293  007BC2  0EDA               	movlw	low main@cadena
  3294  007BC4  6E05               	movwf	Lcd_Out@buffer,c
  3295  007BC6  0E02               	movlw	2
  3296  007BC8  EC06  F031         	call	_Lcd_Out
  3297                           
  3298                           ;Main.c: 421: _delay((unsigned long)((100)*(4000000/4000.0)));
  3299  007BCC  0E82               	movlw	130
  3300  007BCE  6E38               	movwf	??_main& (0+255),c
  3301  007BD0  0EDE               	movlw	222
  3302  007BD2                     u3317:
  3303  007BD2  2EE8               	decfsz	wreg,f,c
  3304  007BD4  D7FE               	goto	u3317
  3305  007BD6  2E38               	decfsz	??_main& (0+255),f,c
  3306  007BD8  D7FC               	goto	u3317
  3307                           
  3308                           ;Main.c: 422: _delay((unsigned long)((100)*(4000000/4000.0)));
  3309  007BDA  0E82               	movlw	130
  3310  007BDC  6E38               	movwf	??_main& (0+255),c
  3311  007BDE  0EDE               	movlw	222
  3312  007BE0                     u3327:
  3313  007BE0  2EE8               	decfsz	wreg,f,c
  3314  007BE2  D7FE               	goto	u3327
  3315  007BE4  2E38               	decfsz	??_main& (0+255),f,c
  3316  007BE6  D7FC               	goto	u3327
  3317                           
  3318                           ;Main.c: 423: _delay((unsigned long)((100)*(4000000/4000.0)));
  3319  007BE8  0E82               	movlw	130
  3320  007BEA  6E38               	movwf	??_main& (0+255),c
  3321  007BEC  0EDE               	movlw	222
  3322  007BEE                     u3337:
  3323  007BEE  2EE8               	decfsz	wreg,f,c
  3324  007BF0  D7FE               	goto	u3337
  3325  007BF2  2E38               	decfsz	??_main& (0+255),f,c
  3326  007BF4  D7FC               	goto	u3337
  3327                           
  3328                           ;Main.c: 424: _delay((unsigned long)((100)*(4000000/4000.0)));
  3329  007BF6  0E82               	movlw	130
  3330  007BF8  6E38               	movwf	??_main& (0+255),c
  3331  007BFA  0EDE               	movlw	222
  3332  007BFC                     u3347:
  3333  007BFC  2EE8               	decfsz	wreg,f,c
  3334  007BFE  D7FE               	goto	u3347
  3335  007C00  2E38               	decfsz	??_main& (0+255),f,c
  3336  007C02  D7FC               	goto	u3347
  3337                           
  3338                           ;Main.c: 425: _delay((unsigned long)((100)*(4000000/4000.0)));
  3339  007C04  0E82               	movlw	130
  3340  007C06  6E38               	movwf	??_main& (0+255),c
  3341  007C08  0EDE               	movlw	222
  3342  007C0A                     u3357:
  3343  007C0A  2EE8               	decfsz	wreg,f,c
  3344  007C0C  D7FE               	goto	u3357
  3345  007C0E  2E38               	decfsz	??_main& (0+255),f,c
  3346  007C10  D7FC               	goto	u3357
  3347                           
  3348                           ;Main.c: 426: _delay((unsigned long)((100)*(4000000/4000.0)));
  3349  007C12  0E82               	movlw	130
  3350  007C14  6E38               	movwf	??_main& (0+255),c
  3351  007C16  0EDE               	movlw	222
  3352  007C18                     u3367:
  3353  007C18  2EE8               	decfsz	wreg,f,c
  3354  007C1A  D7FE               	goto	u3367
  3355  007C1C  2E38               	decfsz	??_main& (0+255),f,c
  3356  007C1E  D7FC               	goto	u3367
  3357                           
  3358                           ;Main.c: 427: _delay((unsigned long)((100)*(4000000/4000.0)));
  3359  007C20  0E82               	movlw	130
  3360  007C22  6E38               	movwf	??_main& (0+255),c
  3361  007C24  0EDE               	movlw	222
  3362  007C26                     u3377:
  3363  007C26  2EE8               	decfsz	wreg,f,c
  3364  007C28  D7FE               	goto	u3377
  3365  007C2A  2E38               	decfsz	??_main& (0+255),f,c
  3366  007C2C  D7FC               	goto	u3377
  3367                           
  3368                           ;Main.c: 428: _delay((unsigned long)((100)*(4000000/4000.0)));
  3369  007C2E  0E82               	movlw	130
  3370  007C30  6E38               	movwf	??_main& (0+255),c
  3371  007C32  0EDE               	movlw	222
  3372  007C34                     u3387:
  3373  007C34  2EE8               	decfsz	wreg,f,c
  3374  007C36  D7FE               	goto	u3387
  3375  007C38  2E38               	decfsz	??_main& (0+255),f,c
  3376  007C3A  D7FC               	goto	u3387
  3377                           
  3378                           ;Main.c: 429: _delay((unsigned long)((100)*(4000000/4000.0)));
  3379  007C3C  0E82               	movlw	130
  3380  007C3E  6E38               	movwf	??_main& (0+255),c
  3381  007C40  0EDE               	movlw	222
  3382  007C42                     u3397:
  3383  007C42  2EE8               	decfsz	wreg,f,c
  3384  007C44  D7FE               	goto	u3397
  3385  007C46  2E38               	decfsz	??_main& (0+255),f,c
  3386  007C48  D7FC               	goto	u3397
  3387                           
  3388                           ;Main.c: 430: _delay((unsigned long)((100)*(4000000/4000.0)));
  3389  007C4A  0E82               	movlw	130
  3390  007C4C  6E38               	movwf	??_main& (0+255),c
  3391  007C4E  0EDE               	movlw	222
  3392  007C50                     u3407:
  3393  007C50  2EE8               	decfsz	wreg,f,c
  3394  007C52  D7FE               	goto	u3407
  3395  007C54  2E38               	decfsz	??_main& (0+255),f,c
  3396  007C56  D7FC               	goto	u3407
  3397                           
  3398                           ;Main.c: 432: _delay((unsigned long)((100)*(4000000/4000.0)));
  3399  007C58  0E82               	movlw	130
  3400  007C5A  6E38               	movwf	??_main& (0+255),c
  3401  007C5C  0EDE               	movlw	222
  3402  007C5E                     u3417:
  3403  007C5E  2EE8               	decfsz	wreg,f,c
  3404  007C60  D7FE               	goto	u3417
  3405  007C62  2E38               	decfsz	??_main& (0+255),f,c
  3406  007C64  D7FC               	goto	u3417
  3407                           
  3408                           ;Main.c: 433: _delay((unsigned long)((100)*(4000000/4000.0)));
  3409  007C66  0E82               	movlw	130
  3410  007C68  6E38               	movwf	??_main& (0+255),c
  3411  007C6A  0EDE               	movlw	222
  3412  007C6C                     u3427:
  3413  007C6C  2EE8               	decfsz	wreg,f,c
  3414  007C6E  D7FE               	goto	u3427
  3415  007C70  2E38               	decfsz	??_main& (0+255),f,c
  3416  007C72  D7FC               	goto	u3427
  3417                           
  3418                           ;Main.c: 434: _delay((unsigned long)((100)*(4000000/4000.0)));
  3419  007C74  0E82               	movlw	130
  3420  007C76  6E38               	movwf	??_main& (0+255),c
  3421  007C78  0EDE               	movlw	222
  3422  007C7A                     u3437:
  3423  007C7A  2EE8               	decfsz	wreg,f,c
  3424  007C7C  D7FE               	goto	u3437
  3425  007C7E  2E38               	decfsz	??_main& (0+255),f,c
  3426  007C80  D7FC               	goto	u3437
  3427                           
  3428                           ;Main.c: 435: _delay((unsigned long)((100)*(4000000/4000.0)));
  3429  007C82  0E82               	movlw	130
  3430  007C84  6E38               	movwf	??_main& (0+255),c
  3431  007C86  0EDE               	movlw	222
  3432  007C88                     u3447:
  3433  007C88  2EE8               	decfsz	wreg,f,c
  3434  007C8A  D7FE               	goto	u3447
  3435  007C8C  2E38               	decfsz	??_main& (0+255),f,c
  3436  007C8E  D7FC               	goto	u3447
  3437                           
  3438                           ;Main.c: 436: _delay((unsigned long)((100)*(4000000/4000.0)));
  3439  007C90  0E82               	movlw	130
  3440  007C92  6E38               	movwf	??_main& (0+255),c
  3441  007C94  0EDE               	movlw	222
  3442  007C96                     u3457:
  3443  007C96  2EE8               	decfsz	wreg,f,c
  3444  007C98  D7FE               	goto	u3457
  3445  007C9A  2E38               	decfsz	??_main& (0+255),f,c
  3446  007C9C  D7FC               	goto	u3457
  3447                           
  3448                           ;Main.c: 437: _delay((unsigned long)((100)*(4000000/4000.0)));
  3449  007C9E  0E82               	movlw	130
  3450  007CA0  6E38               	movwf	??_main& (0+255),c
  3451  007CA2  0EDE               	movlw	222
  3452  007CA4                     u3467:
  3453  007CA4  2EE8               	decfsz	wreg,f,c
  3454  007CA6  D7FE               	goto	u3467
  3455  007CA8  2E38               	decfsz	??_main& (0+255),f,c
  3456  007CAA  D7FC               	goto	u3467
  3457                           
  3458                           ;Main.c: 438: _delay((unsigned long)((100)*(4000000/4000.0)));
  3459  007CAC  0E82               	movlw	130
  3460  007CAE  6E38               	movwf	??_main& (0+255),c
  3461  007CB0  0EDE               	movlw	222
  3462  007CB2                     u3477:
  3463  007CB2  2EE8               	decfsz	wreg,f,c
  3464  007CB4  D7FE               	goto	u3477
  3465  007CB6  2E38               	decfsz	??_main& (0+255),f,c
  3466  007CB8  D7FC               	goto	u3477
  3467                           
  3468                           ;Main.c: 439: _delay((unsigned long)((100)*(4000000/4000.0)));
  3469  007CBA  0E82               	movlw	130
  3470  007CBC  6E38               	movwf	??_main& (0+255),c
  3471  007CBE  0EDE               	movlw	222
  3472  007CC0                     u3487:
  3473  007CC0  2EE8               	decfsz	wreg,f,c
  3474  007CC2  D7FE               	goto	u3487
  3475  007CC4  2E38               	decfsz	??_main& (0+255),f,c
  3476  007CC6  D7FC               	goto	u3487
  3477                           
  3478                           ;Main.c: 440: _delay((unsigned long)((100)*(4000000/4000.0)));
  3479  007CC8  0E82               	movlw	130
  3480  007CCA  6E38               	movwf	??_main& (0+255),c
  3481  007CCC  0EDE               	movlw	222
  3482  007CCE                     u3497:
  3483  007CCE  2EE8               	decfsz	wreg,f,c
  3484  007CD0  D7FE               	goto	u3497
  3485  007CD2  2E38               	decfsz	??_main& (0+255),f,c
  3486  007CD4  D7FC               	goto	u3497
  3487                           
  3488                           ;Main.c: 441: _delay((unsigned long)((100)*(4000000/4000.0)));
  3489  007CD6  0E82               	movlw	130
  3490  007CD8  6E38               	movwf	??_main& (0+255),c
  3491  007CDA  0EDE               	movlw	222
  3492  007CDC                     u3507:
  3493  007CDC  2EE8               	decfsz	wreg,f,c
  3494  007CDE  D7FE               	goto	u3507
  3495  007CE0  2E38               	decfsz	??_main& (0+255),f,c
  3496  007CE2  D7FC               	goto	u3507
  3497                           
  3498                           ;Main.c: 456: if(PORTAbits.RA0==1 && PORTAbits.RA2==1){
  3499  007CE4  B080               	btfsc	3968,0,c	;volatile
  3500  007CE6  A480               	btfss	3968,2,c	;volatile
  3501  007CE8  D004               	goto	l3091
  3502                           
  3503                           ;Main.c: 457: p=1;
  3504  007CEA  0E00               	movlw	0
  3505  007CEC  6E42               	movwf	_p+1,c
  3506  007CEE  0E01               	movlw	1
  3507  007CF0  6E41               	movwf	_p,c
  3508  007CF2                     l3091:
  3509                           
  3510                           ;Main.c: 458: }
  3511                           ;Main.c: 459: }while(p==0);
  3512  007CF2  5042               	movf	_p+1,w,c
  3513  007CF4  1041               	iorwf	_p,w,c
  3514  007CF6  B4D8               	btfsc	status,2,c
  3515  007CF8  D6DE               	goto	l3013
  3516  007CFA                     l161:
  3517                           
  3518                           ;Main.c: 460: }
  3519                           ;Main.c: 461: if(PORTAbits.RA0==1 && PORTAbits.RA2==1){
  3520  007CFA  B080               	btfsc	3968,0,c	;volatile
  3521  007CFC  A480               	btfss	3968,2,c	;volatile
  3522  007CFE  D006               	goto	l3097
  3523                           
  3524                           ;Main.c: 462: w=1;
  3525  007D00  0E00               	movlw	0
  3526  007D02  0100               	movlb	0	; () banked
  3527  007D04  6FFF               	movwf	(_w+1)& (0+255),b
  3528  007D06  0E01               	movlw	1
  3529  007D08  0100               	movlb	0	; () banked
  3530  007D0A  6FFE               	movwf	_w& (0+255),b
  3531  007D0C                     l3097:
  3532                           
  3533                           ;Main.c: 463: }
  3534                           ;Main.c: 465: if(PORTAbits.RA0==1)
  3535  007D0C  A080               	btfss	3968,0,c	;volatile
  3536  007D0E  D00A               	goto	l3103
  3537                           
  3538                           ;Main.c: 466: {
  3539                           ;Main.c: 467: B++;
  3540  007D10  0100               	movlb	0	; () banked
  3541  007D12  4BF8               	infsnz	_B& (0+255),f,b
  3542  007D14  2BF9               	incf	(_B+1)& (0+255),f,b
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;Main.c: 468: _delay((unsigned long)((10)*(4000000/4000.0)));
  3546  007D16  0E0D               	movlw	13
  3547  007D18  6E38               	movwf	??_main& (0+255),c
  3548  007D1A  0EFC               	movlw	252
  3549  007D1C                     u3517:
  3550  007D1C  2EE8               	decfsz	wreg,f,c
  3551  007D1E  D7FE               	goto	u3517
  3552  007D20  2E38               	decfsz	??_main& (0+255),f,c
  3553  007D22  D7FC               	goto	u3517
  3554  007D24                     l3103:
  3555                           
  3556                           ;Main.c: 469: }
  3557                           ;Main.c: 471: if(PORTAbits.RA1==1)
  3558  007D24  A280               	btfss	3968,1,c	;volatile
  3559  007D26  D00B               	goto	l167
  3560                           
  3561                           ;Main.c: 472: {
  3562                           ;Main.c: 473: B--;
  3563  007D28  0100               	movlb	0	; () banked
  3564  007D2A  07F8               	decf	_B& (0+255),f,b
  3565  007D2C  A0D8               	btfss	status,0,c
  3566  007D2E  07F9               	decf	(_B+1)& (0+255),f,b
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;Main.c: 474: _delay((unsigned long)((10)*(4000000/4000.0)));
  3570  007D30  0E0D               	movlw	13
  3571  007D32  6E38               	movwf	??_main& (0+255),c
  3572  007D34  0EFC               	movlw	252
  3573  007D36                     u3527:
  3574  007D36  2EE8               	decfsz	wreg,f,c
  3575  007D38  D7FE               	goto	u3527
  3576  007D3A  2E38               	decfsz	??_main& (0+255),f,c
  3577  007D3C  D7FC               	goto	u3527
  3578  007D3E                     l167:
  3579                           
  3580                           ;Main.c: 475: }
  3581                           ;Main.c: 476: if(B>3){
  3582  007D3E  0E04               	movlw	4
  3583  007D40  0100               	movlb	0	; () banked
  3584  007D42  5DF8               	subwf	_B& (0+255),w,b
  3585  007D44  0E00               	movlw	0
  3586  007D46  0100               	movlb	0	; () banked
  3587  007D48  59F9               	subwfb	(_B+1)& (0+255),w,b
  3588  007D4A  A0D8               	btfss	status,0,c
  3589  007D4C  D006               	goto	l3113
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;Main.c: 477: B=1;
  3593  007D4E  0E00               	movlw	0
  3594  007D50  0100               	movlb	0	; () banked
  3595  007D52  6FF9               	movwf	(_B+1)& (0+255),b
  3596  007D54  0E01               	movlw	1
  3597  007D56  0100               	movlb	0	; () banked
  3598  007D58  6FF8               	movwf	_B& (0+255),b
  3599  007D5A                     l3113:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;Main.c: 482: }
  3603                           ;Main.c: 483: } while(w==0);
  3604  007D5A  0100               	movlb	0	; () banked
  3605  007D5C  51FF               	movf	(_w+1)& (0+255),w,b
  3606  007D5E  11FE               	iorwf	_w& (0+255),w,b
  3607  007D60  B4D8               	btfsc	status,2,c
  3608  007D62  EFFB  F037         	goto	l2617
  3609  007D66                     l3115:
  3610                           
  3611                           ;Main.c: 484: }
  3612                           ;Main.c: 490: }
  3613                           ;Main.c: 492: if(B==2){
  3614  007D66  0100               	movlb	0	; () banked
  3615  007D68  51F8               	movf	_B& (0+255),w,b
  3616  007D6A  0A02               	xorlw	2
  3617  007D6C  11F9               	iorwf	(_B+1)& (0+255),w,b
  3618  007D6E  A4D8               	btfss	status,2,c
  3619  007D70  D067               	goto	l3155
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;Main.c: 493: Lcd_Init();
  3623  007D72  EC1B  F034         	call	_Lcd_Init	;wreg free
  3624                           
  3625                           ;Main.c: 494: Lcd_Cmd(1);
  3626  007D76  0E01               	movlw	1
  3627  007D78  EC88  F033         	call	_Lcd_Cmd
  3628                           
  3629                           ;Main.c: 495: Lcd_Cmd(12);
  3630  007D7C  0E0C               	movlw	12
  3631  007D7E  EC88  F033         	call	_Lcd_Cmd
  3632                           
  3633                           ;Main.c: 496: Lcd_Out2(1,1,"   PWM");
  3634  007D82  0E01               	movlw	1
  3635  007D84  6E04               	movwf	Lcd_Out2@x,c
  3636  007D86  0E7F               	movlw	high STR_73
  3637  007D88  6E06               	movwf	Lcd_Out2@buffer+1,c
  3638  007D8A  0E80               	movlw	low STR_73
  3639  007D8C  6E05               	movwf	Lcd_Out2@buffer,c
  3640  007D8E  0E01               	movlw	1
  3641  007D90  EC37  F031         	call	_Lcd_Out2
  3642                           
  3643                           ;Main.c: 497: Lcd_Out2(2,1,"=> Senoidal");
  3644  007D94  0E01               	movlw	1
  3645  007D96  6E04               	movwf	Lcd_Out2@x,c
  3646  007D98  0E7F               	movlw	high STR_74
  3647  007D9A  6E06               	movwf	Lcd_Out2@buffer+1,c
  3648  007D9C  0E1F               	movlw	low STR_74
  3649  007D9E  6E05               	movwf	Lcd_Out2@buffer,c
  3650  007DA0  0E02               	movlw	2
  3651  007DA2  EC37  F031         	call	_Lcd_Out2
  3652                           
  3653                           ;Main.c: 498: _delay((unsigned long)((100)*(4000000/4000.0)));
  3654  007DA6  0E82               	movlw	130
  3655  007DA8  6E38               	movwf	??_main& (0+255),c
  3656  007DAA  0EDE               	movlw	222
  3657  007DAC                     u3537:
  3658  007DAC  2EE8               	decfsz	wreg,f,c
  3659  007DAE  D7FE               	goto	u3537
  3660  007DB0  2E38               	decfsz	??_main& (0+255),f,c
  3661  007DB2  D7FC               	goto	u3537
  3662                           
  3663                           ;Main.c: 499: _delay((unsigned long)((100)*(4000000/4000.0)));
  3664  007DB4  0E82               	movlw	130
  3665  007DB6  6E38               	movwf	??_main& (0+255),c
  3666  007DB8  0EDE               	movlw	222
  3667  007DBA                     u3547:
  3668  007DBA  2EE8               	decfsz	wreg,f,c
  3669  007DBC  D7FE               	goto	u3547
  3670  007DBE  2E38               	decfsz	??_main& (0+255),f,c
  3671  007DC0  D7FC               	goto	u3547
  3672                           
  3673                           ;Main.c: 500: _delay((unsigned long)((100)*(4000000/4000.0)));
  3674  007DC2  0E82               	movlw	130
  3675  007DC4  6E38               	movwf	??_main& (0+255),c
  3676  007DC6  0EDE               	movlw	222
  3677  007DC8                     u3557:
  3678  007DC8  2EE8               	decfsz	wreg,f,c
  3679  007DCA  D7FE               	goto	u3557
  3680  007DCC  2E38               	decfsz	??_main& (0+255),f,c
  3681  007DCE  D7FC               	goto	u3557
  3682                           
  3683                           ;Main.c: 501: _delay((unsigned long)((100)*(4000000/4000.0)));
  3684  007DD0  0E82               	movlw	130
  3685  007DD2  6E38               	movwf	??_main& (0+255),c
  3686  007DD4  0EDE               	movlw	222
  3687  007DD6                     u3567:
  3688  007DD6  2EE8               	decfsz	wreg,f,c
  3689  007DD8  D7FE               	goto	u3567
  3690  007DDA  2E38               	decfsz	??_main& (0+255),f,c
  3691  007DDC  D7FC               	goto	u3567
  3692                           
  3693                           ;Main.c: 505: if(PORTAbits.RA2==1){
  3694  007DDE  A480               	btfss	3968,2,c	;volatile
  3695  007DE0  D02F               	goto	l3155
  3696                           
  3697                           ;Main.c: 506: w=0;
  3698  007DE2  0E00               	movlw	0
  3699  007DE4  0100               	movlb	0	; () banked
  3700  007DE6  6FFF               	movwf	(_w+1)& (0+255),b
  3701  007DE8  0E00               	movlw	0
  3702  007DEA  0100               	movlb	0	; () banked
  3703  007DEC  6FFE               	movwf	_w& (0+255),b
  3704  007DEE                     l3135:
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;Main.c: 508: Lcd_Init();
  3708  007DEE  EC1B  F034         	call	_Lcd_Init	;wreg free
  3709                           
  3710                           ;Main.c: 509: Lcd_Cmd(1);
  3711  007DF2  0E01               	movlw	1
  3712  007DF4  EC88  F033         	call	_Lcd_Cmd
  3713                           
  3714                           ;Main.c: 510: Lcd_Cmd(12);
  3715  007DF8  0E0C               	movlw	12
  3716  007DFA  EC88  F033         	call	_Lcd_Cmd
  3717                           
  3718                           ;Main.c: 511: Lcd_Out2(1,1,"holo");
  3719  007DFE  0E01               	movlw	1
  3720  007E00  6E04               	movwf	Lcd_Out2@x,c
  3721  007E02  0E7F               	movlw	high STR_75
  3722  007E04  6E06               	movwf	Lcd_Out2@buffer+1,c
  3723  007E06  0EF5               	movlw	low STR_75
  3724  007E08  6E05               	movwf	Lcd_Out2@buffer,c
  3725  007E0A  0E01               	movlw	1
  3726  007E0C  EC37  F031         	call	_Lcd_Out2
  3727                           
  3728                           ;Main.c: 513: TRISCbits.RC2=0;
  3729  007E10  9494               	bcf	3988,2,c	;volatile
  3730                           
  3731                           ;Main.c: 514: int valoresSeno [51]= {4,8,12,16,20,24,28,32,
  3732                           ;Main.c: 515: 36,40,44,48,52,56,60,64,
  3733                           ;Main.c: 516: 68,72,76,80,84,88,92,96,
  3734                           ;Main.c: 517: 100,96,92,88,84,80,76,72,
  3735                           ;Main.c: 518: 68,64,60,56,52,48,44,40,
  3736                           ;Main.c: 519: 36,32,28,24,20,16,12,8,
  3737                           ;Main.c: 520: 4,0,-4};
  3738  007E12  EE21  F000         	lfsr	2,main@F7724
  3739  007E16  EE10  F060         	lfsr	1,main@valoresSeno
  3740  007E1A  0E66               	movlw	102
  3741  007E1C                     u2381:
  3742  007E1C  CFDE FFE6          	movff	postinc2,postinc1
  3743  007E20  2EE8               	decfsz	wreg,f,c
  3744  007E22  D7FC               	goto	u2381
  3745                           
  3746                           ;Main.c: 521: if(PORTAbits.RA3==1 && PORTAbits.RA2==1 ){
  3747  007E24  B680               	btfsc	3968,3,c	;volatile
  3748  007E26  A480               	btfss	3968,2,c	;volatile
  3749  007E28  D006               	goto	l3153
  3750                           
  3751                           ;Main.c: 522: w=1;
  3752  007E2A  0E00               	movlw	0
  3753  007E2C  0100               	movlb	0	; () banked
  3754  007E2E  6FFF               	movwf	(_w+1)& (0+255),b
  3755  007E30  0E01               	movlw	1
  3756  007E32  0100               	movlb	0	; () banked
  3757  007E34  6FFE               	movwf	_w& (0+255),b
  3758  007E36                     l3153:
  3759                           
  3760                           ;Main.c: 523: }
  3761                           ;Main.c: 524: }while(w==0);
  3762  007E36  0100               	movlb	0	; () banked
  3763  007E38  51FF               	movf	(_w+1)& (0+255),w,b
  3764  007E3A  11FE               	iorwf	_w& (0+255),w,b
  3765  007E3C  B4D8               	btfsc	status,2,c
  3766  007E3E  D7D7               	goto	l3135
  3767  007E40                     l3155:
  3768                           
  3769                           ;Main.c: 526: }
  3770                           ;Main.c: 529: }
  3771                           ;Main.c: 531: if(B==3){
  3772  007E40  0100               	movlb	0	; () banked
  3773  007E42  51F8               	movf	_B& (0+255),w,b
  3774  007E44  0A03               	xorlw	3
  3775  007E46  11F9               	iorwf	(_B+1)& (0+255),w,b
  3776  007E48  A4D8               	btfss	status,2,c
  3777  007E4A  D02D               	goto	l3169
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;Main.c: 532: Lcd_Init();
  3781  007E4C  EC1B  F034         	call	_Lcd_Init	;wreg free
  3782                           
  3783                           ;Main.c: 533: Lcd_Cmd(1);
  3784  007E50  0E01               	movlw	1
  3785  007E52  EC88  F033         	call	_Lcd_Cmd
  3786                           
  3787                           ;Main.c: 534: Lcd_Cmd(12);
  3788  007E56  0E0C               	movlw	12
  3789  007E58  EC88  F033         	call	_Lcd_Cmd
  3790                           
  3791                           ;Main.c: 535: Lcd_Out2(1,1,"=> Triangular");
  3792  007E5C  0E01               	movlw	1
  3793  007E5E  6E04               	movwf	Lcd_Out2@x,c
  3794  007E60  0E7F               	movlw	high STR_76
  3795  007E62  6E06               	movwf	Lcd_Out2@buffer+1,c
  3796  007E64  0E05               	movlw	low STR_76
  3797  007E66  6E05               	movwf	Lcd_Out2@buffer,c
  3798  007E68  0E01               	movlw	1
  3799  007E6A  EC37  F031         	call	_Lcd_Out2
  3800                           
  3801                           ;Main.c: 536: _delay((unsigned long)((100)*(4000000/4000.0)));
  3802  007E6E  0E82               	movlw	130
  3803  007E70  6E38               	movwf	??_main& (0+255),c
  3804  007E72  0EDE               	movlw	222
  3805  007E74                     u3577:
  3806  007E74  2EE8               	decfsz	wreg,f,c
  3807  007E76  D7FE               	goto	u3577
  3808  007E78  2E38               	decfsz	??_main& (0+255),f,c
  3809  007E7A  D7FC               	goto	u3577
  3810                           
  3811                           ;Main.c: 537: _delay((unsigned long)((100)*(4000000/4000.0)));
  3812  007E7C  0E82               	movlw	130
  3813  007E7E  6E38               	movwf	??_main& (0+255),c
  3814  007E80  0EDE               	movlw	222
  3815  007E82                     u3587:
  3816  007E82  2EE8               	decfsz	wreg,f,c
  3817  007E84  D7FE               	goto	u3587
  3818  007E86  2E38               	decfsz	??_main& (0+255),f,c
  3819  007E88  D7FC               	goto	u3587
  3820                           
  3821                           ;Main.c: 538: _delay((unsigned long)((100)*(4000000/4000.0)));
  3822  007E8A  0E82               	movlw	130
  3823  007E8C  6E38               	movwf	??_main& (0+255),c
  3824  007E8E  0EDE               	movlw	222
  3825  007E90                     u3597:
  3826  007E90  2EE8               	decfsz	wreg,f,c
  3827  007E92  D7FE               	goto	u3597
  3828  007E94  2E38               	decfsz	??_main& (0+255),f,c
  3829  007E96  D7FC               	goto	u3597
  3830                           
  3831                           ;Main.c: 539: _delay((unsigned long)((100)*(4000000/4000.0)));
  3832  007E98  0E82               	movlw	130
  3833  007E9A  6E38               	movwf	??_main& (0+255),c
  3834  007E9C  0EDE               	movlw	222
  3835  007E9E                     u3607:
  3836  007E9E  2EE8               	decfsz	wreg,f,c
  3837  007EA0  D7FE               	goto	u3607
  3838  007EA2  2E38               	decfsz	??_main& (0+255),f,c
  3839  007EA4  D7FC               	goto	u3607
  3840  007EA6                     l3169:
  3841                           
  3842                           ;Main.c: 541: }
  3843                           ;Main.c: 544: if(B>3){
  3844  007EA6  0E04               	movlw	4
  3845  007EA8  0100               	movlb	0	; () banked
  3846  007EAA  5DF8               	subwf	_B& (0+255),w,b
  3847  007EAC  0E00               	movlw	0
  3848  007EAE  0100               	movlb	0	; () banked
  3849  007EB0  59F9               	subwfb	(_B+1)& (0+255),w,b
  3850  007EB2  A0D8               	btfss	status,0,c
  3851  007EB4  EF6F  F037         	goto	l2575
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;Main.c: 545: B=1;
  3855  007EB8  0E00               	movlw	0
  3856  007EBA  0100               	movlb	0	; () banked
  3857  007EBC  6FF9               	movwf	(_B+1)& (0+255),b
  3858  007EBE  0E01               	movlw	1
  3859  007EC0  0100               	movlb	0	; () banked
  3860  007EC2  6FF8               	movwf	_B& (0+255),b
  3861  007EC4  EF6F  F037         	goto	l2575
  3862  007EC8                     __end_of_main:
  3863                           	opt stack 0
  3864                           tblptru	equ	0xFF8
  3865                           tblptrh	equ	0xFF7
  3866                           tblptrl	equ	0xFF6
  3867                           tablat	equ	0xFF5
  3868                           prodh	equ	0xFF4
  3869                           prodl	equ	0xFF3
  3870                           postinc0	equ	0xFEE
  3871                           wreg	equ	0xFE8
  3872                           postinc1	equ	0xFE6
  3873                           postdec1	equ	0xFE5
  3874                           fsr1l	equ	0xFE1
  3875                           postinc2	equ	0xFDE
  3876                           status	equ	0xFD8
  3877                           
  3878 ;; *************** function _lcd_goto *****************
  3879 ;; Defined at:
  3880 ;;		line 161 in file "LCD.h"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  x               2    3[COMRAM] int 
  3883 ;;  y               2    5[COMRAM] int 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  data            1    9[COMRAM] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;		None               void
  3888 ;; Registers used:
  3889 ;;		wreg, status,2, status,0, cstack
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3895 ;;      Params:         4       0       0       0       0       0       0       0       0
  3896 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3897 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3898 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3899 ;;Total ram usage:        7 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; Hardware stack levels required when called:    1
  3902 ;; This function calls:
  3903 ;;		_Lcd_Cmd
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text1
  3910  006168                     __ptext1:
  3911                           	opt stack 0
  3912  006168                     _lcd_goto:
  3913                           	opt stack 29
  3914                           
  3915                           ;LCD.h: 162: unsigned char data;
  3916                           ;LCD.h: 163: switch (y) {
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;incstack = 0
  3920  006168  D00D               	goto	l2439
  3921  00616A                     l2429:
  3922  00616A  5004               	movf	lcd_goto@x,w,c
  3923  00616C  0F80               	addlw	128
  3924  00616E  D008               	goto	L3
  3925  006170                     l2431:
  3926  006170  5004               	movf	lcd_goto@x,w,c
  3927  006172  0FC0               	addlw	192
  3928  006174  D005               	goto	L3
  3929  006176                     l2433:
  3930  006176  5004               	movf	lcd_goto@x,w,c
  3931  006178  0F94               	addlw	148
  3932  00617A  D002               	goto	L3
  3933  00617C                     l2435:
  3934  00617C  5004               	movf	lcd_goto@x,w,c
  3935  00617E  0FD4               	addlw	212
  3936  006180                     L3:
  3937  006180  6E0A               	movwf	lcd_goto@data,c
  3938  006182  D015               	goto	l2441
  3939  006184                     l2439:
  3940  006184  C006  F008         	movff	lcd_goto@y,??_lcd_goto
  3941  006188  C007  F009         	movff	lcd_goto@y+1,??_lcd_goto+1
  3942                           
  3943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3944                           ; Switch size 1, requested type "space"
  3945                           ; Number of cases is 1, Range of values is 0 to 0
  3946                           ; switch strategies available:
  3947                           ; Name         Instructions Cycles
  3948                           ; simple_byte            4     3 (average)
  3949                           ;	Chosen strategy is simple_byte
  3950  00618C  5009               	movf	??_lcd_goto+1,w,c
  3951  00618E  0A00               	xorlw	0	; case 0
  3952  006190  A4D8               	btfss	status,2,c
  3953  006192  D00D               	goto	l2441
  3954                           
  3955                           ; Switch size 1, requested type "space"
  3956                           ; Number of cases is 4, Range of values is 1 to 4
  3957                           ; switch strategies available:
  3958                           ; Name         Instructions Cycles
  3959                           ; simple_byte           13     7 (average)
  3960                           ;	Chosen strategy is simple_byte
  3961  006194  5008               	movf	??_lcd_goto,w,c
  3962  006196  0A01               	xorlw	1	; case 1
  3963  006198  B4D8               	btfsc	status,2,c
  3964  00619A  D7E7               	goto	l2429
  3965  00619C  0A03               	xorlw	3	; case 2
  3966  00619E  B4D8               	btfsc	status,2,c
  3967  0061A0  D7E7               	goto	l2431
  3968  0061A2  0A01               	xorlw	1	; case 3
  3969  0061A4  B4D8               	btfsc	status,2,c
  3970  0061A6  D7E7               	goto	l2433
  3971  0061A8  0A07               	xorlw	7	; case 4
  3972  0061AA  B4D8               	btfsc	status,2,c
  3973  0061AC  D7E7               	goto	l2435
  3974  0061AE                     l2441:
  3975                           
  3976                           ;LCD.h: 170: Lcd_Cmd(data);
  3977  0061AE  500A               	movf	lcd_goto@data,w,c
  3978  0061B0  EC88  F033         	call	_Lcd_Cmd
  3979  0061B4  0012               	return	
  3980  0061B6                     __end_of_lcd_goto:
  3981                           	opt stack 0
  3982                           tblptru	equ	0xFF8
  3983                           tblptrh	equ	0xFF7
  3984                           tblptrl	equ	0xFF6
  3985                           tablat	equ	0xFF5
  3986                           prodh	equ	0xFF4
  3987                           prodl	equ	0xFF3
  3988                           postinc0	equ	0xFEE
  3989                           wreg	equ	0xFE8
  3990                           postinc1	equ	0xFE6
  3991                           postdec1	equ	0xFE5
  3992                           fsr1l	equ	0xFE1
  3993                           postinc2	equ	0xFDE
  3994                           status	equ	0xFD8
  3995                           
  3996 ;; *************** function _atoi *****************
  3997 ;; Defined at:
  3998 ;;		line 5 in file "/opt/microchip/xc8/v1.32/sources/common/atoi.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  s               3    6[COMRAM] PTR const unsigned char 
  4001 ;;		 -> ROM(32767), 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  a               2   12[COMRAM] int 
  4004 ;;  sign            1   11[COMRAM] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  2    6[COMRAM] int 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4014 ;;      Params:         3       0       0       0       0       0       0       0       0
  4015 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4016 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4017 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4018 ;;Total ram usage:        8 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    1
  4021 ;; This function calls:
  4022 ;;		___wmul
  4023 ;;		_isdigit
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text2
  4030  00660E                     __ptext2:
  4031                           	opt stack 0
  4032  00660E                     _atoi:
  4033                           	opt stack 29
  4034                           
  4035                           ;incstack = 0
  4036  00660E  D006               	goto	l2491
  4037  006610                     l2489:
  4038  006610  0E01               	movlw	1
  4039  006612  2607               	addwf	atoi@s,f,c
  4040  006614  0E00               	movlw	0
  4041  006616  2208               	addwfc	atoi@s+1,f,c
  4042  006618  0E00               	movlw	0
  4043  00661A  2209               	addwfc	atoi@s+2,f,c
  4044  00661C                     l2491:
  4045  00661C  C007  FFF6         	movff	atoi@s,tblptrl
  4046  006620  C008  FFF7         	movff	atoi@s+1,tblptrh
  4047  006624  C009  FFF8         	movff	atoi@s+2,tblptru
  4048  006628  0008               	tblrd		*
  4049  00662A  50F5               	movf	tablat,w,c
  4050  00662C  0A20               	xorlw	32
  4051  00662E  B4D8               	btfsc	status,2,c
  4052  006630  D7EF               	goto	l2489
  4053  006632  C007  FFF6         	movff	atoi@s,tblptrl
  4054  006636  C008  FFF7         	movff	atoi@s+1,tblptrh
  4055  00663A  C009  FFF8         	movff	atoi@s+2,tblptru
  4056  00663E  0008               	tblrd		*
  4057  006640  50F5               	movf	tablat,w,c
  4058  006642  0A09               	xorlw	9
  4059  006644  B4D8               	btfsc	status,2,c
  4060  006646  D7E4               	goto	l2489
  4061  006648  0E00               	movlw	0
  4062  00664A  6E0E               	movwf	atoi@a+1,c
  4063  00664C  0E00               	movlw	0
  4064  00664E  6E0D               	movwf	atoi@a,c
  4065  006650  0E00               	movlw	0
  4066  006652  6E0C               	movwf	atoi@sign,c
  4067  006654  C007  FFF6         	movff	atoi@s,tblptrl
  4068  006658  C008  FFF7         	movff	atoi@s+1,tblptrh
  4069  00665C  C009  FFF8         	movff	atoi@s+2,tblptru
  4070  006660  0008               	tblrd		*
  4071  006662  50F5               	movf	tablat,w,c
  4072  006664  0A2D               	xorlw	45
  4073  006666  A4D8               	btfss	status,2,c
  4074  006668  D002               	goto	l2503
  4075  00666A  2A0C               	incf	atoi@sign,f,c
  4076  00666C  D02A               	goto	L4
  4077  00666E                     l2503:
  4078  00666E  C007  FFF6         	movff	atoi@s,tblptrl
  4079  006672  C008  FFF7         	movff	atoi@s+1,tblptrh
  4080  006676  C009  FFF8         	movff	atoi@s+2,tblptru
  4081  00667A  0008               	tblrd		*
  4082  00667C  50F5               	movf	tablat,w,c
  4083  00667E  0A2B               	xorlw	43
  4084  006680  A4D8               	btfss	status,2,c
  4085  006682  D025               	goto	l2511
  4086  006684  D01E               	goto	L4
  4087  006686                     l2507:
  4088  006686  C00D  F001         	movff	atoi@a,___wmul@multiplier
  4089  00668A  C00E  F002         	movff	atoi@a+1,___wmul@multiplier+1
  4090  00668E  0E00               	movlw	0
  4091  006690  6E04               	movwf	___wmul@multiplicand+1,c
  4092  006692  0E0A               	movlw	10
  4093  006694  6E03               	movwf	___wmul@multiplicand,c
  4094  006696  EC80  F030         	call	___wmul	;wreg free
  4095  00669A  C007  FFF6         	movff	atoi@s,tblptrl
  4096  00669E  C008  FFF7         	movff	atoi@s+1,tblptrh
  4097  0066A2  C009  FFF8         	movff	atoi@s+2,tblptru
  4098  0066A6  0008               	tblrd		*
  4099  0066A8  50F5               	movf	tablat,w,c
  4100  0066AA  6E0A               	movwf	??_atoi& (0+255),c
  4101  0066AC  6A0B               	clrf	(??_atoi+1)& (0+255),c
  4102  0066AE  5001               	movf	?___wmul,w,c
  4103  0066B0  260A               	addwf	??_atoi,f,c
  4104  0066B2  5002               	movf	?___wmul+1,w,c
  4105  0066B4  220B               	addwfc	??_atoi+1,f,c
  4106  0066B6  0ED0               	movlw	208
  4107  0066B8  240A               	addwf	??_atoi,w,c
  4108  0066BA  6E0D               	movwf	atoi@a,c
  4109  0066BC  0EFF               	movlw	255
  4110  0066BE  200B               	addwfc	??_atoi+1,w,c
  4111  0066C0  6E0E               	movwf	atoi@a+1,c
  4112  0066C2                     L4:
  4113  0066C2  0E01               	movlw	1
  4114  0066C4  2607               	addwf	atoi@s,f,c
  4115  0066C6  0E00               	movlw	0
  4116  0066C8  2208               	addwfc	atoi@s+1,f,c
  4117  0066CA  0E00               	movlw	0
  4118  0066CC  2209               	addwfc	atoi@s+2,f,c
  4119  0066CE                     l2511:
  4120  0066CE  C007  FFF6         	movff	atoi@s,tblptrl
  4121  0066D2  C008  FFF7         	movff	atoi@s+1,tblptrh
  4122  0066D6  C009  FFF8         	movff	atoi@s+2,tblptru
  4123  0066DA  0008               	tblrd		*
  4124  0066DC  50F5               	movf	tablat,w,c
  4125  0066DE  EC70  F030         	call	_isdigit
  4126  0066E2  B0D8               	btfsc	status,0,c
  4127  0066E4  D7D0               	goto	l2507
  4128  0066E6  500C               	movf	atoi@sign,w,c
  4129  0066E8  B4D8               	btfsc	status,2,c
  4130  0066EA  D00D               	goto	l480
  4131  0066EC  C00D  F00A         	movff	atoi@a,??_atoi
  4132  0066F0  C00E  F00B         	movff	atoi@a+1,??_atoi+1
  4133  0066F4  1E0A               	comf	??_atoi,f,c
  4134  0066F6  1E0B               	comf	??_atoi+1,f,c
  4135  0066F8  4A0A               	infsnz	??_atoi,f,c
  4136  0066FA  2A0B               	incf	??_atoi+1,f,c
  4137  0066FC  C00A  F007         	movff	??_atoi,?_atoi
  4138  006700  C00B  F008         	movff	??_atoi+1,?_atoi+1
  4139  006704  0012               	return	
  4140  006706                     l480:
  4141  006706  C00D  F007         	movff	atoi@a,?_atoi
  4142  00670A  C00E  F008         	movff	atoi@a+1,?_atoi+1
  4143  00670E  0012               	return	
  4144  006710                     __end_of_atoi:
  4145                           	opt stack 0
  4146                           tblptru	equ	0xFF8
  4147                           tblptrh	equ	0xFF7
  4148                           tblptrl	equ	0xFF6
  4149                           tablat	equ	0xFF5
  4150                           prodh	equ	0xFF4
  4151                           prodl	equ	0xFF3
  4152                           postinc0	equ	0xFEE
  4153                           wreg	equ	0xFE8
  4154                           postinc1	equ	0xFE6
  4155                           postdec1	equ	0xFE5
  4156                           fsr1l	equ	0xFE1
  4157                           postinc2	equ	0xFDE
  4158                           status	equ	0xFD8
  4159                           
  4160 ;; *************** function _isdigit *****************
  4161 ;; Defined at:
  4162 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/isdigit.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  c               1    wreg     unsigned char 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  c               1    2[COMRAM] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;		None               void
  4169 ;; Registers used:
  4170 ;;		wreg, status,2, status,0
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0
  4177 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4178 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4179 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4180 ;;Total ram usage:        3 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_atoi
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text3
  4190  0060E0                     __ptext3:
  4191                           	opt stack 0
  4192  0060E0                     _isdigit:
  4193                           	opt stack 29
  4194                           
  4195                           ;incstack = 0
  4196                           ;isdigit@c stored from wreg
  4197  0060E0  6E03               	movwf	isdigit@c,c
  4198  0060E2  0E00               	movlw	0
  4199  0060E4  6E02               	movwf	_isdigit$1038,c
  4200  0060E6  0E3A               	movlw	58
  4201  0060E8  5C03               	subwf	isdigit@c,w,c
  4202  0060EA  B0D8               	btfsc	status,0,c
  4203  0060EC  D005               	goto	l2323
  4204  0060EE  0E2F               	movlw	47
  4205  0060F0  6403               	cpfsgt	isdigit@c,c
  4206  0060F2  D002               	goto	l2323
  4207  0060F4  0E01               	movlw	1
  4208  0060F6  6E02               	movwf	_isdigit$1038,c
  4209  0060F8                     l2323:
  4210  0060F8  C002  F001         	movff	_isdigit$1038,??_isdigit
  4211  0060FC  3001               	rrcf	??_isdigit,w,c
  4212  0060FE  0012               	return	
  4213  006100                     __end_of_isdigit:
  4214                           	opt stack 0
  4215                           tblptru	equ	0xFF8
  4216                           tblptrh	equ	0xFF7
  4217                           tblptrl	equ	0xFF6
  4218                           tablat	equ	0xFF5
  4219                           prodh	equ	0xFF4
  4220                           prodl	equ	0xFF3
  4221                           postinc0	equ	0xFEE
  4222                           wreg	equ	0xFE8
  4223                           postinc1	equ	0xFE6
  4224                           postdec1	equ	0xFE5
  4225                           fsr1l	equ	0xFE1
  4226                           postinc2	equ	0xFDE
  4227                           status	equ	0xFD8
  4228                           
  4229 ;; *************** function ___wmul *****************
  4230 ;; Defined at:
  4231 ;;		line 15 in file "/opt/microchip/xc8/v1.32/sources/common/Umul16.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  multiplier      2    0[COMRAM] unsigned int 
  4234 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  product         2    4[COMRAM] unsigned int 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  2    0[COMRAM] unsigned int 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0, prodl, prodh
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4246 ;;      Params:         4       0       0       0       0       0       0       0       0
  4247 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4249 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4250 ;;Total ram usage:        6 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_atoi
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text4
  4260  006100                     __ptext4:
  4261                           	opt stack 0
  4262  006100                     ___wmul:
  4263                           	opt stack 29
  4264                           
  4265                           ;incstack = 0
  4266  006100  5001               	movf	___wmul@multiplier,w,c
  4267  006102  0203               	mulwf	___wmul@multiplicand,c
  4268  006104  CFF3 F005          	movff	prodl,___wmul@product
  4269  006108  CFF4 F006          	movff	prodh,___wmul@product+1
  4270  00610C  5001               	movf	___wmul@multiplier,w,c
  4271  00610E  0204               	mulwf	___wmul@multiplicand+1,c
  4272  006110  50F3               	movf	prodl,w,c
  4273  006112  2606               	addwf	___wmul@product+1,f,c
  4274  006114  5002               	movf	___wmul@multiplier+1,w,c
  4275  006116  0203               	mulwf	___wmul@multiplicand,c
  4276  006118  50F3               	movf	prodl,w,c
  4277  00611A  2606               	addwf	___wmul@product+1,f,c
  4278  00611C  C005  F001         	movff	___wmul@product,?___wmul
  4279  006120  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4280  006124  0012               	return	
  4281  006126                     __end_of___wmul:
  4282                           	opt stack 0
  4283                           tblptru	equ	0xFF8
  4284                           tblptrh	equ	0xFF7
  4285                           tblptrl	equ	0xFF6
  4286                           tablat	equ	0xFF5
  4287                           prodh	equ	0xFF4
  4288                           prodl	equ	0xFF3
  4289                           postinc0	equ	0xFEE
  4290                           wreg	equ	0xFE8
  4291                           postinc1	equ	0xFE6
  4292                           postdec1	equ	0xFE5
  4293                           fsr1l	equ	0xFE1
  4294                           postinc2	equ	0xFDE
  4295                           status	equ	0xFD8
  4296                           
  4297 ;; *************** function _PWM_generar *****************
  4298 ;; Defined at:
  4299 ;;		line 9 in file "PWM.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  ciclo           2   13[COMRAM] unsigned int 
  4302 ;;  frecuencia      2   15[COMRAM] unsigned int 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  AuxCCPR2L       4   29[COMRAM] unsigned long 
  4305 ;;  PR2cal          4   25[COMRAM] unsigned long 
  4306 ;;  AuxCCP2CON      2   23[COMRAM] unsigned int 
  4307 ;;  prescalador     2   21[COMRAM] unsigned int 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;		None               void
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4317 ;;      Params:         4       0       0       0       0       0       0       0       0
  4318 ;;      Locals:        12       0       0       0       0       0       0       0       0
  4319 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4320 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4321 ;;Total ram usage:       20 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    1
  4324 ;; This function calls:
  4325 ;;		___lldiv
  4326 ;;		___lmul
  4327 ;; This function is called by:
  4328 ;;		_main
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text5
  4333  006C62                     __ptext5:
  4334                           	opt stack 0
  4335  006C62                     _PWM_generar:
  4336                           	opt stack 29
  4337                           
  4338                           ;PWM.c: 16: TRISCbits.RC1=0;
  4339                           
  4340                           ;incstack = 0
  4341  006C62  9294               	bcf	3988,1,c	;volatile
  4342                           
  4343                           ;PWM.c: 18: unsigned int prescalador=1;
  4344  006C64  0E00               	movlw	0
  4345  006C66  6E17               	movwf	PWM_generar@prescalador+1,c
  4346  006C68  0E01               	movlw	1
  4347  006C6A  6E16               	movwf	PWM_generar@prescalador,c
  4348                           
  4349                           ;PWM.c: 19: unsigned long PR2cal=4000000;
  4350  006C6C  0E00               	movlw	0
  4351  006C6E  6E1A               	movwf	PWM_generar@PR2cal,c
  4352  006C70  0E09               	movlw	9
  4353  006C72  6E1B               	movwf	PWM_generar@PR2cal+1,c
  4354  006C74  0E3D               	movlw	61
  4355  006C76  6E1C               	movwf	PWM_generar@PR2cal+2,c
  4356  006C78  0E00               	movlw	0
  4357  006C7A  6E1D               	movwf	PWM_generar@PR2cal+3,c
  4358                           
  4359                           ;PWM.c: 20: PR2cal=PR2cal/frecuencia;
  4360  006C7C  C01A  F001         	movff	PWM_generar@PR2cal,___lldiv@dividend
  4361  006C80  C01B  F002         	movff	PWM_generar@PR2cal+1,___lldiv@dividend+1
  4362  006C84  C01C  F003         	movff	PWM_generar@PR2cal+2,___lldiv@dividend+2
  4363  006C88  C01D  F004         	movff	PWM_generar@PR2cal+3,___lldiv@dividend+3
  4364  006C8C  C010  F005         	movff	PWM_generar@frecuencia,___lldiv@divisor
  4365  006C90  C011  F006         	movff	PWM_generar@frecuencia+1,___lldiv@divisor+1
  4366  006C94  6A07               	clrf	___lldiv@divisor+2,c
  4367  006C96  6A08               	clrf	___lldiv@divisor+3,c
  4368  006C98  EC6B  F031         	call	___lldiv	;wreg free
  4369  006C9C  C001  F01A         	movff	?___lldiv,PWM_generar@PR2cal
  4370  006CA0  C002  F01B         	movff	?___lldiv+1,PWM_generar@PR2cal+1
  4371  006CA4  C003  F01C         	movff	?___lldiv+2,PWM_generar@PR2cal+2
  4372  006CA8  C004  F01D         	movff	?___lldiv+3,PWM_generar@PR2cal+3
  4373                           
  4374                           ;PWM.c: 21: PR2cal=PR2cal/4;
  4375  006CAC  C01A  F012         	movff	PWM_generar@PR2cal,??_PWM_generar
  4376  006CB0  C01B  F013         	movff	PWM_generar@PR2cal+1,??_PWM_generar+1
  4377  006CB4  C01C  F014         	movff	PWM_generar@PR2cal+2,??_PWM_generar+2
  4378  006CB8  C01D  F015         	movff	PWM_generar@PR2cal+3,??_PWM_generar+3
  4379  006CBC  0E03               	movlw	3
  4380  006CBE  D005               	goto	u1800
  4381  006CC0                     u1805:
  4382  006CC0  90D8               	bcf	status,0,c
  4383  006CC2  3215               	rrcf	??_PWM_generar+3,f,c
  4384  006CC4  3214               	rrcf	??_PWM_generar+2,f,c
  4385  006CC6  3213               	rrcf	??_PWM_generar+1,f,c
  4386  006CC8  3212               	rrcf	??_PWM_generar,f,c
  4387  006CCA                     u1800:
  4388  006CCA  2EE8               	decfsz	wreg,f,c
  4389  006CCC  D7F9               	goto	u1805
  4390  006CCE  C012  F01A         	movff	??_PWM_generar,PWM_generar@PR2cal
  4391  006CD2  C013  F01B         	movff	??_PWM_generar+1,PWM_generar@PR2cal+1
  4392  006CD6  C014  F01C         	movff	??_PWM_generar+2,PWM_generar@PR2cal+2
  4393  006CDA  C015  F01D         	movff	??_PWM_generar+3,PWM_generar@PR2cal+3
  4394                           
  4395                           ;PWM.c: 22: T2CON=0b00000000;
  4396  006CDE  0E00               	movlw	0
  4397  006CE0  6EBA               	movwf	4026,c	;volatile
  4398                           
  4399                           ;PWM.c: 23: while(PR2cal>256){
  4400  006CE2  D028               	goto	l2531
  4401  006CE4                     l2527:
  4402                           
  4403                           ;PWM.c: 24: prescalador=prescalador*4;
  4404  006CE4  C016  F012         	movff	PWM_generar@prescalador,??_PWM_generar
  4405  006CE8  C017  F013         	movff	PWM_generar@prescalador+1,??_PWM_generar+1
  4406  006CEC  90D8               	bcf	status,0,c
  4407  006CEE  3612               	rlcf	??_PWM_generar,f,c
  4408  006CF0  3613               	rlcf	??_PWM_generar+1,f,c
  4409  006CF2  90D8               	bcf	status,0,c
  4410  006CF4  3612               	rlcf	??_PWM_generar,f,c
  4411  006CF6  3613               	rlcf	??_PWM_generar+1,f,c
  4412  006CF8  C012  F016         	movff	??_PWM_generar,PWM_generar@prescalador
  4413  006CFC  C013  F017         	movff	??_PWM_generar+1,PWM_generar@prescalador+1
  4414                           
  4415                           ;PWM.c: 25: T2CON++;
  4416  006D00  2ABA               	incf	4026,f,c	;volatile
  4417                           
  4418                           ;PWM.c: 26: PR2cal=PR2cal/4;
  4419  006D02  C01A  F012         	movff	PWM_generar@PR2cal,??_PWM_generar
  4420  006D06  C01B  F013         	movff	PWM_generar@PR2cal+1,??_PWM_generar+1
  4421  006D0A  C01C  F014         	movff	PWM_generar@PR2cal+2,??_PWM_generar+2
  4422  006D0E  C01D  F015         	movff	PWM_generar@PR2cal+3,??_PWM_generar+3
  4423  006D12  0E03               	movlw	3
  4424  006D14  D005               	goto	u1810
  4425  006D16                     u1815:
  4426  006D16  90D8               	bcf	status,0,c
  4427  006D18  3215               	rrcf	??_PWM_generar+3,f,c
  4428  006D1A  3214               	rrcf	??_PWM_generar+2,f,c
  4429  006D1C  3213               	rrcf	??_PWM_generar+1,f,c
  4430  006D1E  3212               	rrcf	??_PWM_generar,f,c
  4431  006D20                     u1810:
  4432  006D20  2EE8               	decfsz	wreg,f,c
  4433  006D22  D7F9               	goto	u1815
  4434  006D24  C012  F01A         	movff	??_PWM_generar,PWM_generar@PR2cal
  4435  006D28  C013  F01B         	movff	??_PWM_generar+1,PWM_generar@PR2cal+1
  4436  006D2C  C014  F01C         	movff	??_PWM_generar+2,PWM_generar@PR2cal+2
  4437  006D30  C015  F01D         	movff	??_PWM_generar+3,PWM_generar@PR2cal+3
  4438  006D34                     l2531:
  4439  006D34  0E01               	movlw	1
  4440  006D36  6E12               	movwf	??_PWM_generar& (0+255),c
  4441  006D38  0E01               	movlw	1
  4442  006D3A  6E13               	movwf	(??_PWM_generar+1)& (0+255),c
  4443  006D3C  0E00               	movlw	0
  4444  006D3E  6E14               	movwf	(??_PWM_generar+2)& (0+255),c
  4445  006D40  0E00               	movlw	0
  4446  006D42  6E15               	movwf	(??_PWM_generar+3)& (0+255),c
  4447  006D44  5012               	movf	??_PWM_generar,w,c
  4448  006D46  5C1A               	subwf	PWM_generar@PR2cal,w,c
  4449  006D48  5013               	movf	??_PWM_generar+1,w,c
  4450  006D4A  581B               	subwfb	PWM_generar@PR2cal+1,w,c
  4451  006D4C  5014               	movf	??_PWM_generar+2,w,c
  4452  006D4E  581C               	subwfb	PWM_generar@PR2cal+2,w,c
  4453  006D50  5015               	movf	??_PWM_generar+3,w,c
  4454  006D52  581D               	subwfb	PWM_generar@PR2cal+3,w,c
  4455  006D54  B0D8               	btfsc	status,0,c
  4456  006D56  D7C6               	goto	l2527
  4457                           
  4458                           ;PWM.c: 27: }
  4459                           ;PWM.c: 28: PR2cal--;
  4460  006D58  061A               	decf	PWM_generar@PR2cal,f,c
  4461  006D5A  0E00               	movlw	0
  4462  006D5C  5A1B               	subwfb	PWM_generar@PR2cal+1,f,c
  4463  006D5E  5A1C               	subwfb	PWM_generar@PR2cal+2,f,c
  4464  006D60  5A1D               	subwfb	PWM_generar@PR2cal+3,f,c
  4465                           
  4466                           ;PWM.c: 29: PR2=PR2cal;
  4467  006D62  C01A  FFBB         	movff	PWM_generar@PR2cal,4027	;volatile
  4468                           
  4469                           ;PWM.c: 36: unsigned long AuxCCPR2L=PR2cal;
  4470  006D66  C01A  F01E         	movff	PWM_generar@PR2cal,PWM_generar@AuxCCPR2L
  4471  006D6A  C01B  F01F         	movff	PWM_generar@PR2cal+1,PWM_generar@AuxCCPR2L+1
  4472  006D6E  C01C  F020         	movff	PWM_generar@PR2cal+2,PWM_generar@AuxCCPR2L+2
  4473  006D72  C01D  F021         	movff	PWM_generar@PR2cal+3,PWM_generar@AuxCCPR2L+3
  4474                           
  4475                           ;PWM.c: 37: AuxCCPR2L++;
  4476  006D76  0E01               	movlw	1
  4477  006D78  261E               	addwf	PWM_generar@AuxCCPR2L,f,c
  4478  006D7A  0E00               	movlw	0
  4479  006D7C  221F               	addwfc	PWM_generar@AuxCCPR2L+1,f,c
  4480  006D7E  2220               	addwfc	PWM_generar@AuxCCPR2L+2,f,c
  4481  006D80  2221               	addwfc	PWM_generar@AuxCCPR2L+3,f,c
  4482                           
  4483                           ;PWM.c: 38: AuxCCPR2L=AuxCCPR2L*ciclo;
  4484  006D82  C00E  F001         	movff	PWM_generar@ciclo,___lmul@multiplier
  4485  006D86  C00F  F002         	movff	PWM_generar@ciclo+1,___lmul@multiplier+1
  4486  006D8A  6A03               	clrf	___lmul@multiplier+2,c
  4487  006D8C  6A04               	clrf	___lmul@multiplier+3,c
  4488  006D8E  C01E  F005         	movff	PWM_generar@AuxCCPR2L,___lmul@multiplicand
  4489  006D92  C01F  F006         	movff	PWM_generar@AuxCCPR2L+1,___lmul@multiplicand+1
  4490  006D96  C020  F007         	movff	PWM_generar@AuxCCPR2L+2,___lmul@multiplicand+2
  4491  006D9A  C021  F008         	movff	PWM_generar@AuxCCPR2L+3,___lmul@multiplicand+3
  4492  006D9E  ECDB  F030         	call	___lmul	;wreg free
  4493  006DA2  C001  F01E         	movff	?___lmul,PWM_generar@AuxCCPR2L
  4494  006DA6  C002  F01F         	movff	?___lmul+1,PWM_generar@AuxCCPR2L+1
  4495  006DAA  C003  F020         	movff	?___lmul+2,PWM_generar@AuxCCPR2L+2
  4496  006DAE  C004  F021         	movff	?___lmul+3,PWM_generar@AuxCCPR2L+3
  4497                           
  4498                           ;PWM.c: 39: AuxCCPR2L=AuxCCPR2L*4;
  4499  006DB2  C01E  F012         	movff	PWM_generar@AuxCCPR2L,??_PWM_generar
  4500  006DB6  C01F  F013         	movff	PWM_generar@AuxCCPR2L+1,??_PWM_generar+1
  4501  006DBA  C020  F014         	movff	PWM_generar@AuxCCPR2L+2,??_PWM_generar+2
  4502  006DBE  C021  F015         	movff	PWM_generar@AuxCCPR2L+3,??_PWM_generar+3
  4503  006DC2  0E02               	movlw	2
  4504  006DC4                     u1835:
  4505  006DC4  90D8               	bcf	status,0,c
  4506  006DC6  3612               	rlcf	??_PWM_generar,f,c
  4507  006DC8  3613               	rlcf	??_PWM_generar+1,f,c
  4508  006DCA  3614               	rlcf	??_PWM_generar+2,f,c
  4509  006DCC  3615               	rlcf	??_PWM_generar+3,f,c
  4510  006DCE  2EE8               	decfsz	wreg,f,c
  4511  006DD0  D7F9               	goto	u1835
  4512  006DD2  C012  F01E         	movff	??_PWM_generar,PWM_generar@AuxCCPR2L
  4513  006DD6  C013  F01F         	movff	??_PWM_generar+1,PWM_generar@AuxCCPR2L+1
  4514  006DDA  C014  F020         	movff	??_PWM_generar+2,PWM_generar@AuxCCPR2L+2
  4515  006DDE  C015  F021         	movff	??_PWM_generar+3,PWM_generar@AuxCCPR2L+3
  4516                           
  4517                           ;PWM.c: 40: AuxCCPR2L=AuxCCPR2L/100;
  4518  006DE2  C01E  F001         	movff	PWM_generar@AuxCCPR2L,___lldiv@dividend
  4519  006DE6  C01F  F002         	movff	PWM_generar@AuxCCPR2L+1,___lldiv@dividend+1
  4520  006DEA  C020  F003         	movff	PWM_generar@AuxCCPR2L+2,___lldiv@dividend+2
  4521  006DEE  C021  F004         	movff	PWM_generar@AuxCCPR2L+3,___lldiv@dividend+3
  4522  006DF2  0E64               	movlw	100
  4523  006DF4  6E05               	movwf	___lldiv@divisor,c
  4524  006DF6  0E00               	movlw	0
  4525  006DF8  6E06               	movwf	___lldiv@divisor+1,c
  4526  006DFA  0E00               	movlw	0
  4527  006DFC  6E07               	movwf	___lldiv@divisor+2,c
  4528  006DFE  0E00               	movlw	0
  4529  006E00  6E08               	movwf	___lldiv@divisor+3,c
  4530  006E02  EC6B  F031         	call	___lldiv	;wreg free
  4531  006E06  C001  F01E         	movff	?___lldiv,PWM_generar@AuxCCPR2L
  4532  006E0A  C002  F01F         	movff	?___lldiv+1,PWM_generar@AuxCCPR2L+1
  4533  006E0E  C003  F020         	movff	?___lldiv+2,PWM_generar@AuxCCPR2L+2
  4534  006E12  C004  F021         	movff	?___lldiv+3,PWM_generar@AuxCCPR2L+3
  4535                           
  4536                           ;PWM.c: 41: unsigned int AuxCCP2CON= AuxCCPR2L;
  4537  006E16  C01E  F018         	movff	PWM_generar@AuxCCPR2L,PWM_generar@AuxCCP2CON
  4538  006E1A  C01F  F019         	movff	PWM_generar@AuxCCPR2L+1,PWM_generar@AuxCCP2CON+1
  4539                           
  4540                           ;PWM.c: 42: AuxCCP2CON= AuxCCP2CON & 0b00000011 ;
  4541  006E1E  0E03               	movlw	3
  4542  006E20  1418               	andwf	PWM_generar@AuxCCP2CON,w,c
  4543  006E22  6E18               	movwf	PWM_generar@AuxCCP2CON,c
  4544  006E24  6A19               	clrf	PWM_generar@AuxCCP2CON+1,c
  4545                           
  4546                           ;PWM.c: 43: AuxCCP2CON= AuxCCP2CON*16;
  4547  006E26  C018  F012         	movff	PWM_generar@AuxCCP2CON,??_PWM_generar
  4548  006E2A  C019  F013         	movff	PWM_generar@AuxCCP2CON+1,??_PWM_generar+1
  4549  006E2E  3A12               	swapf	??_PWM_generar,f,c
  4550  006E30  3A13               	swapf	??_PWM_generar+1,f,c
  4551  006E32  0EF0               	movlw	240
  4552  006E34  1613               	andwf	??_PWM_generar+1,f,c
  4553  006E36  5012               	movf	??_PWM_generar,w,c
  4554  006E38  0B0F               	andlw	15
  4555  006E3A  1213               	iorwf	??_PWM_generar+1,f,c
  4556  006E3C  0EF0               	movlw	240
  4557  006E3E  1612               	andwf	??_PWM_generar,f,c
  4558  006E40  C012  F018         	movff	??_PWM_generar,PWM_generar@AuxCCP2CON
  4559  006E44  C013  F019         	movff	??_PWM_generar+1,PWM_generar@AuxCCP2CON+1
  4560                           
  4561                           ;PWM.c: 44: CCP2CON= 0b00001100;
  4562  006E48  0E0C               	movlw	12
  4563  006E4A  6E97               	movwf	3991,c	;volatile
  4564                           
  4565                           ;PWM.c: 45: CCP2CON= CCP2CON|AuxCCP2CON;
  4566  006E4C  5097               	movf	3991,w,c
  4567  006E4E  1018               	iorwf	PWM_generar@AuxCCP2CON,w,c
  4568  006E50  6E97               	movwf	3991,c	;volatile
  4569                           
  4570                           ;PWM.c: 46: AuxCCPR2L=AuxCCPR2L/4;
  4571  006E52  C01E  F012         	movff	PWM_generar@AuxCCPR2L,??_PWM_generar
  4572  006E56  C01F  F013         	movff	PWM_generar@AuxCCPR2L+1,??_PWM_generar+1
  4573  006E5A  C020  F014         	movff	PWM_generar@AuxCCPR2L+2,??_PWM_generar+2
  4574  006E5E  C021  F015         	movff	PWM_generar@AuxCCPR2L+3,??_PWM_generar+3
  4575  006E62  0E03               	movlw	3
  4576  006E64  D005               	goto	u1840
  4577  006E66                     u1845:
  4578  006E66  90D8               	bcf	status,0,c
  4579  006E68  3215               	rrcf	??_PWM_generar+3,f,c
  4580  006E6A  3214               	rrcf	??_PWM_generar+2,f,c
  4581  006E6C  3213               	rrcf	??_PWM_generar+1,f,c
  4582  006E6E  3212               	rrcf	??_PWM_generar,f,c
  4583  006E70                     u1840:
  4584  006E70  2EE8               	decfsz	wreg,f,c
  4585  006E72  D7F9               	goto	u1845
  4586  006E74  C012  F01E         	movff	??_PWM_generar,PWM_generar@AuxCCPR2L
  4587  006E78  C013  F01F         	movff	??_PWM_generar+1,PWM_generar@AuxCCPR2L+1
  4588  006E7C  C014  F020         	movff	??_PWM_generar+2,PWM_generar@AuxCCPR2L+2
  4589  006E80  C015  F021         	movff	??_PWM_generar+3,PWM_generar@AuxCCPR2L+3
  4590                           
  4591                           ;PWM.c: 47: CCPR2L=AuxCCPR2L;
  4592  006E84  C01E  FF90         	movff	PWM_generar@AuxCCPR2L,3984	;volatile
  4593                           
  4594                           ;PWM.c: 48: T2CONbits.TMR2ON=1;
  4595  006E88  84BA               	bsf	4026,2,c	;volatile
  4596                           
  4597                           ;PWM.c: 49: TMR2=0;
  4598  006E8A  0E00               	movlw	0
  4599  006E8C  6EBC               	movwf	4028,c	;volatile
  4600  006E8E  0012               	return	
  4601  006E90                     __end_of_PWM_generar:
  4602                           	opt stack 0
  4603                           tblptru	equ	0xFF8
  4604                           tblptrh	equ	0xFF7
  4605                           tblptrl	equ	0xFF6
  4606                           tablat	equ	0xFF5
  4607                           prodh	equ	0xFF4
  4608                           prodl	equ	0xFF3
  4609                           postinc0	equ	0xFEE
  4610                           wreg	equ	0xFE8
  4611                           postinc1	equ	0xFE6
  4612                           postdec1	equ	0xFE5
  4613                           fsr1l	equ	0xFE1
  4614                           postinc2	equ	0xFDE
  4615                           status	equ	0xFD8
  4616                           
  4617 ;; *************** function ___lldiv *****************
  4618 ;; Defined at:
  4619 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/lldiv.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  dividend        4    0[COMRAM] unsigned long 
  4622 ;;  divisor         4    4[COMRAM] unsigned long 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  quotient        4    8[COMRAM] unsigned long 
  4625 ;;  counter         1   12[COMRAM] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  4    0[COMRAM] unsigned long 
  4628 ;; Registers used:
  4629 ;;		wreg, status,2, status,0
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4635 ;;      Params:         8       0       0       0       0       0       0       0       0
  4636 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4638 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4639 ;;Total ram usage:       13 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_PWM_generar
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text6
  4649  0062D6                     __ptext6:
  4650                           	opt stack 0
  4651  0062D6                     ___lldiv:
  4652                           	opt stack 29
  4653                           
  4654                           ;incstack = 0
  4655  0062D6  0E00               	movlw	0
  4656  0062D8  6E09               	movwf	___lldiv@quotient,c
  4657  0062DA  0E00               	movlw	0
  4658  0062DC  6E0A               	movwf	___lldiv@quotient+1,c
  4659  0062DE  0E00               	movlw	0
  4660  0062E0  6E0B               	movwf	___lldiv@quotient+2,c
  4661  0062E2  0E00               	movlw	0
  4662  0062E4  6E0C               	movwf	___lldiv@quotient+3,c
  4663  0062E6  5008               	movf	___lldiv@divisor+3,w,c
  4664  0062E8  1005               	iorwf	___lldiv@divisor,w,c
  4665  0062EA  1006               	iorwf	___lldiv@divisor+1,w,c
  4666  0062EC  1007               	iorwf	___lldiv@divisor+2,w,c
  4667  0062EE  B4D8               	btfsc	status,2,c
  4668  0062F0  D02A               	goto	l767
  4669  0062F2  0E01               	movlw	1
  4670  0062F4  6E0D               	movwf	___lldiv@counter,c
  4671  0062F6  D006               	goto	l2335
  4672  0062F8                     l2333:
  4673  0062F8  90D8               	bcf	status,0,c
  4674  0062FA  3605               	rlcf	___lldiv@divisor,f,c
  4675  0062FC  3606               	rlcf	___lldiv@divisor+1,f,c
  4676  0062FE  3607               	rlcf	___lldiv@divisor+2,f,c
  4677  006300  3608               	rlcf	___lldiv@divisor+3,f,c
  4678  006302  2A0D               	incf	___lldiv@counter,f,c
  4679  006304                     l2335:
  4680  006304  AE08               	btfss	___lldiv@divisor+3,7,c
  4681  006306  D7F8               	goto	l2333
  4682  006308                     l2337:
  4683  006308  90D8               	bcf	status,0,c
  4684  00630A  3609               	rlcf	___lldiv@quotient,f,c
  4685  00630C  360A               	rlcf	___lldiv@quotient+1,f,c
  4686  00630E  360B               	rlcf	___lldiv@quotient+2,f,c
  4687  006310  360C               	rlcf	___lldiv@quotient+3,f,c
  4688  006312  5005               	movf	___lldiv@divisor,w,c
  4689  006314  5C01               	subwf	___lldiv@dividend,w,c
  4690  006316  5006               	movf	___lldiv@divisor+1,w,c
  4691  006318  5802               	subwfb	___lldiv@dividend+1,w,c
  4692  00631A  5007               	movf	___lldiv@divisor+2,w,c
  4693  00631C  5803               	subwfb	___lldiv@dividend+2,w,c
  4694  00631E  5008               	movf	___lldiv@divisor+3,w,c
  4695  006320  5804               	subwfb	___lldiv@dividend+3,w,c
  4696  006322  A0D8               	btfss	status,0,c
  4697  006324  D009               	goto	l2345
  4698  006326  5005               	movf	___lldiv@divisor,w,c
  4699  006328  5E01               	subwf	___lldiv@dividend,f,c
  4700  00632A  5006               	movf	___lldiv@divisor+1,w,c
  4701  00632C  5A02               	subwfb	___lldiv@dividend+1,f,c
  4702  00632E  5007               	movf	___lldiv@divisor+2,w,c
  4703  006330  5A03               	subwfb	___lldiv@dividend+2,f,c
  4704  006332  5008               	movf	___lldiv@divisor+3,w,c
  4705  006334  5A04               	subwfb	___lldiv@dividend+3,f,c
  4706  006336  8009               	bsf	___lldiv@quotient,0,c
  4707  006338                     l2345:
  4708  006338  90D8               	bcf	status,0,c
  4709  00633A  3208               	rrcf	___lldiv@divisor+3,f,c
  4710  00633C  3207               	rrcf	___lldiv@divisor+2,f,c
  4711  00633E  3206               	rrcf	___lldiv@divisor+1,f,c
  4712  006340  3205               	rrcf	___lldiv@divisor,f,c
  4713  006342  2E0D               	decfsz	___lldiv@counter,f,c
  4714  006344  D7E1               	goto	l2337
  4715  006346                     l767:
  4716  006346  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4717  00634A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4718  00634E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4719  006352  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4720  006356  0012               	return	
  4721  006358                     __end_of___lldiv:
  4722                           	opt stack 0
  4723                           tblptru	equ	0xFF8
  4724                           tblptrh	equ	0xFF7
  4725                           tblptrl	equ	0xFF6
  4726                           tablat	equ	0xFF5
  4727                           prodh	equ	0xFF4
  4728                           prodl	equ	0xFF3
  4729                           postinc0	equ	0xFEE
  4730                           wreg	equ	0xFE8
  4731                           postinc1	equ	0xFE6
  4732                           postdec1	equ	0xFE5
  4733                           fsr1l	equ	0xFE1
  4734                           postinc2	equ	0xFDE
  4735                           status	equ	0xFD8
  4736                           
  4737 ;; *************** function _Lcd_Out2 *****************
  4738 ;; Defined at:
  4739 ;;		line 113 in file "LCD.h"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  y               1    wreg     unsigned char 
  4742 ;;  x               1    3[COMRAM] unsigned char 
  4743 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  4744 ;;		 -> STR_76(14), STR_75(5), STR_74(12), STR_73(7), 
  4745 ;;		 -> STR_72(2), STR_71(4), STR_70(10), STR_69(12), 
  4746 ;;		 -> STR_68(12), STR_67(6), STR_66(5), STR_65(5), 
  4747 ;;		 -> STR_64(5), STR_63(6), STR_62(5), STR_61(5), 
  4748 ;;		 -> STR_60(5), STR_59(6), STR_58(5), STR_57(5), 
  4749 ;;		 -> STR_56(5), STR_55(6), STR_54(5), STR_53(5), 
  4750 ;;		 -> STR_52(6), STR_51(5), STR_50(5), STR_49(5), 
  4751 ;;		 -> STR_48(5), STR_47(5), STR_46(5), STR_45(5), 
  4752 ;;		 -> STR_44(5), STR_43(5), STR_42(5), STR_41(5), 
  4753 ;;		 -> STR_40(5), STR_39(5), STR_38(5), STR_37(5), 
  4754 ;;		 -> STR_36(5), STR_35(5), STR_34(5), STR_33(5), 
  4755 ;;		 -> STR_32(5), STR_31(5), STR_30(5), STR_29(5), 
  4756 ;;		 -> STR_28(5), STR_27(5), STR_26(5), STR_25(5), 
  4757 ;;		 -> STR_24(5), STR_23(5), STR_22(5), STR_21(5), 
  4758 ;;		 -> STR_20(5), STR_19(5), STR_18(5), STR_17(5), 
  4759 ;;		 -> STR_16(5), STR_15(9), STR_14(14), STR_13(9), 
  4760 ;;		 -> STR_12(9), STR_11(14), STR_10(9), STR_9(14), 
  4761 ;;		 -> STR_8(12), STR_7(12), STR_6(12), STR_5(12), 
  4762 ;;		 -> STR_4(12), STR_3(7), STR_2(16), STR_1(16), 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  y               1    6[COMRAM] unsigned char 
  4765 ;;  data            1    7[COMRAM] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;		None               void
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4775 ;;      Params:         3       0       0       0       0       0       0       0       0
  4776 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4778 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4779 ;;Total ram usage:        5 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    1
  4782 ;; This function calls:
  4783 ;;		_Lcd_Chr_CP
  4784 ;;		_Lcd_Cmd
  4785 ;; This function is called by:
  4786 ;;		_main
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text7
  4791  00626E                     __ptext7:
  4792                           	opt stack 0
  4793  00626E                     _Lcd_Out2:
  4794                           	opt stack 29
  4795                           
  4796                           ;incstack = 0
  4797                           ;Lcd_Out2@y stored from wreg
  4798  00626E  6E07               	movwf	Lcd_Out2@y,c
  4799                           
  4800                           ;LCD.h: 115: unsigned char data;
  4801                           ;LCD.h: 116: switch (y)
  4802  006270  D00D               	goto	l2417
  4803  006272                     l2407:
  4804  006272  5004               	movf	Lcd_Out2@x,w,c
  4805  006274  0F80               	addlw	128
  4806  006276  D008               	goto	L7
  4807  006278                     l2409:
  4808  006278  5004               	movf	Lcd_Out2@x,w,c
  4809  00627A  0FC0               	addlw	192
  4810  00627C  D005               	goto	L7
  4811  00627E                     l2411:
  4812  00627E  5004               	movf	Lcd_Out2@x,w,c
  4813  006280  0F94               	addlw	148
  4814  006282  D002               	goto	L7
  4815  006284                     l2413:
  4816  006284  5004               	movf	Lcd_Out2@x,w,c
  4817  006286  0FD4               	addlw	212
  4818  006288                     L7:
  4819  006288  6E08               	movwf	Lcd_Out2@data,c
  4820  00628A  D00D               	goto	l2419
  4821  00628C                     l2417:
  4822  00628C  5007               	movf	Lcd_Out2@y,w,c
  4823                           
  4824                           ; Switch size 1, requested type "space"
  4825                           ; Number of cases is 4, Range of values is 1 to 4
  4826                           ; switch strategies available:
  4827                           ; Name         Instructions Cycles
  4828                           ; simple_byte           13     7 (average)
  4829                           ;	Chosen strategy is simple_byte
  4830  00628E  0A01               	xorlw	1	; case 1
  4831  006290  B4D8               	btfsc	status,2,c
  4832  006292  D7EF               	goto	l2407
  4833  006294  0A03               	xorlw	3	; case 2
  4834  006296  B4D8               	btfsc	status,2,c
  4835  006298  D7EF               	goto	l2409
  4836  00629A  0A01               	xorlw	1	; case 3
  4837  00629C  B4D8               	btfsc	status,2,c
  4838  00629E  D7EF               	goto	l2411
  4839  0062A0  0A07               	xorlw	7	; case 4
  4840  0062A2  B4D8               	btfsc	status,2,c
  4841  0062A4  D7EF               	goto	l2413
  4842  0062A6                     l2419:
  4843                           
  4844                           ;LCD.h: 124: Lcd_Cmd(data);
  4845  0062A6  5008               	movf	Lcd_Out2@data,w,c
  4846  0062A8  EC88  F033         	call	_Lcd_Cmd
  4847                           
  4848                           ;LCD.h: 125: while(*buffer)
  4849  0062AC  D00A               	goto	l2425
  4850  0062AE                     l2421:
  4851                           
  4852                           ;LCD.h: 126: {
  4853                           ;LCD.h: 127: Lcd_Chr_CP(*buffer);
  4854  0062AE  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  4855  0062B2  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  4856  0062B6                     	if	0	;tblptru may be non-zero
  4857  0062B6                     	endif
  4858  0062B6                     	if	0	;tblptru may be non-zero
  4859  0062B6                     	endif
  4860  0062B6  0008               	tblrd		*
  4861  0062B8  50F5               	movf	tablat,w,c
  4862  0062BA  ECAF  F034         	call	_Lcd_Chr_CP
  4863                           
  4864                           ;LCD.h: 128: buffer++;
  4865  0062BE  4A05               	infsnz	Lcd_Out2@buffer,f,c
  4866  0062C0  2A06               	incf	Lcd_Out2@buffer+1,f,c
  4867  0062C2                     l2425:
  4868  0062C2  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  4869  0062C6  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  4870  0062CA                     	if	0	;tblptru may be non-zero
  4871  0062CA                     	endif
  4872  0062CA                     	if	0	;tblptru may be non-zero
  4873  0062CA                     	endif
  4874  0062CA  0008               	tblrd		*
  4875  0062CC  50F5               	movf	tablat,w,c
  4876  0062CE  0900               	iorlw	0
  4877  0062D0  B4D8               	btfsc	status,2,c
  4878                           
  4879                           ;LCD.h: 129: }
  4880                           ;LCD.h: 130: return;
  4881  0062D2  0012               	return	
  4882  0062D4  D7EC               	goto	l2421
  4883  0062D6                     __end_of_Lcd_Out2:
  4884                           	opt stack 0
  4885                           tblptru	equ	0xFF8
  4886                           tblptrh	equ	0xFF7
  4887                           tblptrl	equ	0xFF6
  4888                           tablat	equ	0xFF5
  4889                           prodh	equ	0xFF4
  4890                           prodl	equ	0xFF3
  4891                           postinc0	equ	0xFEE
  4892                           wreg	equ	0xFE8
  4893                           postinc1	equ	0xFE6
  4894                           postdec1	equ	0xFE5
  4895                           fsr1l	equ	0xFE1
  4896                           postinc2	equ	0xFDE
  4897                           status	equ	0xFD8
  4898                           
  4899 ;; *************** function _Lcd_Out *****************
  4900 ;; Defined at:
  4901 ;;		line 92 in file "LCD.h"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  y               1    wreg     unsigned char 
  4904 ;;  x               1    3[COMRAM] unsigned char 
  4905 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  4906 ;;		 -> main@cadena(20), 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  y               1    6[COMRAM] unsigned char 
  4909 ;;  data            1    7[COMRAM] unsigned char 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;		None               void
  4912 ;; Registers used:
  4913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4919 ;;      Params:         3       0       0       0       0       0       0       0       0
  4920 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4922 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4923 ;;Total ram usage:        5 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    1
  4926 ;; This function calls:
  4927 ;;		_Lcd_Chr_CP
  4928 ;;		_Lcd_Cmd
  4929 ;; This function is called by:
  4930 ;;		_main
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text8
  4935  00620C                     __ptext8:
  4936                           	opt stack 0
  4937  00620C                     _Lcd_Out:
  4938                           	opt stack 29
  4939                           
  4940                           ;incstack = 0
  4941                           ;Lcd_Out@y stored from wreg
  4942  00620C  6E07               	movwf	Lcd_Out@y,c
  4943                           
  4944                           ;LCD.h: 94: unsigned char data;
  4945                           ;LCD.h: 95: switch (y)
  4946  00620E  D00D               	goto	l2395
  4947  006210                     l2385:
  4948  006210  5004               	movf	Lcd_Out@x,w,c
  4949  006212  0F80               	addlw	128
  4950  006214  D008               	goto	L10
  4951  006216                     l2387:
  4952  006216  5004               	movf	Lcd_Out@x,w,c
  4953  006218  0FC0               	addlw	192
  4954  00621A  D005               	goto	L10
  4955  00621C                     l2389:
  4956  00621C  5004               	movf	Lcd_Out@x,w,c
  4957  00621E  0F94               	addlw	148
  4958  006220  D002               	goto	L10
  4959  006222                     l2391:
  4960  006222  5004               	movf	Lcd_Out@x,w,c
  4961  006224  0FD4               	addlw	212
  4962  006226                     L10:
  4963  006226  6E08               	movwf	Lcd_Out@data,c
  4964  006228  D00D               	goto	l2397
  4965  00622A                     l2395:
  4966  00622A  5007               	movf	Lcd_Out@y,w,c
  4967                           
  4968                           ; Switch size 1, requested type "space"
  4969                           ; Number of cases is 4, Range of values is 1 to 4
  4970                           ; switch strategies available:
  4971                           ; Name         Instructions Cycles
  4972                           ; simple_byte           13     7 (average)
  4973                           ;	Chosen strategy is simple_byte
  4974  00622C  0A01               	xorlw	1	; case 1
  4975  00622E  B4D8               	btfsc	status,2,c
  4976  006230  D7EF               	goto	l2385
  4977  006232  0A03               	xorlw	3	; case 2
  4978  006234  B4D8               	btfsc	status,2,c
  4979  006236  D7EF               	goto	l2387
  4980  006238  0A01               	xorlw	1	; case 3
  4981  00623A  B4D8               	btfsc	status,2,c
  4982  00623C  D7EF               	goto	l2389
  4983  00623E  0A07               	xorlw	7	; case 4
  4984  006240  B4D8               	btfsc	status,2,c
  4985  006242  D7EF               	goto	l2391
  4986  006244                     l2397:
  4987                           
  4988                           ;LCD.h: 103: Lcd_Cmd(data);
  4989  006244  5008               	movf	Lcd_Out@data,w,c
  4990  006246  EC88  F033         	call	_Lcd_Cmd
  4991                           
  4992                           ;LCD.h: 104: while(*buffer)
  4993  00624A  D009               	goto	l2403
  4994  00624C                     l2399:
  4995                           
  4996                           ;LCD.h: 105: {
  4997                           ;LCD.h: 106: Lcd_Chr_CP(*buffer);
  4998  00624C  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  4999  006250  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  5000  006254  50DF               	movf	indf2,w,c
  5001  006256  ECAF  F034         	call	_Lcd_Chr_CP
  5002                           
  5003                           ;LCD.h: 107: buffer++;
  5004  00625A  4A05               	infsnz	Lcd_Out@buffer,f,c
  5005  00625C  2A06               	incf	Lcd_Out@buffer+1,f,c
  5006  00625E                     l2403:
  5007  00625E  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  5008  006262  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  5009  006266  50DF               	movf	indf2,w,c
  5010  006268  B4D8               	btfsc	status,2,c
  5011                           
  5012                           ;LCD.h: 108: }
  5013                           ;LCD.h: 109: return;
  5014  00626A  0012               	return	
  5015  00626C  D7EF               	goto	l2399
  5016  00626E                     __end_of_Lcd_Out:
  5017                           	opt stack 0
  5018                           tblptru	equ	0xFF8
  5019                           tblptrh	equ	0xFF7
  5020                           tblptrl	equ	0xFF6
  5021                           tablat	equ	0xFF5
  5022                           prodh	equ	0xFF4
  5023                           prodl	equ	0xFF3
  5024                           postinc0	equ	0xFEE
  5025                           wreg	equ	0xFE8
  5026                           postinc1	equ	0xFE6
  5027                           postdec1	equ	0xFE5
  5028                           fsr1l	equ	0xFE1
  5029                           indf2	equ	0xFDF
  5030                           postinc2	equ	0xFDE
  5031                           fsr2h	equ	0xFDA
  5032                           fsr2l	equ	0xFD9
  5033                           status	equ	0xFD8
  5034                           
  5035 ;; *************** function _Lcd_Chr_CP *****************
  5036 ;; Defined at:
  5037 ;;		line 134 in file "LCD.h"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  data            1    wreg     unsigned char 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;  data            1    2[COMRAM] unsigned char 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;		None               void
  5044 ;; Registers used:
  5045 ;;		wreg, status,2, status,0
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5051 ;;      Params:         0       0       0       0       0       0       0       0       0
  5052 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5053 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5054 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5055 ;;Total ram usage:        3 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_Lcd_Out
  5061 ;;		_Lcd_Out2
  5062 ;;		_main
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text9
  5067  00695E                     __ptext9:
  5068                           	opt stack 0
  5069  00695E                     _Lcd_Chr_CP:
  5070                           	opt stack 29
  5071                           
  5072                           ;incstack = 0
  5073                           ;Lcd_Chr_CP@data stored from wreg
  5074  00695E  6E03               	movwf	Lcd_Chr_CP@data,c
  5075                           
  5076                           ;LCD.h: 135: PORTDbits.RD2 = 0; PORTDbits.RD0 = 1;
  5077  006960  9483               	bcf	3971,2,c	;volatile
  5078  006962  8083               	bsf	3971,0,c	;volatile
  5079                           
  5080                           ;LCD.h: 136: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  5081  006964  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  5082  006966  AE03               	btfss	Lcd_Chr_CP@data,7,c
  5083  006968  D001               	bra	u1445
  5084  00696A  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  5085  00696C                     u1445:
  5086  00696C  0E01               	movlw	1
  5087  00696E  1601               	andwf	??_Lcd_Chr_CP,f,c
  5088  006970  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5089  006972  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5090  006974  5083               	movf	3971,w,c	;volatile
  5091  006976  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5092  006978  0B7F               	andlw	-129
  5093  00697A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5094  00697C  6E83               	movwf	3971,c	;volatile
  5095  00697E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5096  006982  0E06               	movlw	6
  5097  006984  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  5098  006986                     u1455:
  5099  006986  90D8               	bcf	status,0,c
  5100  006988  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5101  00698A  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  5102  00698C  D7FC               	goto	u1455
  5103  00698E  0E01               	movlw	1
  5104  006990  1601               	andwf	??_Lcd_Chr_CP,f,c
  5105  006992  3A01               	swapf	??_Lcd_Chr_CP,f,c
  5106  006994  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5107  006996  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5108  006998  5083               	movf	3971,w,c	;volatile
  5109  00699A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5110  00699C  0BBF               	andlw	-65
  5111  00699E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5112  0069A0  6E83               	movwf	3971,c	;volatile
  5113                           
  5114                           ;LCD.h: 137: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  5115  0069A2  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5116  0069A6  0E05               	movlw	5
  5117  0069A8  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  5118  0069AA                     u1465:
  5119  0069AA  90D8               	bcf	status,0,c
  5120  0069AC  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5121  0069AE  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  5122  0069B0  D7FC               	goto	u1465
  5123  0069B2  0E01               	movlw	1
  5124  0069B4  1601               	andwf	??_Lcd_Chr_CP,f,c
  5125  0069B6  3A01               	swapf	??_Lcd_Chr_CP,f,c
  5126  0069B8  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5127  0069BA  5083               	movf	3971,w,c	;volatile
  5128  0069BC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5129  0069BE  0BDF               	andlw	-33
  5130  0069C0  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5131  0069C2  6E83               	movwf	3971,c	;volatile
  5132  0069C4  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5133  0069C8  3A01               	swapf	??_Lcd_Chr_CP,f,c
  5134  0069CA  0E0F               	movlw	15
  5135  0069CC  1601               	andwf	??_Lcd_Chr_CP,f,c
  5136  0069CE  0E01               	movlw	1
  5137  0069D0  1601               	andwf	??_Lcd_Chr_CP,f,c
  5138  0069D2  3A01               	swapf	??_Lcd_Chr_CP,f,c
  5139  0069D4  5083               	movf	3971,w,c	;volatile
  5140  0069D6  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5141  0069D8  0BEF               	andlw	-17
  5142  0069DA  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5143  0069DC  6E83               	movwf	3971,c	;volatile
  5144                           
  5145                           ;LCD.h: 138: _delay((unsigned long)((10)*(4000000/4000000.0)));
  5146  0069DE  0E03               	movlw	3
  5147  0069E0                     u3617:
  5148  0069E0  2EE8               	decfsz	wreg,f,c
  5149  0069E2  D7FE               	goto	u3617
  5150  0069E4  F000               	nop	
  5151                           
  5152                           ;LCD.h: 139: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  5153  0069E6  8483               	bsf	3971,2,c	;volatile
  5154  0069E8  F000               	nop	
  5155  0069EA  D000               	nop2		;2 cycle nop
  5156  0069EC  D000               	nop2		;2 cycle nop
  5157  0069EE  9483               	bcf	3971,2,c	;volatile
  5158                           
  5159                           ;LCD.h: 140: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  5160  0069F0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5161  0069F4  90D8               	bcf	status,0,c
  5162  0069F6  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5163  0069F8  90D8               	bcf	status,0,c
  5164  0069FA  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5165  0069FC  90D8               	bcf	status,0,c
  5166  0069FE  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5167  006A00  0E01               	movlw	1
  5168  006A02  1601               	andwf	??_Lcd_Chr_CP,f,c
  5169  006A04  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5170  006A06  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5171  006A08  5083               	movf	3971,w,c	;volatile
  5172  006A0A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5173  006A0C  0B7F               	andlw	-129
  5174  006A0E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5175  006A10  6E83               	movwf	3971,c	;volatile
  5176  006A12  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5177  006A16  90D8               	bcf	status,0,c
  5178  006A18  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5179  006A1A  90D8               	bcf	status,0,c
  5180  006A1C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5181  006A1E  0E01               	movlw	1
  5182  006A20  1601               	andwf	??_Lcd_Chr_CP,f,c
  5183  006A22  3A01               	swapf	??_Lcd_Chr_CP,f,c
  5184  006A24  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5185  006A26  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5186  006A28  5083               	movf	3971,w,c	;volatile
  5187  006A2A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5188  006A2C  0BBF               	andlw	-65
  5189  006A2E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5190  006A30  6E83               	movwf	3971,c	;volatile
  5191                           
  5192                           ;LCD.h: 141: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  5193  006A32  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5194  006A36  90D8               	bcf	status,0,c
  5195  006A38  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5196  006A3A  0E01               	movlw	1
  5197  006A3C  1601               	andwf	??_Lcd_Chr_CP,f,c
  5198  006A3E  3A01               	swapf	??_Lcd_Chr_CP,f,c
  5199  006A40  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5200  006A42  5083               	movf	3971,w,c	;volatile
  5201  006A44  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5202  006A46  0BDF               	andlw	-33
  5203  006A48  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5204  006A4A  6E83               	movwf	3971,c	;volatile
  5205  006A4C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5206  006A50  0E01               	movlw	1
  5207  006A52  1601               	andwf	??_Lcd_Chr_CP,f,c
  5208  006A54  3A01               	swapf	??_Lcd_Chr_CP,f,c
  5209  006A56  5083               	movf	3971,w,c	;volatile
  5210  006A58  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5211  006A5A  0BEF               	andlw	-17
  5212  006A5C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5213  006A5E  6E83               	movwf	3971,c	;volatile
  5214                           
  5215                           ;LCD.h: 142: _delay((unsigned long)((10)*(4000000/4000000.0)));
  5216  006A60  0E03               	movlw	3
  5217  006A62                     u3627:
  5218  006A62  2EE8               	decfsz	wreg,f,c
  5219  006A64  D7FE               	goto	u3627
  5220  006A66  F000               	nop	
  5221                           
  5222                           ;LCD.h: 143: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  5223  006A68  8483               	bsf	3971,2,c	;volatile
  5224  006A6A  F000               	nop	
  5225  006A6C  D000               	nop2		;2 cycle nop
  5226  006A6E  D000               	nop2		;2 cycle nop
  5227  006A70  9483               	bcf	3971,2,c	;volatile
  5228                           
  5229                           ;LCD.h: 144: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned long)((5
      +                          500)*(4000000/4000000.0)));
  5230  006A72  F000               	nop	
  5231  006A74  D000               	nop2		;2 cycle nop
  5232  006A76  D000               	nop2		;2 cycle nop
  5233  006A78  0E08               	movlw	8
  5234  006A7A  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  5235  006A7C  0E23               	movlw	35
  5236  006A7E                     u3637:
  5237  006A7E  2EE8               	decfsz	wreg,f,c
  5238  006A80  D7FE               	goto	u3637
  5239  006A82  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  5240  006A84  D7FC               	goto	u3637
  5241  006A86  F000               	nop	
  5242  006A88  0012               	return	
  5243  006A8A                     __end_of_Lcd_Chr_CP:
  5244                           	opt stack 0
  5245                           tblptru	equ	0xFF8
  5246                           tblptrh	equ	0xFF7
  5247                           tblptrl	equ	0xFF6
  5248                           tablat	equ	0xFF5
  5249                           prodh	equ	0xFF4
  5250                           prodl	equ	0xFF3
  5251                           postinc0	equ	0xFEE
  5252                           wreg	equ	0xFE8
  5253                           postinc1	equ	0xFE6
  5254                           postdec1	equ	0xFE5
  5255                           fsr1l	equ	0xFE1
  5256                           indf2	equ	0xFDF
  5257                           postinc2	equ	0xFDE
  5258                           fsr2h	equ	0xFDA
  5259                           fsr2l	equ	0xFD9
  5260                           status	equ	0xFD8
  5261                           
  5262 ;; *************** function _Lcd_Init *****************
  5263 ;; Defined at:
  5264 ;;		line 48 in file "LCD.h"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;		None
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  data            1    4[COMRAM] unsigned char 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;		None               void
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0, cstack
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5278 ;;      Params:         0       0       0       0       0       0       0       0       0
  5279 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5280 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5281 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5282 ;;Total ram usage:        2 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:    1
  5285 ;; This function calls:
  5286 ;;		_Lcd_Cmd
  5287 ;; This function is called by:
  5288 ;;		_main
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text10
  5293  006836                     __ptext10:
  5294                           	opt stack 0
  5295  006836                     _Lcd_Init:
  5296                           	opt stack 29
  5297                           
  5298                           ;LCD.h: 49: unsigned char data;
  5299                           ;LCD.h: 50: TRISDbits.TRISD7 = 0;
  5300                           
  5301                           ;incstack = 0
  5302  006836  9E95               	bcf	3989,7,c	;volatile
  5303                           
  5304                           ;LCD.h: 51: TRISDbits.TRISD6 = 0;
  5305  006838  9C95               	bcf	3989,6,c	;volatile
  5306                           
  5307                           ;LCD.h: 52: TRISDbits.TRISD5 = 0;
  5308  00683A  9A95               	bcf	3989,5,c	;volatile
  5309                           
  5310                           ;LCD.h: 53: TRISDbits.TRISD4 = 0;
  5311  00683C  9895               	bcf	3989,4,c	;volatile
  5312                           
  5313                           ;LCD.h: 54: TRISDbits.TRISD2 = 0;
  5314  00683E  9495               	bcf	3989,2,c	;volatile
  5315                           
  5316                           ;LCD.h: 55: TRISDbits.TRISD0 = 0;
  5317  006840  9095               	bcf	3989,0,c	;volatile
  5318                           
  5319                           ;LCD.h: 56: TRISDbits.TRISD1 = 0;
  5320  006842  9295               	bcf	3989,1,c	;volatile
  5321                           
  5322                           ;LCD.h: 57: PORTDbits.RD7 = 0;
  5323  006844  9E83               	bcf	3971,7,c	;volatile
  5324                           
  5325                           ;LCD.h: 58: PORTDbits.RD6 = 0;
  5326  006846  9C83               	bcf	3971,6,c	;volatile
  5327                           
  5328                           ;LCD.h: 59: PORTDbits.RD5 = 0;
  5329  006848  9A83               	bcf	3971,5,c	;volatile
  5330                           
  5331                           ;LCD.h: 60: PORTDbits.RD4 = 0;
  5332  00684A  9883               	bcf	3971,4,c	;volatile
  5333                           
  5334                           ;LCD.h: 61: PORTDbits.RD2 = 0;
  5335  00684C  9483               	bcf	3971,2,c	;volatile
  5336                           
  5337                           ;LCD.h: 62: PORTDbits.RD0 = 0;
  5338  00684E  9083               	bcf	3971,0,c	;volatile
  5339                           
  5340                           ;LCD.h: 63: PORTDbits.RD1 = 0;
  5341  006850  9283               	bcf	3971,1,c	;volatile
  5342                           
  5343                           ;LCD.h: 64: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5344  006852  0E08               	movlw	8
  5345  006854  6E04               	movwf	??_Lcd_Init& (0+255),c
  5346  006856  0E23               	movlw	35
  5347  006858                     u3647:
  5348  006858  2EE8               	decfsz	wreg,f,c
  5349  00685A  D7FE               	goto	u3647
  5350  00685C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  5351  00685E  D7FC               	goto	u3647
  5352  006860  F000               	nop	
  5353                           
  5354                           ;LCD.h: 65: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5355  006862  0E08               	movlw	8
  5356  006864  6E04               	movwf	??_Lcd_Init& (0+255),c
  5357  006866  0E23               	movlw	35
  5358  006868                     u3657:
  5359  006868  2EE8               	decfsz	wreg,f,c
  5360  00686A  D7FE               	goto	u3657
  5361  00686C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  5362  00686E  D7FC               	goto	u3657
  5363  006870  F000               	nop	
  5364                           
  5365                           ;LCD.h: 66: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5366  006872  0E08               	movlw	8
  5367  006874  6E04               	movwf	??_Lcd_Init& (0+255),c
  5368  006876  0E23               	movlw	35
  5369  006878                     u3667:
  5370  006878  2EE8               	decfsz	wreg,f,c
  5371  00687A  D7FE               	goto	u3667
  5372  00687C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  5373  00687E  D7FC               	goto	u3667
  5374  006880  F000               	nop	
  5375                           
  5376                           ;LCD.h: 67: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5377  006882  0E08               	movlw	8
  5378  006884  6E04               	movwf	??_Lcd_Init& (0+255),c
  5379  006886  0E23               	movlw	35
  5380  006888                     u3677:
  5381  006888  2EE8               	decfsz	wreg,f,c
  5382  00688A  D7FE               	goto	u3677
  5383  00688C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  5384  00688E  D7FC               	goto	u3677
  5385  006890  F000               	nop	
  5386                           
  5387                           ;LCD.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5388  006892  0E08               	movlw	8
  5389  006894  6E04               	movwf	??_Lcd_Init& (0+255),c
  5390  006896  0E23               	movlw	35
  5391  006898                     u3687:
  5392  006898  2EE8               	decfsz	wreg,f,c
  5393  00689A  D7FE               	goto	u3687
  5394  00689C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  5395  00689E  D7FC               	goto	u3687
  5396  0068A0  F000               	nop	
  5397                           
  5398                           ;LCD.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5399  0068A2  0E08               	movlw	8
  5400  0068A4  6E04               	movwf	??_Lcd_Init& (0+255),c
  5401  0068A6  0E23               	movlw	35
  5402  0068A8                     u3697:
  5403  0068A8  2EE8               	decfsz	wreg,f,c
  5404  0068AA  D7FE               	goto	u3697
  5405  0068AC  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  5406  0068AE  D7FC               	goto	u3697
  5407  0068B0  F000               	nop	
  5408                           
  5409                           ;LCD.h: 70: for(data = 1; data < 4; data ++)
  5410  0068B2  0E01               	movlw	1
  5411  0068B4  6E05               	movwf	Lcd_Init@data,c
  5412  0068B6  D01E               	goto	L11
  5413  0068B8                     l27:
  5414                           
  5415                           ;LCD.h: 71: {
  5416                           ;LCD.h: 72: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD2 = 0;
  5417  0068B8  9E83               	bcf	3971,7,c	;volatile
  5418  0068BA  9C83               	bcf	3971,6,c	;volatile
  5419  0068BC  8A83               	bsf	3971,5,c	;volatile
  5420  0068BE  8883               	bsf	3971,4,c	;volatile
  5421  0068C0  9483               	bcf	3971,2,c	;volatile
  5422                           
  5423                           ;LCD.h: 73: PORTDbits.RD0 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; 
      +                          PORTDbits.RD4 = 1;
  5424  0068C2  9083               	bcf	3971,0,c	;volatile
  5425  0068C4  9E83               	bcf	3971,7,c	;volatile
  5426  0068C6  9C83               	bcf	3971,6,c	;volatile
  5427  0068C8  8A83               	bsf	3971,5,c	;volatile
  5428  0068CA  8883               	bsf	3971,4,c	;volatile
  5429                           
  5430                           ;LCD.h: 74: PORTDbits.RD2 = 1; PORTDbits.RD0 = 0;
  5431  0068CC  8483               	bsf	3971,2,c	;volatile
  5432  0068CE  9083               	bcf	3971,0,c	;volatile
  5433                           
  5434                           ;LCD.h: 75: _delay((unsigned long)((5)*(4000000/4000000.0)));
  5435  0068D0  F000               	nop	
  5436  0068D2  D000               	nop2		;2 cycle nop
  5437  0068D4  D000               	nop2		;2 cycle nop
  5438                           
  5439                           ;LCD.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD2 = 0;
  5440  0068D6  9E83               	bcf	3971,7,c	;volatile
  5441  0068D8  9C83               	bcf	3971,6,c	;volatile
  5442  0068DA  8A83               	bsf	3971,5,c	;volatile
  5443  0068DC  8883               	bsf	3971,4,c	;volatile
  5444  0068DE  9483               	bcf	3971,2,c	;volatile
  5445                           
  5446                           ;LCD.h: 77: PORTDbits.RD0 = 0;
  5447  0068E0  9083               	bcf	3971,0,c	;volatile
  5448                           
  5449                           ;LCD.h: 78: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5450  0068E2  0E08               	movlw	8
  5451  0068E4  6E04               	movwf	??_Lcd_Init& (0+255),c
  5452  0068E6  0E23               	movlw	35
  5453  0068E8                     u3707:
  5454  0068E8  2EE8               	decfsz	wreg,f,c
  5455  0068EA  D7FE               	goto	u3707
  5456  0068EC  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  5457  0068EE  D7FC               	goto	u3707
  5458  0068F0  F000               	nop	
  5459  0068F2  2A05               	incf	Lcd_Init@data,f,c
  5460  0068F4                     L11:
  5461  0068F4  0E03               	movlw	3
  5462  0068F6  6405               	cpfsgt	Lcd_Init@data,c
  5463  0068F8  D7DF               	goto	l27
  5464                           
  5465                           ;LCD.h: 79: }
  5466                           ;LCD.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  5467  0068FA  9E83               	bcf	3971,7,c	;volatile
  5468  0068FC  9C83               	bcf	3971,6,c	;volatile
  5469  0068FE  8A83               	bsf	3971,5,c	;volatile
  5470  006900  9883               	bcf	3971,4,c	;volatile
  5471  006902  9483               	bcf	3971,2,c	;volatile
  5472  006904  9083               	bcf	3971,0,c	;volatile
  5473                           
  5474                           ;LCD.h: 81: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 1; PORTDbits.RD0 = 0;
  5475  006906  9E83               	bcf	3971,7,c	;volatile
  5476  006908  9C83               	bcf	3971,6,c	;volatile
  5477  00690A  8A83               	bsf	3971,5,c	;volatile
  5478  00690C  9883               	bcf	3971,4,c	;volatile
  5479  00690E  8483               	bsf	3971,2,c	;volatile
  5480  006910  9083               	bcf	3971,0,c	;volatile
  5481                           
  5482                           ;LCD.h: 82: _delay((unsigned long)((5)*(4000000/4000000.0)));
  5483  006912  F000               	nop	
  5484  006914  D000               	nop2		;2 cycle nop
  5485  006916  D000               	nop2		;2 cycle nop
  5486                           
  5487                           ;LCD.h: 83: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  5488  006918  9E83               	bcf	3971,7,c	;volatile
  5489  00691A  9C83               	bcf	3971,6,c	;volatile
  5490  00691C  8A83               	bsf	3971,5,c	;volatile
  5491  00691E  9883               	bcf	3971,4,c	;volatile
  5492  006920  9483               	bcf	3971,2,c	;volatile
  5493  006922  9083               	bcf	3971,0,c	;volatile
  5494                           
  5495                           ;LCD.h: 84: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5496  006924  0E08               	movlw	8
  5497  006926  6E04               	movwf	??_Lcd_Init& (0+255),c
  5498  006928  0E23               	movlw	35
  5499  00692A                     u3717:
  5500  00692A  2EE8               	decfsz	wreg,f,c
  5501  00692C  D7FE               	goto	u3717
  5502  00692E  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  5503  006930  D7FC               	goto	u3717
  5504  006932  F000               	nop	
  5505                           
  5506                           ;LCD.h: 85: data = 40; Lcd_Cmd(data);
  5507  006934  0E28               	movlw	40
  5508  006936  6E05               	movwf	Lcd_Init@data,c
  5509  006938  5005               	movf	Lcd_Init@data,w,c
  5510  00693A  EC88  F033         	call	_Lcd_Cmd
  5511                           
  5512                           ;LCD.h: 86: data = 16; Lcd_Cmd(data);
  5513  00693E  0E10               	movlw	16
  5514  006940  6E05               	movwf	Lcd_Init@data,c
  5515  006942  5005               	movf	Lcd_Init@data,w,c
  5516  006944  EC88  F033         	call	_Lcd_Cmd
  5517                           
  5518                           ;LCD.h: 87: data = 1; Lcd_Cmd(data);
  5519  006948  0E01               	movlw	1
  5520  00694A  6E05               	movwf	Lcd_Init@data,c
  5521  00694C  5005               	movf	Lcd_Init@data,w,c
  5522  00694E  EC88  F033         	call	_Lcd_Cmd
  5523                           
  5524                           ;LCD.h: 88: data = 15; Lcd_Cmd(data);
  5525  006952  0E0F               	movlw	15
  5526  006954  6E05               	movwf	Lcd_Init@data,c
  5527  006956  5005               	movf	Lcd_Init@data,w,c
  5528  006958  EC88  F033         	call	_Lcd_Cmd
  5529  00695C  0012               	return	
  5530  00695E                     __end_of_Lcd_Init:
  5531                           	opt stack 0
  5532                           tblptru	equ	0xFF8
  5533                           tblptrh	equ	0xFF7
  5534                           tblptrl	equ	0xFF6
  5535                           tablat	equ	0xFF5
  5536                           prodh	equ	0xFF4
  5537                           prodl	equ	0xFF3
  5538                           postinc0	equ	0xFEE
  5539                           wreg	equ	0xFE8
  5540                           postinc1	equ	0xFE6
  5541                           postdec1	equ	0xFE5
  5542                           fsr1l	equ	0xFE1
  5543                           indf2	equ	0xFDF
  5544                           postinc2	equ	0xFDE
  5545                           fsr2h	equ	0xFDA
  5546                           fsr2l	equ	0xFD9
  5547                           status	equ	0xFD8
  5548                           
  5549 ;; *************** function _Lcd_Cmd *****************
  5550 ;; Defined at:
  5551 ;;		line 148 in file "LCD.h"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  data            1    wreg     unsigned char 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;  data            1    2[COMRAM] unsigned char 
  5556 ;; Return value:  Size  Location     Type
  5557 ;;		None               void
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5565 ;;      Params:         0       0       0       0       0       0       0       0       0
  5566 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5567 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5568 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5569 ;;Total ram usage:        3 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_Lcd_Init
  5575 ;;		_Lcd_Out
  5576 ;;		_Lcd_Out2
  5577 ;;		_lcd_goto
  5578 ;;		_main
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text11
  5583  006710                     __ptext11:
  5584                           	opt stack 0
  5585  006710                     _Lcd_Cmd:
  5586                           	opt stack 29
  5587                           
  5588                           ;incstack = 0
  5589                           ;Lcd_Cmd@data stored from wreg
  5590  006710  6E03               	movwf	Lcd_Cmd@data,c
  5591                           
  5592                           ;LCD.h: 149: PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  5593  006712  9483               	bcf	3971,2,c	;volatile
  5594  006714  9083               	bcf	3971,0,c	;volatile
  5595                           
  5596                           ;LCD.h: 150: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  5597  006716  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  5598  006718  AE03               	btfss	Lcd_Cmd@data,7,c
  5599  00671A  D001               	bra	u1415
  5600  00671C  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  5601  00671E                     u1415:
  5602  00671E  0E01               	movlw	1
  5603  006720  1601               	andwf	??_Lcd_Cmd,f,c
  5604  006722  3201               	rrcf	??_Lcd_Cmd,f,c
  5605  006724  3201               	rrcf	??_Lcd_Cmd,f,c
  5606  006726  5083               	movf	3971,w,c	;volatile
  5607  006728  1801               	xorwf	??_Lcd_Cmd,w,c
  5608  00672A  0B7F               	andlw	-129
  5609  00672C  1801               	xorwf	??_Lcd_Cmd,w,c
  5610  00672E  6E83               	movwf	3971,c	;volatile
  5611  006730  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  5612  006734  0E06               	movlw	6
  5613  006736  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  5614  006738                     u1425:
  5615  006738  90D8               	bcf	status,0,c
  5616  00673A  3201               	rrcf	??_Lcd_Cmd,f,c
  5617  00673C  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  5618  00673E  D7FC               	goto	u1425
  5619  006740  0E01               	movlw	1
  5620  006742  1601               	andwf	??_Lcd_Cmd,f,c
  5621  006744  3A01               	swapf	??_Lcd_Cmd,f,c
  5622  006746  4601               	rlncf	??_Lcd_Cmd,f,c
  5623  006748  4601               	rlncf	??_Lcd_Cmd,f,c
  5624  00674A  5083               	movf	3971,w,c	;volatile
  5625  00674C  1801               	xorwf	??_Lcd_Cmd,w,c
  5626  00674E  0BBF               	andlw	-65
  5627  006750  1801               	xorwf	??_Lcd_Cmd,w,c
  5628  006752  6E83               	movwf	3971,c	;volatile
  5629                           
  5630                           ;LCD.h: 151: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  5631  006754  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  5632  006758  0E05               	movlw	5
  5633  00675A  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  5634  00675C                     u1435:
  5635  00675C  90D8               	bcf	status,0,c
  5636  00675E  3201               	rrcf	??_Lcd_Cmd,f,c
  5637  006760  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  5638  006762  D7FC               	goto	u1435
  5639  006764  0E01               	movlw	1
  5640  006766  1601               	andwf	??_Lcd_Cmd,f,c
  5641  006768  3A01               	swapf	??_Lcd_Cmd,f,c
  5642  00676A  4601               	rlncf	??_Lcd_Cmd,f,c
  5643  00676C  5083               	movf	3971,w,c	;volatile
  5644  00676E  1801               	xorwf	??_Lcd_Cmd,w,c
  5645  006770  0BDF               	andlw	-33
  5646  006772  1801               	xorwf	??_Lcd_Cmd,w,c
  5647  006774  6E83               	movwf	3971,c	;volatile
  5648  006776  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  5649  00677A  3A01               	swapf	??_Lcd_Cmd,f,c
  5650  00677C  0E0F               	movlw	15
  5651  00677E  1601               	andwf	??_Lcd_Cmd,f,c
  5652  006780  0E01               	movlw	1
  5653  006782  1601               	andwf	??_Lcd_Cmd,f,c
  5654  006784  3A01               	swapf	??_Lcd_Cmd,f,c
  5655  006786  5083               	movf	3971,w,c	;volatile
  5656  006788  1801               	xorwf	??_Lcd_Cmd,w,c
  5657  00678A  0BEF               	andlw	-17
  5658  00678C  1801               	xorwf	??_Lcd_Cmd,w,c
  5659  00678E  6E83               	movwf	3971,c	;volatile
  5660                           
  5661                           ;LCD.h: 152: _delay((unsigned long)((10)*(4000000/4000000.0)));
  5662  006790  0E03               	movlw	3
  5663  006792                     u3727:
  5664  006792  2EE8               	decfsz	wreg,f,c
  5665  006794  D7FE               	goto	u3727
  5666  006796  F000               	nop	
  5667                           
  5668                           ;LCD.h: 153: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  5669  006798  8483               	bsf	3971,2,c	;volatile
  5670  00679A  F000               	nop	
  5671  00679C  D000               	nop2		;2 cycle nop
  5672  00679E  D000               	nop2		;2 cycle nop
  5673  0067A0  9483               	bcf	3971,2,c	;volatile
  5674                           
  5675                           ;LCD.h: 154: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  5676  0067A2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  5677  0067A6  90D8               	bcf	status,0,c
  5678  0067A8  3201               	rrcf	??_Lcd_Cmd,f,c
  5679  0067AA  90D8               	bcf	status,0,c
  5680  0067AC  3201               	rrcf	??_Lcd_Cmd,f,c
  5681  0067AE  90D8               	bcf	status,0,c
  5682  0067B0  3201               	rrcf	??_Lcd_Cmd,f,c
  5683  0067B2  0E01               	movlw	1
  5684  0067B4  1601               	andwf	??_Lcd_Cmd,f,c
  5685  0067B6  3201               	rrcf	??_Lcd_Cmd,f,c
  5686  0067B8  3201               	rrcf	??_Lcd_Cmd,f,c
  5687  0067BA  5083               	movf	3971,w,c	;volatile
  5688  0067BC  1801               	xorwf	??_Lcd_Cmd,w,c
  5689  0067BE  0B7F               	andlw	-129
  5690  0067C0  1801               	xorwf	??_Lcd_Cmd,w,c
  5691  0067C2  6E83               	movwf	3971,c	;volatile
  5692  0067C4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  5693  0067C8  90D8               	bcf	status,0,c
  5694  0067CA  3201               	rrcf	??_Lcd_Cmd,f,c
  5695  0067CC  90D8               	bcf	status,0,c
  5696  0067CE  3201               	rrcf	??_Lcd_Cmd,f,c
  5697  0067D0  0E01               	movlw	1
  5698  0067D2  1601               	andwf	??_Lcd_Cmd,f,c
  5699  0067D4  3A01               	swapf	??_Lcd_Cmd,f,c
  5700  0067D6  4601               	rlncf	??_Lcd_Cmd,f,c
  5701  0067D8  4601               	rlncf	??_Lcd_Cmd,f,c
  5702  0067DA  5083               	movf	3971,w,c	;volatile
  5703  0067DC  1801               	xorwf	??_Lcd_Cmd,w,c
  5704  0067DE  0BBF               	andlw	-65
  5705  0067E0  1801               	xorwf	??_Lcd_Cmd,w,c
  5706  0067E2  6E83               	movwf	3971,c	;volatile
  5707                           
  5708                           ;LCD.h: 155: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  5709  0067E4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  5710  0067E8  90D8               	bcf	status,0,c
  5711  0067EA  3201               	rrcf	??_Lcd_Cmd,f,c
  5712  0067EC  0E01               	movlw	1
  5713  0067EE  1601               	andwf	??_Lcd_Cmd,f,c
  5714  0067F0  3A01               	swapf	??_Lcd_Cmd,f,c
  5715  0067F2  4601               	rlncf	??_Lcd_Cmd,f,c
  5716  0067F4  5083               	movf	3971,w,c	;volatile
  5717  0067F6  1801               	xorwf	??_Lcd_Cmd,w,c
  5718  0067F8  0BDF               	andlw	-33
  5719  0067FA  1801               	xorwf	??_Lcd_Cmd,w,c
  5720  0067FC  6E83               	movwf	3971,c	;volatile
  5721  0067FE  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  5722  006802  0E01               	movlw	1
  5723  006804  1601               	andwf	??_Lcd_Cmd,f,c
  5724  006806  3A01               	swapf	??_Lcd_Cmd,f,c
  5725  006808  5083               	movf	3971,w,c	;volatile
  5726  00680A  1801               	xorwf	??_Lcd_Cmd,w,c
  5727  00680C  0BEF               	andlw	-17
  5728  00680E  1801               	xorwf	??_Lcd_Cmd,w,c
  5729  006810  6E83               	movwf	3971,c	;volatile
  5730                           
  5731                           ;LCD.h: 156: _delay((unsigned long)((10)*(4000000/4000000.0)));
  5732  006812  0E03               	movlw	3
  5733  006814                     u3737:
  5734  006814  2EE8               	decfsz	wreg,f,c
  5735  006816  D7FE               	goto	u3737
  5736  006818  F000               	nop	
  5737                           
  5738                           ;LCD.h: 157: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  5739  00681A  8483               	bsf	3971,2,c	;volatile
  5740  00681C  F000               	nop	
  5741  00681E  D000               	nop2		;2 cycle nop
  5742  006820  D000               	nop2		;2 cycle nop
  5743  006822  9483               	bcf	3971,2,c	;volatile
  5744                           
  5745                           ;LCD.h: 158: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5746  006824  0E08               	movlw	8
  5747  006826  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  5748  006828  0E23               	movlw	35
  5749  00682A                     u3747:
  5750  00682A  2EE8               	decfsz	wreg,f,c
  5751  00682C  D7FE               	goto	u3747
  5752  00682E  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  5753  006830  D7FC               	goto	u3747
  5754  006832  F000               	nop	
  5755  006834  0012               	return	
  5756  006836                     __end_of_Lcd_Cmd:
  5757                           	opt stack 0
  5758                           tblptru	equ	0xFF8
  5759                           tblptrh	equ	0xFF7
  5760                           tblptrl	equ	0xFF6
  5761                           tablat	equ	0xFF5
  5762                           prodh	equ	0xFF4
  5763                           prodl	equ	0xFF3
  5764                           postinc0	equ	0xFEE
  5765                           wreg	equ	0xFE8
  5766                           postinc1	equ	0xFE6
  5767                           postdec1	equ	0xFE5
  5768                           fsr1l	equ	0xFE1
  5769                           indf2	equ	0xFDF
  5770                           postinc2	equ	0xFDE
  5771                           fsr2h	equ	0xFDA
  5772                           fsr2l	equ	0xFD9
  5773                           status	equ	0xFD8
  5774                           
  5775 ;; *************** function _Conv_Entero *****************
  5776 ;; Defined at:
  5777 ;;		line 1 in file "Convertir.h"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  numero          4   14[COMRAM] long 
  5780 ;;  conv            2   18[COMRAM] PTR unsigned char 
  5781 ;;		 -> main@cadena(20), main@cad(20), 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  convTemp       21   25[COMRAM] unsigned char [21]
  5784 ;;  numeroReg       4   51[COMRAM] long 
  5785 ;;  punteroActua    2   49[COMRAM] PTR unsigned char 
  5786 ;;		 -> Conv_Entero@convTemp(21), 
  5787 ;;  num             2   46[COMRAM] int 
  5788 ;;  i               1   48[COMRAM] unsigned char 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  2   14[COMRAM] int 
  5791 ;; Registers used:
  5792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5798 ;;      Params:         6       0       0       0       0       0       0       0       0
  5799 ;;      Locals:        30       0       0       0       0       0       0       0       0
  5800 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5801 ;;      Totals:        41       0       0       0       0       0       0       0       0
  5802 ;;Total ram usage:       41 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    1
  5805 ;; This function calls:
  5806 ;;		___aldiv
  5807 ;;		___almod
  5808 ;;		___lmul
  5809 ;; This function is called by:
  5810 ;;		_main
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text12
  5815  006A8A                     __ptext12:
  5816                           	opt stack 0
  5817  006A8A                     _Conv_Entero:
  5818                           	opt stack 29
  5819                           
  5820                           ;Convertir.h: 3: char convTemp[21];
  5821                           ;Convertir.h: 4: register char *punteroActual;
  5822                           ;Convertir.h: 5: register int num=0;
  5823                           
  5824                           ;incstack = 0
  5825  006A8A  0E00               	movlw	0
  5826  006A8C  6E30               	movwf	Conv_Entero@num+1,c
  5827  006A8E  0E00               	movlw	0
  5828  006A90  6E2F               	movwf	Conv_Entero@num,c
  5829                           
  5830                           ;Convertir.h: 6: register char i=0;
  5831  006A92  0E00               	movlw	0
  5832  006A94  6E31               	movwf	Conv_Entero@i,c
  5833                           
  5834                           ;Convertir.h: 7: register long long numeroReg = numero;
  5835  006A96  C00F  F034         	movff	Conv_Entero@numero,Conv_Entero@numeroReg
  5836  006A9A  C010  F035         	movff	Conv_Entero@numero+1,Conv_Entero@numeroReg+1
  5837  006A9E  C011  F036         	movff	Conv_Entero@numero+2,Conv_Entero@numeroReg+2
  5838  006AA2  C012  F037         	movff	Conv_Entero@numero+3,Conv_Entero@numeroReg+3
  5839                           
  5840                           ;Convertir.h: 9: punteroActual = &convTemp[21 - 1];
  5841  006AA6  0E00               	movlw	high (Conv_Entero@convTemp+20)
  5842  006AA8  6E33               	movwf	Conv_Entero@punteroActual+1,c
  5843  006AAA  0E2E               	movlw	low (Conv_Entero@convTemp+20)
  5844  006AAC  6E32               	movwf	Conv_Entero@punteroActual,c
  5845                           
  5846                           ;Convertir.h: 10: *punteroActual = 0;
  5847  006AAE  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  5848  006AB2  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  5849  006AB6  0E00               	movlw	0
  5850  006AB8  6EDF               	movwf	indf2,c
  5851                           
  5852                           ;Convertir.h: 12: if( numeroReg < 0)
  5853  006ABA  5037               	movf	Conv_Entero@numeroReg+3,w,c
  5854  006ABC  0A80               	xorlw	128
  5855  006ABE  0F80               	addlw	128
  5856  006AC0  E108               	bnz	u1705
  5857  006AC2  0E00               	movlw	0
  5858  006AC4  5C36               	subwf	Conv_Entero@numeroReg+2,w,c
  5859  006AC6  E105               	bnz	u1705
  5860  006AC8  0E00               	movlw	0
  5861  006ACA  5C35               	subwf	Conv_Entero@numeroReg+1,w,c
  5862  006ACC  E102               	bnz	u1705
  5863  006ACE  0E00               	movlw	0
  5864  006AD0  5C34               	subwf	Conv_Entero@numeroReg,w,c
  5865  006AD2                     u1705:
  5866  006AD2  B0D8               	btfsc	status,0,c
  5867  006AD4  D01A               	goto	l2459
  5868                           
  5869                           ;Convertir.h: 13: {
  5870                           ;Convertir.h: 14: numeroReg*=-1;
  5871  006AD6  C034  F001         	movff	Conv_Entero@numeroReg,___lmul@multiplier
  5872  006ADA  C035  F002         	movff	Conv_Entero@numeroReg+1,___lmul@multiplier+1
  5873  006ADE  C036  F003         	movff	Conv_Entero@numeroReg+2,___lmul@multiplier+2
  5874  006AE2  C037  F004         	movff	Conv_Entero@numeroReg+3,___lmul@multiplier+3
  5875  006AE6  0EFF               	movlw	255
  5876  006AE8  6E05               	movwf	___lmul@multiplicand,c
  5877  006AEA  0EFF               	movlw	255
  5878  006AEC  6E06               	movwf	___lmul@multiplicand+1,c
  5879  006AEE  0EFF               	movlw	255
  5880  006AF0  6E07               	movwf	___lmul@multiplicand+2,c
  5881  006AF2  0EFF               	movlw	255
  5882  006AF4  6E08               	movwf	___lmul@multiplicand+3,c
  5883  006AF6  ECDB  F030         	call	___lmul	;wreg free
  5884  006AFA  C001  F034         	movff	?___lmul,Conv_Entero@numeroReg
  5885  006AFE  C002  F035         	movff	?___lmul+1,Conv_Entero@numeroReg+1
  5886  006B02  C003  F036         	movff	?___lmul+2,Conv_Entero@numeroReg+2
  5887  006B06  C004  F037         	movff	?___lmul+3,Conv_Entero@numeroReg+3
  5888  006B0A                     l2459:
  5889                           
  5890                           ;Convertir.h: 18: punteroActual--;
  5891  006B0A  0632               	decf	Conv_Entero@punteroActual,f,c
  5892  006B0C  A0D8               	btfss	status,0,c
  5893  006B0E  0633               	decf	Conv_Entero@punteroActual+1,f,c
  5894                           
  5895                           ;Convertir.h: 19: num=numeroReg % 10;
  5896  006B10  C034  F001         	movff	Conv_Entero@numeroReg,___almod@dividend
  5897  006B14  C035  F002         	movff	Conv_Entero@numeroReg+1,___almod@dividend+1
  5898  006B18  C036  F003         	movff	Conv_Entero@numeroReg+2,___almod@dividend+2
  5899  006B1C  C037  F004         	movff	Conv_Entero@numeroReg+3,___almod@dividend+3
  5900  006B20  0E0A               	movlw	10
  5901  006B22  6E05               	movwf	___almod@divisor,c
  5902  006B24  0E00               	movlw	0
  5903  006B26  6E06               	movwf	___almod@divisor+1,c
  5904  006B28  0E00               	movlw	0
  5905  006B2A  6E07               	movwf	___almod@divisor+2,c
  5906  006B2C  0E00               	movlw	0
  5907  006B2E  6E08               	movwf	___almod@divisor+3,c
  5908  006B30  ECAC  F031         	call	___almod	;wreg free
  5909  006B34  C001  F015         	movff	?___almod,??_Conv_Entero
  5910  006B38  C002  F016         	movff	?___almod+1,??_Conv_Entero+1
  5911  006B3C  C003  F017         	movff	?___almod+2,??_Conv_Entero+2
  5912  006B40  C004  F018         	movff	?___almod+3,??_Conv_Entero+3
  5913  006B44  C015  F02F         	movff	??_Conv_Entero,Conv_Entero@num
  5914  006B48  C016  F030         	movff	??_Conv_Entero+1,Conv_Entero@num+1
  5915                           
  5916                           ;Convertir.h: 21: *punteroActual = num + '0';
  5917  006B4C  502F               	movf	Conv_Entero@num,w,c
  5918  006B4E  0F30               	addlw	48
  5919  006B50  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  5920  006B54  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  5921  006B58  6EDF               	movwf	indf2,c
  5922                           
  5923                           ;Convertir.h: 22: } while(numeroReg /= 10);
  5924  006B5A  C034  F001         	movff	Conv_Entero@numeroReg,___aldiv@dividend
  5925  006B5E  C035  F002         	movff	Conv_Entero@numeroReg+1,___aldiv@dividend+1
  5926  006B62  C036  F003         	movff	Conv_Entero@numeroReg+2,___aldiv@dividend+2
  5927  006B66  C037  F004         	movff	Conv_Entero@numeroReg+3,___aldiv@dividend+3
  5928  006B6A  0E0A               	movlw	10
  5929  006B6C  6E05               	movwf	___aldiv@divisor,c
  5930  006B6E  0E00               	movlw	0
  5931  006B70  6E06               	movwf	___aldiv@divisor+1,c
  5932  006B72  0E00               	movlw	0
  5933  006B74  6E07               	movwf	___aldiv@divisor+2,c
  5934  006B76  0E00               	movlw	0
  5935  006B78  6E08               	movwf	___aldiv@divisor+3,c
  5936  006B7A  EC89  F032         	call	___aldiv	;wreg free
  5937  006B7E  C001  F034         	movff	?___aldiv,Conv_Entero@numeroReg
  5938  006B82  C002  F035         	movff	?___aldiv+1,Conv_Entero@numeroReg+1
  5939  006B86  C003  F036         	movff	?___aldiv+2,Conv_Entero@numeroReg+2
  5940  006B8A  C004  F037         	movff	?___aldiv+3,Conv_Entero@numeroReg+3
  5941  006B8E  5037               	movf	(Conv_Entero@numeroReg+3)& (0+255),w,c
  5942  006B90  1034               	iorwf	Conv_Entero@numeroReg& (0+255),w,c
  5943  006B92  1035               	iorwf	(Conv_Entero@numeroReg+1)& (0+255),w,c
  5944  006B94  1036               	iorwf	(Conv_Entero@numeroReg+2)& (0+255),w,c
  5945  006B96  A4D8               	btfss	status,2,c
  5946  006B98  D7B8               	goto	l2459
  5947                           
  5948                           ;Convertir.h: 24: if ( numero < 0)
  5949  006B9A  5012               	movf	Conv_Entero@numero+3,w,c
  5950  006B9C  0A80               	xorlw	128
  5951  006B9E  0F80               	addlw	128
  5952  006BA0  E108               	bnz	u1725
  5953  006BA2  0E00               	movlw	0
  5954  006BA4  5C11               	subwf	Conv_Entero@numero+2,w,c
  5955  006BA6  E105               	bnz	u1725
  5956  006BA8  0E00               	movlw	0
  5957  006BAA  5C10               	subwf	Conv_Entero@numero+1,w,c
  5958  006BAC  E102               	bnz	u1725
  5959  006BAE  0E00               	movlw	0
  5960  006BB0  5C0F               	subwf	Conv_Entero@numero,w,c
  5961  006BB2                     u1725:
  5962  006BB2  B0D8               	btfsc	status,0,c
  5963  006BB4  D009               	goto	l2473
  5964                           
  5965                           ;Convertir.h: 25: {
  5966                           ;Convertir.h: 26: punteroActual--;
  5967  006BB6  0632               	decf	Conv_Entero@punteroActual,f,c
  5968  006BB8  A0D8               	btfss	status,0,c
  5969  006BBA  0633               	decf	Conv_Entero@punteroActual+1,f,c
  5970                           
  5971                           ;Convertir.h: 27: *punteroActual = '-';
  5972  006BBC  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  5973  006BC0  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  5974  006BC4  0E2D               	movlw	45
  5975  006BC6  6EDF               	movwf	indf2,c
  5976  006BC8                     l2473:
  5977                           
  5978                           ;Convertir.h: 28: }
  5979                           ;Convertir.h: 30: numeroReg=convTemp+21-punteroActual;
  5980  006BC8  C032  F015         	movff	Conv_Entero@punteroActual,??_Conv_Entero
  5981  006BCC  C033  F016         	movff	Conv_Entero@punteroActual+1,??_Conv_Entero+1
  5982  006BD0  1E15               	comf	??_Conv_Entero,f,c
  5983  006BD2  1E16               	comf	??_Conv_Entero+1,f,c
  5984  006BD4  4A15               	infsnz	??_Conv_Entero,f,c
  5985  006BD6  2A16               	incf	??_Conv_Entero+1,f,c
  5986  006BD8  0E15               	movlw	21
  5987  006BDA  2615               	addwf	??_Conv_Entero,f,c
  5988  006BDC  0E00               	movlw	0
  5989  006BDE  2216               	addwfc	??_Conv_Entero+1,f,c
  5990  006BE0  0E1A               	movlw	low Conv_Entero@convTemp
  5991  006BE2  6E17               	movwf	(??_Conv_Entero+2)& (0+255),c
  5992  006BE4  0E00               	movlw	high Conv_Entero@convTemp
  5993  006BE6  6E18               	movwf	(??_Conv_Entero+3)& (0+255),c
  5994  006BE8  5015               	movf	??_Conv_Entero,w,c
  5995  006BEA  2617               	addwf	??_Conv_Entero+2,f,c
  5996  006BEC  5016               	movf	??_Conv_Entero+1,w,c
  5997  006BEE  2218               	addwfc	??_Conv_Entero+3,f,c
  5998  006BF0  C017  F034         	movff	??_Conv_Entero+2,Conv_Entero@numeroReg
  5999  006BF4  C018  F035         	movff	??_Conv_Entero+3,Conv_Entero@numeroReg+1
  6000  006BF8  0E00               	movlw	0
  6001  006BFA  BE35               	btfsc	Conv_Entero@numeroReg+1,7,c
  6002  006BFC  0EFF               	movlw	-1
  6003  006BFE  6E36               	movwf	Conv_Entero@numeroReg+2,c
  6004  006C00  6E37               	movwf	Conv_Entero@numeroReg+3,c
  6005                           
  6006                           ;Convertir.h: 31: for (i = 0; i< numeroReg; i++)
  6007  006C02  0E00               	movlw	0
  6008  006C04  6E31               	movwf	Conv_Entero@i,c
  6009  006C06  D013               	goto	l2481
  6010  006C08                     l2477:
  6011                           
  6012                           ;Convertir.h: 32: {
  6013                           ;Convertir.h: 38: ((unsigned char *)conv)[i] = ((const unsigned char *)punteroActual)[i]
      +                          ;
  6014  006C08  5031               	movf	Conv_Entero@i,w,c
  6015  006C0A  0D01               	mullw	1
  6016  006C0C  50F3               	movf	prodl,w,c
  6017  006C0E  2432               	addwf	Conv_Entero@punteroActual,w,c
  6018  006C10  6ED9               	movwf	fsr2l,c
  6019  006C12  50F4               	movf	prodh,w,c
  6020  006C14  2033               	addwfc	Conv_Entero@punteroActual+1,w,c
  6021  006C16  6EDA               	movwf	fsr2h,c
  6022  006C18  5031               	movf	Conv_Entero@i,w,c
  6023  006C1A  0D01               	mullw	1
  6024  006C1C  50F3               	movf	prodl,w,c
  6025  006C1E  2413               	addwf	Conv_Entero@conv,w,c
  6026  006C20  6EE1               	movwf	fsr1l,c
  6027  006C22  50F4               	movf	prodh,w,c
  6028  006C24  2014               	addwfc	Conv_Entero@conv+1,w,c
  6029  006C26  6EE2               	movwf	fsr1h,c
  6030  006C28  CFDF FFE7          	movff	indf2,indf1
  6031  006C2C  2A31               	incf	Conv_Entero@i,f,c
  6032  006C2E                     l2481:
  6033  006C2E  C031  F015         	movff	Conv_Entero@i,??_Conv_Entero
  6034  006C32  6A16               	clrf	(??_Conv_Entero+1)& (0+255),c
  6035  006C34  6A17               	clrf	(??_Conv_Entero+2)& (0+255),c
  6036  006C36  6A18               	clrf	(??_Conv_Entero+3)& (0+255),c
  6037  006C38  5018               	movf	??_Conv_Entero+3,w,c
  6038  006C3A  0A80               	xorlw	128
  6039  006C3C  6E19               	movwf	(??_Conv_Entero+4)& (0+255),c
  6040  006C3E  5034               	movf	Conv_Entero@numeroReg,w,c
  6041  006C40  5C15               	subwf	??_Conv_Entero,w,c
  6042  006C42  5035               	movf	Conv_Entero@numeroReg+1,w,c
  6043  006C44  5816               	subwfb	??_Conv_Entero+1,w,c
  6044  006C46  5036               	movf	Conv_Entero@numeroReg+2,w,c
  6045  006C48  5817               	subwfb	??_Conv_Entero+2,w,c
  6046  006C4A  5037               	movf	Conv_Entero@numeroReg+3,w,c
  6047  006C4C  0A80               	xorlw	128
  6048  006C4E  5819               	subwfb	(??_Conv_Entero+4)& (0+255),w,c
  6049  006C50  A0D8               	btfss	status,0,c
  6050  006C52  D7DA               	goto	l2477
  6051                           
  6052                           ;Convertir.h: 39: }
  6053                           ;Convertir.h: 41: return numeroReg - 1;
  6054  006C54  0EFF               	movlw	255
  6055  006C56  2434               	addwf	Conv_Entero@numeroReg,w,c
  6056  006C58  6E0F               	movwf	?_Conv_Entero,c
  6057  006C5A  0EFF               	movlw	255
  6058  006C5C  2035               	addwfc	Conv_Entero@numeroReg+1,w,c
  6059  006C5E  6E10               	movwf	?_Conv_Entero+1,c
  6060  006C60  0012               	return	
  6061  006C62                     __end_of_Conv_Entero:
  6062                           	opt stack 0
  6063                           tblptru	equ	0xFF8
  6064                           tblptrh	equ	0xFF7
  6065                           tblptrl	equ	0xFF6
  6066                           tablat	equ	0xFF5
  6067                           prodh	equ	0xFF4
  6068                           prodl	equ	0xFF3
  6069                           postinc0	equ	0xFEE
  6070                           wreg	equ	0xFE8
  6071                           indf1	equ	0xFE7
  6072                           postinc1	equ	0xFE6
  6073                           postdec1	equ	0xFE5
  6074                           fsr1h	equ	0xFE2
  6075                           fsr1l	equ	0xFE1
  6076                           indf2	equ	0xFDF
  6077                           postinc2	equ	0xFDE
  6078                           fsr2h	equ	0xFDA
  6079                           fsr2l	equ	0xFD9
  6080                           status	equ	0xFD8
  6081                           
  6082 ;; *************** function ___lmul *****************
  6083 ;; Defined at:
  6084 ;;		line 15 in file "/opt/microchip/xc8/v1.32/sources/common/Umul32.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  multiplier      4    0[COMRAM] unsigned long 
  6087 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  product         4    8[COMRAM] unsigned long 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  4    0[COMRAM] unsigned long 
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, status,0
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6099 ;;      Params:         8       0       0       0       0       0       0       0       0
  6100 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6102 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6103 ;;Total ram usage:       12 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_Conv_Entero
  6109 ;;		_PWM_generar
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text13
  6114  0061B6                     __ptext13:
  6115                           	opt stack 0
  6116  0061B6                     ___lmul:
  6117                           	opt stack 29
  6118                           
  6119                           ;incstack = 0
  6120  0061B6  0E00               	movlw	0
  6121  0061B8  6E09               	movwf	___lmul@product,c
  6122  0061BA  0E00               	movlw	0
  6123  0061BC  6E0A               	movwf	___lmul@product+1,c
  6124  0061BE  0E00               	movlw	0
  6125  0061C0  6E0B               	movwf	___lmul@product+2,c
  6126  0061C2  0E00               	movlw	0
  6127  0061C4  6E0C               	movwf	___lmul@product+3,c
  6128  0061C6                     l2227:
  6129  0061C6  A001               	btfss	___lmul@multiplier,0,c
  6130  0061C8  D008               	goto	l2231
  6131  0061CA  5005               	movf	___lmul@multiplicand,w,c
  6132  0061CC  2609               	addwf	___lmul@product,f,c
  6133  0061CE  5006               	movf	___lmul@multiplicand+1,w,c
  6134  0061D0  220A               	addwfc	___lmul@product+1,f,c
  6135  0061D2  5007               	movf	___lmul@multiplicand+2,w,c
  6136  0061D4  220B               	addwfc	___lmul@product+2,f,c
  6137  0061D6  5008               	movf	___lmul@multiplicand+3,w,c
  6138  0061D8  220C               	addwfc	___lmul@product+3,f,c
  6139  0061DA                     l2231:
  6140  0061DA  90D8               	bcf	status,0,c
  6141  0061DC  3605               	rlcf	___lmul@multiplicand,f,c
  6142  0061DE  3606               	rlcf	___lmul@multiplicand+1,f,c
  6143  0061E0  3607               	rlcf	___lmul@multiplicand+2,f,c
  6144  0061E2  3608               	rlcf	___lmul@multiplicand+3,f,c
  6145  0061E4  90D8               	bcf	status,0,c
  6146  0061E6  3204               	rrcf	___lmul@multiplier+3,f,c
  6147  0061E8  3203               	rrcf	___lmul@multiplier+2,f,c
  6148  0061EA  3202               	rrcf	___lmul@multiplier+1,f,c
  6149  0061EC  3201               	rrcf	___lmul@multiplier,f,c
  6150  0061EE  5004               	movf	___lmul@multiplier+3,w,c
  6151  0061F0  1001               	iorwf	___lmul@multiplier,w,c
  6152  0061F2  1002               	iorwf	___lmul@multiplier+1,w,c
  6153  0061F4  1003               	iorwf	___lmul@multiplier+2,w,c
  6154  0061F6  A4D8               	btfss	status,2,c
  6155  0061F8  D7E6               	goto	l2227
  6156  0061FA  C009  F001         	movff	___lmul@product,?___lmul
  6157  0061FE  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6158  006202  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6159  006206  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6160  00620A  0012               	return	
  6161  00620C                     __end_of___lmul:
  6162                           	opt stack 0
  6163                           tblptru	equ	0xFF8
  6164                           tblptrh	equ	0xFF7
  6165                           tblptrl	equ	0xFF6
  6166                           tablat	equ	0xFF5
  6167                           prodh	equ	0xFF4
  6168                           prodl	equ	0xFF3
  6169                           postinc0	equ	0xFEE
  6170                           wreg	equ	0xFE8
  6171                           indf1	equ	0xFE7
  6172                           postinc1	equ	0xFE6
  6173                           postdec1	equ	0xFE5
  6174                           fsr1h	equ	0xFE2
  6175                           fsr1l	equ	0xFE1
  6176                           indf2	equ	0xFDF
  6177                           postinc2	equ	0xFDE
  6178                           fsr2h	equ	0xFDA
  6179                           fsr2l	equ	0xFD9
  6180                           status	equ	0xFD8
  6181                           
  6182 ;; *************** function ___almod *****************
  6183 ;; Defined at:
  6184 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/almod.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  dividend        4    0[COMRAM] long 
  6187 ;;  divisor         4    4[COMRAM] long 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;  sign            1    9[COMRAM] unsigned char 
  6190 ;;  counter         1    8[COMRAM] unsigned char 
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  4    0[COMRAM] long 
  6193 ;; Registers used:
  6194 ;;		wreg, status,2, status,0
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6200 ;;      Params:         8       0       0       0       0       0       0       0       0
  6201 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6203 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6204 ;;Total ram usage:       10 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_Conv_Entero
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text14
  6214  006358                     __ptext14:
  6215                           	opt stack 0
  6216  006358                     ___almod:
  6217                           	opt stack 29
  6218                           
  6219                           ;incstack = 0
  6220  006358  0E00               	movlw	0
  6221  00635A  6E0A               	movwf	___almod@sign,c
  6222  00635C  5004               	movf	___almod@dividend+3,w,c
  6223  00635E  0A80               	xorlw	128
  6224  006360  0F80               	addlw	128
  6225  006362  E108               	bnz	u1555
  6226  006364  0E00               	movlw	0
  6227  006366  5C03               	subwf	___almod@dividend+2,w,c
  6228  006368  E105               	bnz	u1555
  6229  00636A  0E00               	movlw	0
  6230  00636C  5C02               	subwf	___almod@dividend+1,w,c
  6231  00636E  E102               	bnz	u1555
  6232  006370  0E00               	movlw	0
  6233  006372  5C01               	subwf	___almod@dividend,w,c
  6234  006374                     u1555:
  6235  006374  B0D8               	btfsc	status,0,c
  6236  006376  D00A               	goto	l2287
  6237  006378  1E04               	comf	___almod@dividend+3,f,c
  6238  00637A  1E03               	comf	___almod@dividend+2,f,c
  6239  00637C  1E02               	comf	___almod@dividend+1,f,c
  6240  00637E  6C01               	negf	___almod@dividend,c
  6241  006380  0E00               	movlw	0
  6242  006382  2202               	addwfc	___almod@dividend+1,f,c
  6243  006384  2203               	addwfc	___almod@dividend+2,f,c
  6244  006386  2204               	addwfc	___almod@dividend+3,f,c
  6245  006388  0E01               	movlw	1
  6246  00638A  6E0A               	movwf	___almod@sign,c
  6247  00638C                     l2287:
  6248  00638C  5008               	movf	___almod@divisor+3,w,c
  6249  00638E  0A80               	xorlw	128
  6250  006390  0F80               	addlw	128
  6251  006392  E108               	bnz	u1565
  6252  006394  0E00               	movlw	0
  6253  006396  5C07               	subwf	___almod@divisor+2,w,c
  6254  006398  E105               	bnz	u1565
  6255  00639A  0E00               	movlw	0
  6256  00639C  5C06               	subwf	___almod@divisor+1,w,c
  6257  00639E  E102               	bnz	u1565
  6258  0063A0  0E00               	movlw	0
  6259  0063A2  5C05               	subwf	___almod@divisor,w,c
  6260  0063A4                     u1565:
  6261  0063A4  B0D8               	btfsc	status,0,c
  6262  0063A6  D008               	goto	l2291
  6263  0063A8  1E08               	comf	___almod@divisor+3,f,c
  6264  0063AA  1E07               	comf	___almod@divisor+2,f,c
  6265  0063AC  1E06               	comf	___almod@divisor+1,f,c
  6266  0063AE  6C05               	negf	___almod@divisor,c
  6267  0063B0  0E00               	movlw	0
  6268  0063B2  2206               	addwfc	___almod@divisor+1,f,c
  6269  0063B4  2207               	addwfc	___almod@divisor+2,f,c
  6270  0063B6  2208               	addwfc	___almod@divisor+3,f,c
  6271  0063B8                     l2291:
  6272  0063B8  5008               	movf	___almod@divisor+3,w,c
  6273  0063BA  1005               	iorwf	___almod@divisor,w,c
  6274  0063BC  1006               	iorwf	___almod@divisor+1,w,c
  6275  0063BE  1007               	iorwf	___almod@divisor+2,w,c
  6276  0063C0  B4D8               	btfsc	status,2,c
  6277  0063C2  D024               	goto	l2307
  6278  0063C4  0E01               	movlw	1
  6279  0063C6  6E09               	movwf	___almod@counter,c
  6280  0063C8  D006               	goto	l2297
  6281  0063CA                     l2295:
  6282  0063CA  90D8               	bcf	status,0,c
  6283  0063CC  3605               	rlcf	___almod@divisor,f,c
  6284  0063CE  3606               	rlcf	___almod@divisor+1,f,c
  6285  0063D0  3607               	rlcf	___almod@divisor+2,f,c
  6286  0063D2  3608               	rlcf	___almod@divisor+3,f,c
  6287  0063D4  2A09               	incf	___almod@counter,f,c
  6288  0063D6                     l2297:
  6289  0063D6  AE08               	btfss	___almod@divisor+3,7,c
  6290  0063D8  D7F8               	goto	l2295
  6291  0063DA                     l2299:
  6292  0063DA  5005               	movf	___almod@divisor,w,c
  6293  0063DC  5C01               	subwf	___almod@dividend,w,c
  6294  0063DE  5006               	movf	___almod@divisor+1,w,c
  6295  0063E0  5802               	subwfb	___almod@dividend+1,w,c
  6296  0063E2  5007               	movf	___almod@divisor+2,w,c
  6297  0063E4  5803               	subwfb	___almod@dividend+2,w,c
  6298  0063E6  5008               	movf	___almod@divisor+3,w,c
  6299  0063E8  5804               	subwfb	___almod@dividend+3,w,c
  6300  0063EA  A0D8               	btfss	status,0,c
  6301  0063EC  D008               	goto	l2303
  6302  0063EE  5005               	movf	___almod@divisor,w,c
  6303  0063F0  5E01               	subwf	___almod@dividend,f,c
  6304  0063F2  5006               	movf	___almod@divisor+1,w,c
  6305  0063F4  5A02               	subwfb	___almod@dividend+1,f,c
  6306  0063F6  5007               	movf	___almod@divisor+2,w,c
  6307  0063F8  5A03               	subwfb	___almod@dividend+2,f,c
  6308  0063FA  5008               	movf	___almod@divisor+3,w,c
  6309  0063FC  5A04               	subwfb	___almod@dividend+3,f,c
  6310  0063FE                     l2303:
  6311  0063FE  90D8               	bcf	status,0,c
  6312  006400  3208               	rrcf	___almod@divisor+3,f,c
  6313  006402  3207               	rrcf	___almod@divisor+2,f,c
  6314  006404  3206               	rrcf	___almod@divisor+1,f,c
  6315  006406  3205               	rrcf	___almod@divisor,f,c
  6316  006408  2E09               	decfsz	___almod@counter,f,c
  6317  00640A  D7E7               	goto	l2299
  6318  00640C                     l2307:
  6319  00640C  500A               	movf	___almod@sign,w,c
  6320  00640E  B4D8               	btfsc	status,2,c
  6321  006410  D008               	goto	l2311
  6322  006412  1E04               	comf	___almod@dividend+3,f,c
  6323  006414  1E03               	comf	___almod@dividend+2,f,c
  6324  006416  1E02               	comf	___almod@dividend+1,f,c
  6325  006418  6C01               	negf	___almod@dividend,c
  6326  00641A  0E00               	movlw	0
  6327  00641C  2202               	addwfc	___almod@dividend+1,f,c
  6328  00641E  2203               	addwfc	___almod@dividend+2,f,c
  6329  006420  2204               	addwfc	___almod@dividend+3,f,c
  6330  006422                     l2311:
  6331  006422  C001  F001         	movff	___almod@dividend,?___almod
  6332  006426  C002  F002         	movff	___almod@dividend+1,?___almod+1
  6333  00642A  C003  F003         	movff	___almod@dividend+2,?___almod+2
  6334  00642E  C004  F004         	movff	___almod@dividend+3,?___almod+3
  6335  006432  0012               	return	
  6336  006434                     __end_of___almod:
  6337                           	opt stack 0
  6338                           tblptru	equ	0xFF8
  6339                           tblptrh	equ	0xFF7
  6340                           tblptrl	equ	0xFF6
  6341                           tablat	equ	0xFF5
  6342                           prodh	equ	0xFF4
  6343                           prodl	equ	0xFF3
  6344                           postinc0	equ	0xFEE
  6345                           wreg	equ	0xFE8
  6346                           indf1	equ	0xFE7
  6347                           postinc1	equ	0xFE6
  6348                           postdec1	equ	0xFE5
  6349                           fsr1h	equ	0xFE2
  6350                           fsr1l	equ	0xFE1
  6351                           indf2	equ	0xFDF
  6352                           postinc2	equ	0xFDE
  6353                           fsr2h	equ	0xFDA
  6354                           fsr2l	equ	0xFD9
  6355                           status	equ	0xFD8
  6356                           
  6357 ;; *************** function ___aldiv *****************
  6358 ;; Defined at:
  6359 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/aldiv.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  dividend        4    0[COMRAM] long 
  6362 ;;  divisor         4    4[COMRAM] long 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  quotient        4   10[COMRAM] long 
  6365 ;;  sign            1    9[COMRAM] unsigned char 
  6366 ;;  counter         1    8[COMRAM] unsigned char 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  4    0[COMRAM] long 
  6369 ;; Registers used:
  6370 ;;		wreg, status,2, status,0
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6376 ;;      Params:         8       0       0       0       0       0       0       0       0
  6377 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6379 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6380 ;;Total ram usage:       14 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_Conv_Entero
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           	psect	text15
  6390  006512                     __ptext15:
  6391                           	opt stack 0
  6392  006512                     ___aldiv:
  6393                           	opt stack 29
  6394                           
  6395                           ;incstack = 0
  6396  006512  0E00               	movlw	0
  6397  006514  6E0A               	movwf	___aldiv@sign,c
  6398  006516  5008               	movf	___aldiv@divisor+3,w,c
  6399  006518  0A80               	xorlw	128
  6400  00651A  0F80               	addlw	128
  6401  00651C  E108               	bnz	u1495
  6402  00651E  0E00               	movlw	0
  6403  006520  5C07               	subwf	___aldiv@divisor+2,w,c
  6404  006522  E105               	bnz	u1495
  6405  006524  0E00               	movlw	0
  6406  006526  5C06               	subwf	___aldiv@divisor+1,w,c
  6407  006528  E102               	bnz	u1495
  6408  00652A  0E00               	movlw	0
  6409  00652C  5C05               	subwf	___aldiv@divisor,w,c
  6410  00652E                     u1495:
  6411  00652E  B0D8               	btfsc	status,0,c
  6412  006530  D00A               	goto	l2243
  6413  006532  1E08               	comf	___aldiv@divisor+3,f,c
  6414  006534  1E07               	comf	___aldiv@divisor+2,f,c
  6415  006536  1E06               	comf	___aldiv@divisor+1,f,c
  6416  006538  6C05               	negf	___aldiv@divisor,c
  6417  00653A  0E00               	movlw	0
  6418  00653C  2206               	addwfc	___aldiv@divisor+1,f,c
  6419  00653E  2207               	addwfc	___aldiv@divisor+2,f,c
  6420  006540  2208               	addwfc	___aldiv@divisor+3,f,c
  6421  006542  0E01               	movlw	1
  6422  006544  6E0A               	movwf	___aldiv@sign,c
  6423  006546                     l2243:
  6424  006546  5004               	movf	___aldiv@dividend+3,w,c
  6425  006548  0A80               	xorlw	128
  6426  00654A  0F80               	addlw	128
  6427  00654C  E108               	bnz	u1505
  6428  00654E  0E00               	movlw	0
  6429  006550  5C03               	subwf	___aldiv@dividend+2,w,c
  6430  006552  E105               	bnz	u1505
  6431  006554  0E00               	movlw	0
  6432  006556  5C02               	subwf	___aldiv@dividend+1,w,c
  6433  006558  E102               	bnz	u1505
  6434  00655A  0E00               	movlw	0
  6435  00655C  5C01               	subwf	___aldiv@dividend,w,c
  6436  00655E                     u1505:
  6437  00655E  B0D8               	btfsc	status,0,c
  6438  006560  D00A               	goto	l2249
  6439  006562  1E04               	comf	___aldiv@dividend+3,f,c
  6440  006564  1E03               	comf	___aldiv@dividend+2,f,c
  6441  006566  1E02               	comf	___aldiv@dividend+1,f,c
  6442  006568  6C01               	negf	___aldiv@dividend,c
  6443  00656A  0E00               	movlw	0
  6444  00656C  2202               	addwfc	___aldiv@dividend+1,f,c
  6445  00656E  2203               	addwfc	___aldiv@dividend+2,f,c
  6446  006570  2204               	addwfc	___aldiv@dividend+3,f,c
  6447  006572  0E01               	movlw	1
  6448  006574  1A0A               	xorwf	___aldiv@sign,f,c
  6449  006576                     l2249:
  6450  006576  0E00               	movlw	0
  6451  006578  6E0B               	movwf	___aldiv@quotient,c
  6452  00657A  0E00               	movlw	0
  6453  00657C  6E0C               	movwf	___aldiv@quotient+1,c
  6454  00657E  0E00               	movlw	0
  6455  006580  6E0D               	movwf	___aldiv@quotient+2,c
  6456  006582  0E00               	movlw	0
  6457  006584  6E0E               	movwf	___aldiv@quotient+3,c
  6458  006586  5008               	movf	___aldiv@divisor+3,w,c
  6459  006588  1005               	iorwf	___aldiv@divisor,w,c
  6460  00658A  1006               	iorwf	___aldiv@divisor+1,w,c
  6461  00658C  1007               	iorwf	___aldiv@divisor+2,w,c
  6462  00658E  B4D8               	btfsc	status,2,c
  6463  006590  D02A               	goto	l2271
  6464  006592  0E01               	movlw	1
  6465  006594  6E09               	movwf	___aldiv@counter,c
  6466  006596  D006               	goto	l2257
  6467  006598                     l2255:
  6468  006598  90D8               	bcf	status,0,c
  6469  00659A  3605               	rlcf	___aldiv@divisor,f,c
  6470  00659C  3606               	rlcf	___aldiv@divisor+1,f,c
  6471  00659E  3607               	rlcf	___aldiv@divisor+2,f,c
  6472  0065A0  3608               	rlcf	___aldiv@divisor+3,f,c
  6473  0065A2  2A09               	incf	___aldiv@counter,f,c
  6474  0065A4                     l2257:
  6475  0065A4  AE08               	btfss	___aldiv@divisor+3,7,c
  6476  0065A6  D7F8               	goto	l2255
  6477  0065A8                     l2259:
  6478  0065A8  90D8               	bcf	status,0,c
  6479  0065AA  360B               	rlcf	___aldiv@quotient,f,c
  6480  0065AC  360C               	rlcf	___aldiv@quotient+1,f,c
  6481  0065AE  360D               	rlcf	___aldiv@quotient+2,f,c
  6482  0065B0  360E               	rlcf	___aldiv@quotient+3,f,c
  6483  0065B2  5005               	movf	___aldiv@divisor,w,c
  6484  0065B4  5C01               	subwf	___aldiv@dividend,w,c
  6485  0065B6  5006               	movf	___aldiv@divisor+1,w,c
  6486  0065B8  5802               	subwfb	___aldiv@dividend+1,w,c
  6487  0065BA  5007               	movf	___aldiv@divisor+2,w,c
  6488  0065BC  5803               	subwfb	___aldiv@dividend+2,w,c
  6489  0065BE  5008               	movf	___aldiv@divisor+3,w,c
  6490  0065C0  5804               	subwfb	___aldiv@dividend+3,w,c
  6491  0065C2  A0D8               	btfss	status,0,c
  6492  0065C4  D009               	goto	l2267
  6493  0065C6  5005               	movf	___aldiv@divisor,w,c
  6494  0065C8  5E01               	subwf	___aldiv@dividend,f,c
  6495  0065CA  5006               	movf	___aldiv@divisor+1,w,c
  6496  0065CC  5A02               	subwfb	___aldiv@dividend+1,f,c
  6497  0065CE  5007               	movf	___aldiv@divisor+2,w,c
  6498  0065D0  5A03               	subwfb	___aldiv@dividend+2,f,c
  6499  0065D2  5008               	movf	___aldiv@divisor+3,w,c
  6500  0065D4  5A04               	subwfb	___aldiv@dividend+3,f,c
  6501  0065D6  800B               	bsf	___aldiv@quotient,0,c
  6502  0065D8                     l2267:
  6503  0065D8  90D8               	bcf	status,0,c
  6504  0065DA  3208               	rrcf	___aldiv@divisor+3,f,c
  6505  0065DC  3207               	rrcf	___aldiv@divisor+2,f,c
  6506  0065DE  3206               	rrcf	___aldiv@divisor+1,f,c
  6507  0065E0  3205               	rrcf	___aldiv@divisor,f,c
  6508  0065E2  2E09               	decfsz	___aldiv@counter,f,c
  6509  0065E4  D7E1               	goto	l2259
  6510  0065E6                     l2271:
  6511  0065E6  500A               	movf	___aldiv@sign,w,c
  6512  0065E8  B4D8               	btfsc	status,2,c
  6513  0065EA  D008               	goto	l2275
  6514  0065EC  1E0E               	comf	___aldiv@quotient+3,f,c
  6515  0065EE  1E0D               	comf	___aldiv@quotient+2,f,c
  6516  0065F0  1E0C               	comf	___aldiv@quotient+1,f,c
  6517  0065F2  6C0B               	negf	___aldiv@quotient,c
  6518  0065F4  0E00               	movlw	0
  6519  0065F6  220C               	addwfc	___aldiv@quotient+1,f,c
  6520  0065F8  220D               	addwfc	___aldiv@quotient+2,f,c
  6521  0065FA  220E               	addwfc	___aldiv@quotient+3,f,c
  6522  0065FC                     l2275:
  6523  0065FC  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  6524  006600  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  6525  006604  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  6526  006608  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  6527  00660C  0012               	return	
  6528  00660E                     __end_of___aldiv:
  6529                           	opt stack 0
  6530                           tblptru	equ	0xFF8
  6531                           tblptrh	equ	0xFF7
  6532                           tblptrl	equ	0xFF6
  6533                           tablat	equ	0xFF5
  6534                           prodh	equ	0xFF4
  6535                           prodl	equ	0xFF3
  6536                           postinc0	equ	0xFEE
  6537                           wreg	equ	0xFE8
  6538                           indf1	equ	0xFE7
  6539                           postinc1	equ	0xFE6
  6540                           postdec1	equ	0xFE5
  6541                           fsr1h	equ	0xFE2
  6542                           fsr1l	equ	0xFE1
  6543                           indf2	equ	0xFDF
  6544                           postinc2	equ	0xFDE
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           tblptru	equ	0xFF8
  6549                           tblptrh	equ	0xFF7
  6550                           tblptrl	equ	0xFF6
  6551                           tablat	equ	0xFF5
  6552                           prodh	equ	0xFF4
  6553                           prodl	equ	0xFF3
  6554                           postinc0	equ	0xFEE
  6555                           wreg	equ	0xFE8
  6556                           indf1	equ	0xFE7
  6557                           postinc1	equ	0xFE6
  6558                           postdec1	equ	0xFE5
  6559                           fsr1h	equ	0xFE2
  6560                           fsr1l	equ	0xFE1
  6561                           indf2	equ	0xFDF
  6562                           postinc2	equ	0xFDE
  6563                           fsr2h	equ	0xFDA
  6564                           fsr2l	equ	0xFD9
  6565                           status	equ	0xFD8
  6566                           
  6567                           	psect	rparam
  6568  0000                     tblptru	equ	0xFF8
  6569                           tblptrh	equ	0xFF7
  6570                           tblptrl	equ	0xFF6
  6571                           tablat	equ	0xFF5
  6572                           prodh	equ	0xFF4
  6573                           prodl	equ	0xFF3
  6574                           postinc0	equ	0xFEE
  6575                           wreg	equ	0xFE8
  6576                           indf1	equ	0xFE7
  6577                           postinc1	equ	0xFE6
  6578                           postdec1	equ	0xFE5
  6579                           fsr1h	equ	0xFE2
  6580                           fsr1l	equ	0xFE1
  6581                           indf2	equ	0xFDF
  6582                           postinc2	equ	0xFDE
  6583                           fsr2h	equ	0xFDA
  6584                           fsr2l	equ	0xFD9
  6585                           status	equ	0xFD8


Data Sizes:
    Strings     309
    Constant    0
    Data        222
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     58      70
    BANK0           160    152     160
    BANK1           256      0     222
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), 

    Conv_Entero@conv	PTR unsigned char  size(2) Largest target is 20
		 -> main@cadena(BANK0[20]), main@cad(BANK0[20]), 

    Conv_Entero@punteroActual	PTR unsigned char  size(2) Largest target is 21
		 -> Conv_Entero@convTemp(COMRAM[21]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 16
		 -> STR_76(CODE[14]), STR_75(CODE[5]), STR_74(CODE[12]), STR_73(CODE[7]), 
		 -> STR_72(CODE[2]), STR_71(CODE[4]), STR_70(CODE[10]), STR_69(CODE[12]), 
		 -> STR_68(CODE[12]), STR_67(CODE[6]), STR_66(CODE[5]), STR_65(CODE[5]), 
		 -> STR_64(CODE[5]), STR_63(CODE[6]), STR_62(CODE[5]), STR_61(CODE[5]), 
		 -> STR_60(CODE[5]), STR_59(CODE[6]), STR_58(CODE[5]), STR_57(CODE[5]), 
		 -> STR_56(CODE[5]), STR_55(CODE[6]), STR_54(CODE[5]), STR_53(CODE[5]), 
		 -> STR_52(CODE[6]), STR_51(CODE[5]), STR_50(CODE[5]), STR_49(CODE[5]), 
		 -> STR_48(CODE[5]), STR_47(CODE[5]), STR_46(CODE[5]), STR_45(CODE[5]), 
		 -> STR_44(CODE[5]), STR_43(CODE[5]), STR_42(CODE[5]), STR_41(CODE[5]), 
		 -> STR_40(CODE[5]), STR_39(CODE[5]), STR_38(CODE[5]), STR_37(CODE[5]), 
		 -> STR_36(CODE[5]), STR_35(CODE[5]), STR_34(CODE[5]), STR_33(CODE[5]), 
		 -> STR_32(CODE[5]), STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[5]), 
		 -> STR_28(CODE[5]), STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[5]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), 
		 -> STR_16(CODE[5]), STR_15(CODE[9]), STR_14(CODE[14]), STR_13(CODE[9]), 
		 -> STR_12(CODE[9]), STR_11(CODE[14]), STR_10(CODE[9]), STR_9(CODE[14]), 
		 -> STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[12]), STR_5(CODE[12]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[16]), STR_1(CODE[16]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 20
		 -> main@cadena(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_Conv_Entero
    _lcd_goto->_Lcd_Cmd
    _atoi->___wmul
    _PWM_generar->___lldiv
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Conv_Entero->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               155   155      0   16522
                                             55 COMRAM     3     3      0
                                              0 BANK0    152   152      0
                        _Conv_Entero
                         _Lcd_Chr_CP
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                        _PWM_generar
                               _atoi
                           _lcd_goto
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             7     3      4     568
                                              3 COMRAM     7     3      4
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     5      3     647
                                              6 COMRAM     8     5      3
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PWM_generar                                         20    16      4    1408
                                             13 COMRAM    20    16      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     2      3   10261
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     661
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Conv_Entero                                         41    35      6    2017
                                             14 COMRAM    41    35      6
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     450
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     424
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Conv_Entero
     ___aldiv
     ___almod
     ___lmul
   _Lcd_Chr_CP
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PWM_generar
     ___lldiv
     ___lmul
   _atoi
     ___wmul
     _isdigit
   _lcd_goto
     _Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      DE       8       86.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3A      46       1       73.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C4       6        0.0%
DATA                 0      0     1C4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon May 13 20:25:36 2019

                       _B 00F8                         _C 003B                         _D 003D  
                       _e 00FA                         _p 0041                         _q 0043  
                       _r 00FC                         _t 0045                         _w 00FE  
                      l27 68B8       ___wmul@multiplicand 0003              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
       PWM_generar@PR2cal 001A                       l118 6F10                       l135 79CE  
                     l161 7CFA                       l155 7A00                       l149 799C  
                     l167 7D3E                       l480 6706                       l767 6346  
            __CFG_CPB$OFF 000000                       _PR2 000FBB              __CFG_CPD$OFF 000000  
                     wreg 000FE8              __CFG_LVP$OFF 000000                      l3011 7AB2  
                    l3013 7AB6                      l2311 6422                      l2303 63FE  
                    l2231 61DA                      l3103 7D24                      l3113 7D5A  
                    l2243 6546                      l2307 640C                      l2227 61C6  
                    l2403 625E                      l2411 627E                      l2323 60F8  
                    l3115 7D66                      l2421 62AE                      l2413 6284  
                    l2333 62F8                      l2255 6598                      l2271 65E6  
                    l2407 6272                      l2335 6304                      l2511 66CE  
                    l2503 666E                      l2431 6170                      l3135 7DEE  
                    l2257 65A4                      l2249 6576                      l2425 62C2  
                    l2409 6278                      l2417 628C                      l2345 6338  
                    l2337 6308                      l2433 6176                      l2441 61AE  
                    l3153 7E36                      l2275 65FC                      l2267 65D8  
                    l2259 65A8                      l2291 63B8                      l2419 62A6  
                    l2531 6D34                      l2507 6686                      l2435 617C  
                    l3155 7E40                      l3091 7CF2                      l2429 616A  
                    l2295 63CA                      l2287 638C                      l2391 6222  
                    l2527 6CE4                      l2439 6184                      l2297 63D6  
                    l2481 6C2E                      l2473 6BC8                      l2385 6210  
                    l3169 7EA6                      l3097 7D0C                      l2713 726E  
                    l2617 6FF6                      l2299 63DA                      l2459 6B0A  
                    l2387 6216                      l2395 622A                      l2491 661C  
                    l2811 752A                      l2723 728E                      l2635 7078  
                    l2477 6C08                      l2389 621C                      l2397 6244  
                    l2717 727C                      l2725 7298                      l2653 70F6  
                    l2581 6EF6                      l2399 624C                      l2743 7314  
                    l2671 7178                      l2575 6EDE                      l2489 6610  
                    l2913 7852                      l2833 75DA                      l2931 78DE  
                    l2691 71FE                      l2855 768A                      l2767 73CA  
                    l2599 6F78                      l2971 79C6                      l2955 7982  
                    l2965 79B8                      l2949 796A                      l2877 773A  
                    l2789 747A                      l2895 77C6                      l2993 7A2E  
                    l2977 79E6                      l2987 7A1C                      l2995 7A3A  
                    STR_1 7EC9                      STR_2 7ED9                      STR_3 7F87  
                    STR_4 7F13                      STR_5 7F2B                      STR_6 7F43  
                    STR_7 7F37                      STR_8 7F43                      STR_9 7EE9  
                    u1415 671E                      u3007 72EC                      u1505 655E  
                    u1425 6738                      u3017 72FA                      u1435 675C  
                    u3107 75C6                      u3027 7308                      u1445 696C  
                    u3117 7668                      u3037 73A8                      u1455 6986  
                    u3207 78CA                      u3127 7676                      u3047 73B6  
                    u1800 6CCA                      u1705 6AD2                      u1465 69AA  
                    u3217 7948                      u3137 7718                      u3057 7458  
                    u1810 6D20                      u1555 6374                      u3307 7AAA  
                    u3227 7956                      u3147 7726                      u3067 7466  
                    u1565 63A4                      u1725 6BB2                      u1805 6CC0  
                    u2381 7E1C                      u3317 7BD2                      u3237 797A  
                    u3157 77A4                      u3077 7508                      u1495 652E  
                    u1815 6D16                      u3407 7C50                      u3327 7BE0  
                    u3247 7994                      u3167 77B2                      u3087 7516  
                    u1840 6E70                      u3417 7C5E                      u3337 7BEE  
                    u3257 79DE                      u3177 7830                      u3097 75B8  
                    u1835 6DC4                      u3507 7CDC                      u3427 7C6C  
                    u3347 7BFC                      u3267 79F8                      u3187 783E  
                    u1845 6E66                      u3517 7D1C                      u3437 7C7A  
                    u3357 7C0A                      u3277 7A80                      u3197 78BC  
                    u2717 6EEE                      u3607 7E9E                      u3527 7D36  
                    u3447 7C88                      u3367 7C18                      u3287 7A8E  
                    u2807 7046                      u2727 6F08                      u3617 69E0  
                    u3537 7DAC                      u3457 7C96                      u3377 7C26  
                    u3297 7A9C                      u2817 7054                      u2737 6F54  
                    u3707 68E8                      u3627 6A62                      u3547 7DBA  
                    u3467 7CA4                      u3387 7C34                      u2907 7162  
                    u2827 7062                      u2747 6F62                      u3717 692A  
                    u3637 6A7E                      u3557 7DC8                      u3477 7CB2  
                    u3397 7C42                      u2917 7170                      u2837 7070  
                    u2757 6F70                      u3727 6792                      u3647 6858  
                    u3567 7DD6                      u3487 7CC0                      u2927 71BC  
                    u2847 70BE                      u2767 6FBE                      u3737 6814  
                    u3657 6868                      u3577 7E74                      u3497 7CCE  
                    u2937 71CA                      u2857 70CC                      u2777 6FCC  
                    u3747 682A                      u3667 6878                      u3587 7E82  
                    u2947 71D8                      u2867 70DA                      u2787 6FDA  
                    u3677 6888                      u3597 7E90                      u2957 71E6  
                    u2877 70E8                      u2797 6FE8                      u3687 6898  
                    u2967 7226                      u2887 7146                      u3697 68A8  
                    u2977 7234                      u2897 7154                      u2987 7266  
                    u2997 72DE                      _TMR2 000FBC                      _atoi 660E  
             _PWM_generar 6C62                      _main 6E90                      fsr2h 000FDA  
                    indf1 000FE7                      fsr1l 000FE1                      indf2 000FDF  
                    fsr2l 000FD9             __CFG_BORV$190 000000              lcd_goto@data 000A  
                    prodh 000FF4                      prodl 000FF3                      start 0000  
           __CFG_IESO$OFF 000000           __end_of_Lcd_Cmd 6836           __end_of_Lcd_Out 626E  
           __CFG_MCLRE$ON 000000              main@cantidad 00EF                _Lcd_Chr_CP 695E  
          Lcd_Out2@buffer 0005       __end_of_Conv_Entero 6C62           __end_of___aldiv 660E  
                   ?_atoi 0007           __end_of___almod 6434                     ?_main 0001  
                   STR_10 7F65                     STR_11 7EF7                     STR_12 7F65  
                   STR_20 7FC8                     STR_21 7FD2                     STR_13 7F77  
                   STR_14 7EE9                     STR_30 7FB9                     STR_22 7FA0  
                   STR_31 7FBE                     STR_23 7FAF                     STR_15 7F6E  
                   STR_40 7FA0                     STR_24 7FB4                     STR_32 7FC8  
                   STR_16 7FA5                     STR_41 7FAA                     STR_25 7FBE  
                   STR_33 7FD2                     STR_17 7FAA                     STR_34 7FA0  
                   STR_42 7FB4                     STR_50 7FC8                     STR_26 7FC8  
                   STR_18 7FB4                     STR_35 7FAA                     STR_43 7FBE  
                   STR_27 7FD2                     STR_51 7FD7                     STR_19 7FBE  
                   STR_28 7FA0                     STR_36 7FB4                     STR_60 7FDC  
                   STR_44 7FCD                     STR_52 7F9A                     STR_29 7FAA  
                   STR_45 7FD2                     STR_61 7FE1                     STR_53 7FE1  
                   STR_37 7FC3                     STR_46 7FA0                     STR_38 7FC8  
                   STR_62 7FF0                     STR_54 7FEB                     STR_70 7F5B  
                   STR_63 7F8E                     STR_47 7FAA                     STR_39 7FD2  
                   STR_71 7FFA                     STR_55 7F8E                     STR_72 7F92  
                   STR_48 7FB4                     STR_64 7FDC                     STR_56 7FDC  
                   STR_49 7FBE                     STR_65 7FE1                     STR_57 7FE6  
                   STR_73 7F80                     STR_66 7FEB                     STR_58 7FEB  
                   STR_74 7F1F                     STR_59 7F8E                     STR_75 7FF5  
                   STR_67 7F94                     STR_68 7F2B                     STR_76 7F05  
                   STR_69 7F4F           __end_of___lldiv 6358                     _T2CON 000FBA  
                   _PORTB 000F81                     _TRISB 000F93             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000       ___lmul@multiplicand 0005  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000           __end_of_isdigit 6100                     atoi@a 000D  
                   atoi@s 0007                     main@A 00F7                     main@V 00F3  
                   main@X 00F1                     main@Z 00F5                     tablat 000FF5  
                   status 000FD8            __CFG_T3CMX$RC0 000000             SENO_100@F7355 0166  
          __CFG_ICPRT$OFF 000000            __CFG_PBADEN$ON 000000          __end_of_Lcd_Init 695E  
        __end_of_Lcd_Out2 62D6           __initialization 6126              __end_of_atoi 6710  
            __end_of_main 7EC8                    ??_atoi 000A                    ??_main 0038  
           __activetblptr 000002            __CFG_SDOMX$RB3 000000           __CFG_CCP2MX$RC1 000000  
                  _CCPR2L 000F90                    _ANSELA 000F5B                    _ANSELB 000F5C  
                  _ANSELD 000F5E            __CFG_WDTEN$OFF 000000                 ??_Lcd_Cmd 0001  
               ??_Lcd_Out 0007            __CFG_XINST$OFF 000000               _Conv_Entero 6A8A  
        __end_of_lcd_goto 61B6                    ___lmul 61B6               ?_Lcd_Chr_CP 0001  
               ??___aldiv 0009                 ??___almod 0009                    ___wmul 6100  
          __CFG_STVREN$ON 000000                 ??___lldiv 0009      PWM_generar@AuxCCPR2L 001E  
                  clear_0 612C                    clear_1 6138                 ??_isdigit 0001  
            __mediumconst 7EC8                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8      __CFG_LS48MHZ$SYS24X4 000000                __accesstop 0060  
 __end_of__initialization 615E            __pcstackCOMRAM 0001              __pidataBANK1 6434  
         __CFG_PCLKEN$OFF 000000                 ?_Lcd_Init 0001                 ?_Lcd_Out2 0004  
     __size_of_Lcd_Chr_CP 012C                __pbssBANK0 00F8              ?_PWM_generar 000E  
       __CFG_PLLSEL$PLL4X 000000                   ?___lmul 0001                   ?___wmul 0001  
                 _CCP2CON 000F97            ___lmul@product 0009                ??_Lcd_Init 0004  
              ??_Lcd_Out2 0007                 ?_lcd_goto 0004                   _Lcd_Cmd 6710  
                 _Lcd_Out 620C                _frecuencia 003F                   __Hparam 0000  
                 __Lparam 0000                   ___aldiv 6512                   ___almod 6358  
         __size_of___lmul 0056                   ___lldiv 62D6           __size_of___wmul 0026  
                 __pcinit 6126     PWM_generar@AuxCCP2CON 0018                   __ramtop 0800  
                 __ptext0 6E90                   __ptext1 6168                   __ptext2 660E  
                 __ptext3 60E0                   __ptext4 6100                   __ptext5 6C62  
                 __ptext6 62D6                   __ptext7 626E                   __ptext8 620C  
                 __ptext9 695E                 _T2CONbits 000FBA                   _isdigit 60E0  
        ___aldiv@dividend 0001                   main@cad 00C6                   main@fre 00EE  
              ??_lcd_goto 0008      end_of_initialization 615E             __Lmediumconst 7EC8  
         ___lldiv@divisor 0005           ___lldiv@counter 000D              ?_Conv_Entero 000F  
        ___aldiv@quotient 000B              ??_Lcd_Chr_CP 0001                 Lcd_Out2@x 0004  
               Lcd_Out2@y 0007                   postdec1 000FE5                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE                 _PORTAbits 000F80  
               _PORTBbits 000F81                 _PORTCbits 000F82           Conv_Entero@conv 0013  
               _PORTDbits 000F83                 _TRISAbits 000F92                 _TRISCbits 000F94  
               _TRISDbits 000F95        __end_of_Lcd_Chr_CP 6A8A                main@cadena 00DA  
        PWM_generar@ciclo 000E      __size_of_PWM_generar 022E            __end_of___lmul 620C  
          __end_of___wmul 6126       start_initialization 6126              SENO_20@F7367 018E  
           Lcd_Out@buffer 0005              SENO_50@F7361 01B6         __size_of_Lcd_Init 0128  
       __size_of_Lcd_Out2 0068           __CFG_nLPBOR$OFF 000000                  ??___lmul 0009  
    Conv_Entero@numeroReg 0034                  ??___wmul 0005               __pdataBANK1 0100  
             __pbssCOMRAM 003B             __pcstackBANK0 0060       __end_of__stringdata 7FFE  
         __CFG_nPWRTEN$ON 000000              _isdigit$1038 0002                  ?_Lcd_Cmd 0001  
       __size_of_lcd_goto 004E                  ?_Lcd_Out 0004             __pmediumconst 7EC8  
                ?___aldiv 0001                  ?___almod 0001                  ?___lldiv 0001  
    __size_of_Conv_Entero 01D8          ___almod@dividend 0001    PWM_generar@prescalador 0016  
                ?_isdigit 0001           ___aldiv@divisor 0005           ___aldiv@counter 0009  
          ___wmul@product 0005                  Lcd_Out@x 0004          __CFG_WDTPS$32768 000000  
                Lcd_Out@y 0007                 main@F7724 0100            Conv_Entero@num 002F  
            Lcd_Init@data 0005     PWM_generar@frecuencia 0010               __stringdata 7EC9  
       ___wmul@multiplier 0001                 lcd_goto@x 0004                 lcd_goto@y 0006  
       __CFG_CFGPLLEN$OFF 000000              Lcd_Out2@data 0008                  _Lcd_Init 6836  
                _Lcd_Out2 626E       Conv_Entero@convTemp 001A         ___lmul@multiplier 0001  
             _INTCON2bits 000FF1                 copy_data0 6152          __size_of_Lcd_Cmd 0126  
        __size_of_Lcd_Out 0062                  __Hrparam 0000                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000          __size_of___aldiv 00FC          __size_of___almod 00DC  
        __size_of___lldiv 0082          __size_of_isdigit 0020            Lcd_Chr_CP@data 0003  
                __ptext10 6836                  __ptext11 6710                  __ptext12 6A8A  
                __ptext13 61B6                  __ptext14 6358                  __ptext15 6512  
                _lcd_goto 6168           ___almod@divisor 0005           ___almod@counter 0009  
           ??_PWM_generar 0012               Lcd_Cmd@data 0003             __size_of_atoi 0102  
           __size_of_main 1038                  atoi@sign 000C                  main@cant 00F0  
         main@valoresSeno 0060               Lcd_Out@data 0008                  isdigit@c 0003  
        ___lldiv@dividend 0001  Conv_Entero@punteroActual 0032       __end_of_PWM_generar 6E90  
            Conv_Entero@i 0031      __CFG_CPUDIV$NOCLKDIV 000000         Conv_Entero@numero 000F  
        ___lldiv@quotient 0009              ___aldiv@sign 000A        __CFG_FOSC$INTOSCIO 000000  
            ___almod@sign 000A             ??_Conv_Entero 0015  
